11시 10분에 시작하겠습니다. 

유연수 선생님
신호를 먼저 보내고 시작하겠습니다.
제가 먼저 2교시 신호를 보내고
여러분들이 보내면 됩니다. 


과정명 :파이썬과 R을 활용한 빅데이터 분석 및 인공지능
           전문가 양성과정

수강기간: 4월 13일 ~  10월 14일까지 
요번주는 A 반(9강의장) , B반(8강의장) 으로 분반해서 출석
다음주부터는 월요일 A반,    화요일 B반이 교실출석 
                  월요일 B반(집), 화요일 A반(집)

수업시간: 9시 40분 ~  6시 20분 (8시간)
출결신호 QR 코드로 출결신호 보냅니다. 
매정시에 입실 확인 2교시 신호 보냈습니다.  (5분안에 확인)

저희반 카페에 가입을 하시고 ZOOM url 을 확인하세요.

cafe.daum.net/oracleoracle 

이 과정 수료후 진로:  

 데이터 분석가 ( 머신러닝 데이터 분석가)
 딥러닝 개발자(연구원)
 데이터 엔지니어 

배우는 내용:              수업방식:  문제 답식의 실습위주
1. SQL 수업 :  실습위주로 수업 
2. 파이썬    :  실습위주로 수업               
3. R 을 활용한 머신러닝   --> 이론수업 + 실습 
4. 파이썬을 활용한 머신러닝 --> 이론수업 + 실습 
5. 리눅스와 하둡 : 실습위주로 수업 
6. 딥러닝              --> 이론수업 + 실습 
7. 최종 포트폴리오 

과목후에 NCS 시험 20문제(객관식)
복습위주로 공부를 하면 됩니다. 
5시 ~ 6시 20분까지 자습시간을 이용해서 복습또는 질문
어떤달은 금요일(2일) 씩 공강
반별로 스터디를 3개씩 만들어서 미리예습하거나 자격증 스터디
를 진행하면 됩니다. 

수학 스터디 또는 자격증 스터디 
머신러닝 수업 직전부터 책 미리 예습하는 스터디 
딥러닝 수업 직전부터 책 미리 예습하는 스터디 

12시까지 쉬세요 ~~

오라클 프로그램 설치파일을 다운로드 받습니다.

otn.oracle.com  으로 접속하셔서 회원가입을 해주세요

다운로드가 안된 학생들은 오라클 설치파일 usb 를
교탁 위에 올려놓을테니 가져가서 복사하세요~

12시 20분 ~ 1시 30분까지 식사하시고 수업은 1시 40분에 시작
하겠습니다. 

■ SQL 수업을 위한 오라클 설치 

1. 다운로드 받은 압축 파일 OracleXE184_Win64.zip 을
   C 드라이브 밑에 oracleinstall 이라는 폴더를 만들고
   거기가 가져다 둡니다. 

2. 윈도우키 + e 를 누르면 윈도우 탐색창이 열립니다. 

※ 설치시 주의사항 

1.  설치파일이 있는 위치에 한글이 포함되어져 있으면 안된다.
2.  설치파일 exe 파일을 실행할 때 관리자 권한으로 실행해야한다.

18c express edition ( 가벼운 오라클 버젼)

 데이터 분석가, 딥러닝 개발자 

■  SQL ?   Structure  Query  Language 
                 구조적    질의    언어 

 데이터베이스에서 데이터를 검색하고 조작하고 관리하기 위한
 컴퓨터  언어

 데이터베이스 (database) ?   data 를 저장하는 공간
 데이터베이스 소프트웨어 ?  data 를 저장하는 공간을 관리하는
                                       프로그램 

  1. Oracle  
  2. MySQL
  3. maria db
  4. mssql  
  5. postgre SQL

SQL 을 왜 배워야하는가 ?    데이터 분석가 , 딥러닝 개발자,
                                      데이터 엔지니어 전부 sql 알아야하고

 데이터를 검색하고 데이터에서 정보를 추출하고 insight 를 
 발견하려면 SQL 을 사용해야 합니다. 

SQL  ---->  R ( 데이터 시각화, 통계 패키지, 머신러닝 패키지) 
----> 파이썬( 데이터 시각화, 통계패키지, 머신러닝 패키지)
--->  리눅스와 하둡( noSQL) ----> 딥러닝 
                              ↓
           정형화된 데이터, 비정형화된 데이터(텍스트)를 다 검색할 수 
            있게 됩니다.          

* SQL 의 종류 

1. Query --->  데이터 검색 언어
 예: select 문 
2. DML 문 (Data Manipulation Language) --> 데이터 조작 언어
 예: insert, update, delete, merge 
3. DDL 문  (Data  Definition   Language) ---> 데이터 정의 언어
 예:  create, alter, drop, truncate, rename 
4. DCL 문  (Data Control Language) ---> 데이터 제어 언어
 예:  grant, revoke
5. TCL 문  (Trasaction  Control Language) -->  트랜젝션 제어 언어 
 예:  commit, rollback, savepoint 

노트정리:   onenote , 에버노트,  메모장

오라클 SQL 실습 예제 스크립트:

alter session set nls_Date_format='RR/MM/DD';
drop table emp;
drop table dept;


CREATE TABLE DEPT
       (DEPTNO number(10),
        DNAME VARCHAR2(14),
        LOC VARCHAR2(13) );


INSERT INTO DEPT VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO DEPT VALUES (20, 'RESEARCH',   'DALLAS');
INSERT INTO DEPT VALUES (30, 'SALES',      'CHICAGO');
INSERT INTO DEPT VALUES (40, 'OPERATIONS', 'BOSTON');

CREATE TABLE EMP (
 EMPNO               NUMBER(4) NOT NULL,
 ENAME               VARCHAR2(10),
 JOB                 VARCHAR2(9),
 MGR                 NUMBER(4) ,
 HIREDATE            DATE,
 SAL                 NUMBER(7,2),
 COMM                NUMBER(7,2),
 DEPTNO              NUMBER(2) );


INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,'81-11-17',5000,NULL,10);
INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,'81-05-01',2850,NULL,30);
INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,'81-05-09',2450,NULL,10);
INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,'81-04-01',2975,NULL,20);
INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,'81-09-10',1250,1400,30);
INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,'81-02-11',1600,300,30);
INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,'81-08-21',1500,0,30);
INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,'81-12-11',950,NULL,30);
INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,'81-02-23',1250,500,30);
INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,'81-12-11',3000,NULL,20);
INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,'80-12-09',800,NULL,20);
INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,'82-12-22',3000,NULL,20);
INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,'83-01-15',1100,NULL,20);
INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,'82-01-11',1300,NULL,10);
commit;

 2시 43분까지 쉬세요 ~~~~~~~~


 B강의장에 소리가 아까보다 잘 들리면 줌 채팅창으로 말씀해주세요


■ 오라클에 접속하기 

화면 왼쪽아래에 보면 검색창이 있는데 여기에 알파벳으로 cmd 라고
하면 명령 프롬프트창이 보입니다. 

오른쪽 마우스 눌르고 관리자 권한으로 실행합니다. 

■ 실습할 테스트 유져 생성하기 


예제1.  사원(emp) 테이블에 있는 컬럼이 뭐가 있는지 조회하기 

describe emp

문제1.  부서(dept) 테이블의 컬럼이 뭐가 있는지 조회하시오!

■ 001 테이블에서 특정 열(COLUMN) 선택하기

예제.  사원 테이블에서 이름과 월급을 조회하시오 !

 select  ename, sal
   from  emp;

문제2.  이름과 직업과 부서번호를 출력하시오 !

답:  select  ename, job, deptno
        from  emp ;

문제3.  사원번호, 이름과 월급과 입사일을 출력하시오 ! 

답:   select  empno, ename, sal, hiredate
          from emp; 

문제4.   사원이름, 월급, 커미션을 출력하시오 !

  43분까지 쉬세요 ~~~

 SQL 책 나눠주고 시작하겠습니다. 

■ 002 테이블에서 모든 열(COLUMN) 출력하기 p34

예제:  emp 테이블의 모든 컬럼을 출력하시오 

select  *  
  from  emp;

* 화면에 출력되는 결과의 가로 사이즈 확인방법 

SQL>  show  lines 

* 화면에 출력되는 결과의 가로 사이즈를 늘리는 방법 

SQL> set  lines  300
SQL> show  lines 

* 화면에 출력되는 결과의 세로 사이즈를 늘리는 방법

SQL>  show pages 

SQL>  set  pages  100

SQL> select * 
        from  emp;  

   6교시 신호 보냈습니다. 

문제5.  부서(dept) 테이블의 모든 컬럼을 출력하시오 !

답: select   *
      from  dept;

■ 003 컬럼 별칭을 사용하여 출력되는 컬럼명 변경하기

예제:  select  ename  as  이름,  sal   as  월급
           from   emp;

문제6.  이름과 직업과 입사일을 출력하는데 컬럼명을 한글로 
          이름, 월급, 입사일로 출력되게하시오 !

select ename as  이름, job  as  직업, hiredate  as 입사일
  from  emp;

문제7.  이름, 월급*12 를 출력하는데 sal*12의 컬럼명을 연봉으로 출력하시오

select  ename, sal * 12   as  연봉 
  from  emp;

※ 설명:  위와같이 산술 연산식의 컬럼명을 다른 이름으로 변경하고자 할때
            컬럼별칭이 유용하게 사용됩니다. 

■ 004 연결 연산자 사용하기(||)

 컬럼과 컬럼을 연결해서 출력하고자 할때 사용합니다. 

예제1:  select  ename ||  sal
           from   emp;

예제2:  select ename || ' 의 월급은 ' ||  sal
            from  emp; 

문제8.  아래와 같이 결과가 출력되게하시오 !

KING 의 직업은 PRESIDENT 입니다.
BLAKE 의 직업은 ANALYST 입니다. 
         :
         :
답:  select  ename || ' 의 직업은 ' ||  job  || ' 입니다. '
         from   emp;

43분 까지 쉬세요 ~~~

■005 중복된 데이터를 제거해서 출력하기(DISTINCT)

예제1:  직업만 출력하시오 ! 

 select   job
   from  emp; 

예제2: 직업을 출력하는데 중복을 제거해서 출력하시오 

 select  distinct  job
   from  emp;

문제9.  부서번호를 출력하는데 중복을 제거해서 출력하시오 !

답:  select  distinct   deptno 
         from   emp;

■ 006 데이터를 정렬해서 출력하기(ORDER BY)

예제1.  이름과 월급을 출력하는데 월급이 낮은값부터 높은값 순으로
         출력되게하시오 !

select  ename,  sal
   from  emp
   order  by   sal   asc;  

※ 설명:    asc :  오름차순으로 정렬해라 ~ 
              desc :  내림차순으로 정렬해라 ~

예제2. 이름과 월급을 출력하는데 월급이 높은값부터 낮은값 순으로 
         출력되게하시오 !

select  ename, sal
  from  emp
  order  by  2  desc; 

 7교시 신호 보냈습니다. 

문제10. (오늘의 마지막 문제)  이름과 입사일을 출력하는데 최근에 입사한
          사원부터 출력되게 하시오 ! 

 SQL 문장을 답글로 올려서 검사 받으세요 ~~

 나머지 시간은 자유롭게 자습하시면 됩니다.  
 
 6시에 신호 보내겠습니다.  
 6시 20분에 큐알 코드 찍고 마치겠습니다. 

■ 어제 배웠던 내용 복습 

001 테이블에서 특정 열(COLUMN) 선택하기
002 테이블에서 모든 열(COLUMN) 출력하기
003 컬럼 별칭을 사용하여 출력되는 컬럼명 변경하기
004 연결 연산자 사용하기(||)
005 중복된 데이터를 제거해서 출력하기(DISTINCT)
006 데이터를 정렬해서 출력하기(ORDER BY)

문제11.   직업을 출력하는데 ABCD 순으로 정렬해서 출력하시오 !



문제12.  위의 결과를 다시 출력하는데 중복을 제거해서 출력하시오 !

■ 007 WHERE절 배우기 1(숫자 데이터 검색) 

  특정 검색 조건에 해당하는 데이터만 검색하고 싶을때 where 절을 
  사용하면 됩니다. 

 예제:  월급이 3000 인 사원들의 이름과 월급을 출력하시오 !

   select  ename, sal
     from   emp
     where  sal = 3000;   -- 검색조건 

문제13.  사원번호가 7788번인 사원의 사원번호와 이름과 월급을 출력하시오 !


문제14. 부서번호가 10번인 사원들의 사원이름과 부서번호를 출력하시오 !


■ 008 WHERE절 배우기 2(문자와 날짜 검색)

문자와 날짜를 검색조건으로 사용할 때는 문자열 양쪽에 싱글 쿼테이션
마크를 둘러줘야 합니다.

예:  이름이 SCOTT 인 사원의 이름과 월급을 출력하시오 !

    select  ename, sal
       from   emp
       where  ename = 'SCOTT'; 

문제15.   직업이 SALESMAN 인 사원들의 이름과 직업을 출력하시오 !


문제16.  입사일만 출력하시오 !


문제17.  81년 11월 17일에 입사한 사원들의 이름과 입사일을 출력하시오 !


문제18.  직업이 SALESMAN 인 사원들의 이름과 월급과 직업을 출력하는데
            월급이 높은 사원부터 출력하시오 !
             ( order by 절은 항상 맨 마지막에 작성합니다.)

답:   select  ename, sal, job
         from emp
         where  job='SALESMAN'
         order  by  sal  desc;


 43분까지 쉬세요 ~

■ 009 산술 연산자 배우기(*, /, +, -)

예제: select  ename, sal * 12 + 300
         from emp;  

 더하기 부터 실행하고 싶다면 ?  

select  ename, sal * ( 12 + 300 )  as  연봉 
         from emp; 

문제19. 연봉이 936000 인 사원의 이름과 연봉을 출력하시오 !

 select  ename, sal * ( 12 + 300 )  as  연봉
   from  emp
   where   sal * (12 + 300) = 936000;

※ 산술연산자의 연산자가 실행되는 순서를 변경하고 싶을때는 괄호를 사용해야
   합니다.

  where 절에는 컬럼별칭을 사용할 수 없습니다. 왜냐하면 실행되는 순서 때문
  입니다. 

■ 010 비교 연산자 배우기 1(〉, 〈, 〉=,〈=, =, !=,〈〉, ^=)

 예제:  월급이 3000 이상인 사원들의 이름과 월급을 출력하시오 !

   select  ename, sal
     from  emp
     where  sal >= 3000; 

문제20.  연봉(sal*12) 이 36000 이상인 사원들의 이름과 연봉(sal*12) 을
            출력하시오 !


문제21. 직업이 SALESMAN 이 아닌 사원들의 이름과 직업을 출력하시오 !


■  011 비교 연산자 배우기 2(BETWEEN AND)

예제:  월급이 1000 에서 3000 사이인 사원들의 이름과 월급을 출력하시오
        ( 월급이 1000 이상이고 3000 이하인 사원들)

 select  ename, sal
   from  emp
   where  sal  between 1000  and 3000;

 select ename, sal
   from  emp
   where  sal >= 1000  and  sal <= 3000;

문제21.  81년 02월 01일부터 81년 12월 31일 사이에 입사한 사원들의 이름과 
           입사일을 출력하시오 !


문제22. 월급이 1000 에서 3000 사이가 아닌 사원들의 이름과 월급을 출력하시오
         
select  ename, sal
 from  emp
 where   sal  not  between  1000  and 3000 ;

문제23. 81년도에 입사한 사원들의 이름과 입사일을 출력하시오 !

select  ename, hiredate
  from  emp
  where  hiredate  between  '81/01/01'   and  '81/12/31';

문제24. 81년도에 입사하지 않은 사원들의 이름과 입사일을 출력하시오 !

select  ename, hiredate
  from  emp
  where  hiredate not between  '81/01/01'   and  '81/12/31';

■ 012 비교 연산자 배우기 3(LIKE)

예제:   이름의 첫번째 철자가 A 로 시작하는 사원들의 이름을 출력하시오!

select  ename
  from  emp
  where  ename  like  'A%'  

문제25.  이름의 끝글자가 T 로 끝나는 사원들의 이름을 출력하시오 !


문제26.  이름의 두번째 철자가 M 인 사원들의 이름을 출력하시오 !

 select  ename
  from  emp
  where  ename like '_M%'

 ※  like 와 짝꿍 옵션 :   %  --> 와일드 카드이고 이 자리에 뭐가 와도 관계없다.
                                         그리고 그 갯수가 몇개가되든 관계없다.
                                _   -->  이 자리에 뭐가 와도 관계없는데 그 갯수는
                                           한개여야한다.

문제27. 이름의 세번째 철자가  M 인 사원들의 이름을 출력하시오 !

 select  ename
   from  emp
   where  ename like '__A%';

문제28. 81년도에 입사한 사원들의 이름과 입사일을 출력하시오 !

select  ename, hiredate
  from  emp
  where  hiredate  like '81%';


■ 013 비교 연산자 배우기 4(IS NULL)

  null 값을 검색하고자할 때 사용하는 비교연산자가 is null 입니다. 

예제1.  이름과 커미션을 출력하시오 !


예제2.  커미션이 null 인 사원들의 이름과 커미션을 출력하시오 !

 select  ename, comm
  from  emp
  where comm is  null; 

문제29. 커미션이 null 이 아닌 사원들의 이름과 커미션을 출력하시오 !

 select  ename, comm
  from  emp
  where comm is not null; 

문제30.  관리자 번호(mgr) 가 null 인 사원의 이름과 직업을 출력하시오 !

■ 014 비교 연산자 배우기 5(IN)

  여러개의 값을 비교할 때는 in 연산자를 사용합니다.

예제:  사원번호가 7788, 7902, 7369 번인 사원들의 사원번호와 이름을 출력하시오

문제31.  직업이 SALESMAN , ANALYST 인 사원들의 이름과 직업을 출력하시오 !


문제32.  직업이 SALESMAN, ANALYST 가 아닌 사원들의 이름과 직업을 출력
            하시오 !


문제33.  부서번호가 10번, 20번인 사원들의 이름과 월급과 부서번호를 출력
           하는데 월급이 높은 사원부터 출력하시오 !

 select  ename,  sal  as  월급, deptno
   from   emp
  where  deptno in  ( 10, 20 )
  order  by  2  desc; 

■ 015 논리 연산자 배우기(AND, OR, NOT)

예제: 직업이 SALESMAN 이고 월급이 1000 이상인 사원들의 이름과 월급과
       직업을 출력하시오 !

SELECT  ename, sal, job
  FROM   emp
  WHERE   job='SALESMAN'   and  sal >= 1000; 

문제34. (점심시간 문제)  81년도에 입사했고  직업이 SALESMAN 인 사원들의
          이름과 월급과 직업과 입사일을 출력하시오 !

■  015 논리 연산자 배우기(AND, OR, NOT)

예제:  직업이 SALESMAN 이거나 월급이 1000 이상인 사원들의 이름과
        월급과 직업을 출력하시오 !

 SELECT  ename, sal, job
   FROM  emp
   WHERE  job='SALESMAN'  or  sal >= 9000;


문제35.  이름의 첫글자가 S 로 시작하거나 이름의 첫글자가 M 으로 시작하는
           사원들의 이름을 출력하시오 !

select  ename
  from  emp
  where ename  like 'S%'  or  
           ename  like 'M%' ;

문제36.  직업이 SALESMAN 이 아닌 사원들의 이름과 직업과 월급을 
            출력하는데 월급이 높은 사원부터 출력하시오 !



문제37.  직업이 ANALYST 이고 부서번호가 20번인 사원들의 이름과 
            월급과 직업과 부서번호를 출력하는데 월급이 낮은 사원부터
            높은 사원순으로 출력하시오 !



문제38.  이름과 커미션을 출력하는데 커미션이 높은 사원부터 출력하시오 

select  ename, comm
  from  emp
  order  by  comm  desc  nulls  last;

※ nulls last : null 을 맨 뒤로 출력하겠다
   nulls first :  null 을 맨 앞에 출력하겠다

■ sqldeveloper 툴을 사용해서 오라클에 접속하기
           ↓
  오라클의 데이터를 검색할 때 좀더 편하고 쉽게 검색하기 위해서
  사용하는 GUI (Graphic User Interface)툴 

 도스창 ---------------------------------------------> 오라클 database
   ↓
 sqldeveloper ------------------------------------->  오라클 database 
    
    클라이언트  -------------------------------------->   서버 
 
      sqldeveloper                                            database
 
        크롬                                                     구글의 서버실 서버

                              1. 서버의 아이피 주소 (건물주소) : 127.0.0.1
                              2. 데이터베이스 이름  : xe
                              3.  포트 번호  (건물내의 통로) : 1521 
                              4. 유져이름 : c##scott
                              5. 패스워드 :  tiger 

도스창을 새로 엽니다.

■ 016 대소문자 변환 함수 배우기(UPPER, LOWER, INITCAP)

 upper 는 알파벳 데이터를 대문자로 변환하는 함수입니다.
 lower 는 알파벳 데이터를 소문자로 변환하는 함수입니다.
 initcap 은 알파벳 데이터의 첫번째 철자는 대문자로 출력하고 나머지는 소문자로
 출력하는 함수 입니다. 

예제:  select   ename, upper(ename), lower(ename), initcap(ename)
             from  emp;

문제38.  데이터가 대용량 데이터여서 안의 데이터가 대문자로 되어있는지
            소문자로 되어있는지 확인이 한눈에 안되는 상황일때 이름이 allen 인
            사원의 이름과 월급을 출력하시오 !

select  ename, sal
  from emp
  where  upper(ename) = 'ALLEN';

select  ename, sal
  from emp
  where  lower(ename) = 'allen';
■ 017 문자에서 특정 철자 추출하기(SUBSTR)

예제:  select  ename , substr( ename, 3, 1 )
              from   emp;


문제39. 이름을 출력하고 그 옆에 이름의 첫번째 철자만 출력하시오 

 select  ename, substr( ename, 1, 1 )
  from emp;

문제40.  위의 결과를 다시 출력하는데 이름의 첫번째 철자를 소문자로 출력
            하시오!

 select  ename, lower( substr( ename, 1, 1 ) )
  from emp;

문제41.  이름의 첫번째 철자는 대문자로 출력하고 나머지는 소문자로 
            출력하시오 !

select  initcap(ename)
  from emp ;

문제42. 위의 결과를 initcap 사용하지 말고 upper, lower, ||  를 사용해서
           똑같이 출력하시오 !

 select   upper( substr(ename, 1, 1 ) ) || lower( substr( ename, 2, 10) )
   from   emp;

■ 018 문자열의 길이를 출력하기(LENGTH)

예제:  이름을 출력하고 그 옆에 이름의 길이를 출력하시오 ! 

 select  ename,  length(ename)
    from  emp;  

문제43. 이름의 철자길이가 5 이상인 사원들의 이름과 이름의 철자의 길이를
           출력하시오 !



문제44. 이름과 이름의 철자의 길이를 출력하는데 이름의 철자의 길이가
           큰것부터 작은순으로 출력하시오 ! 

■ 019 문자에서 특정 철자의 위치 출력하기(INSTR)

예제:  select  ename, instr(ename ,  'M')
            from  emp; 

문제45. 이름에 알파벳 A 를 포함하고 있는 사원들의 이름을 출력하시오 !

select  ename
 from  emp
 where  instr( ename, 'A')  != 0;               

■ 020 특정 철자를 다른 철자로 변경하기(REPLACE)

 특정 철자를 다른 철자로 치환하는 함수 

예제:  select   ename,  replace(ename,'M', 'KK')
          from  emp;

실습 스크립트:  

create  table  emp02
(empno    number(10),
 ename    varchar2(30),
  email     varchar2(100) );

insert  into  emp02  values( 1111, '김인호', 'emp1234@naver.com') ;
insert  into  emp02  values( 2222, '최영희', 'ttteee1256@gmail.com');
insert  into  emp02  values( 3333, '박인식', 'aaabbcc34@daum.net' );
commit;

문제46. 성씨가 김씨인 학생의 이름과 이메일을 출력하시오 !

select ename, email
 from emp02
 where  ename like '김%';

문제47. emp02에서 이름의 두번째 글자만 출력하시오 !
                                      
select  substr(ename, 2, 1 )
  from  emp02;

문제48. 아산병원의 환자명 전광판의 이름을 출력하시오 ! (emp02)

 김○호
 최○희
 박○식 

select  replace(ename, substr(ename, 2, 1 ), '○')
  from  emp02;
                                                                     
select substr(ename,1,1) || '○' || substr(ename,3,1)
from emp02;

남궁철민  --> 남궁○민

■ 021 특정 철자를 N개 만큼 채우기(LPAD, RPAD)

예제:  select  ename, lpad( sal, 10, '*')
           from  emp; 

설명:  월급을 출력하는데 전체 10자리를 잡고 월급을 출력하고 나머지 왼쪽에
         * 로 빈자리를 채워넣어라 ~

예제:  select  ename, rpad( sal, 10, '*')
           from  emp; 

설명:  월급을 출력하는데 전체 10자리를 잡고 월급을 출력하고 나머지 오른쪽에
         * 로 빈자리를 채워넣어라 ~

■ 022 특정 철자 잘라내기(TRIM, RTRIM, LTRIM)

오늘의 마지막 문제. emp02 에서 이메일의 도메인만 출력하시오 ! (선택)

  naver
  gmail
  duam 

예제:  이메일에서 끝에 .com 을 잘라내어서 출력하시오 !

 select   rtrim( email, '.com')
    from  emp02;

설명:  email 에서 오른쪽에 있는 .com 을 잘라내어 출력함   

문제49.  emp02 에서 email 을 출력하는데 email 에서  @ 의  
            자리 인덱스번호(몇번째 철자인지)를 출력하시오 !

select   instr( email, '@')
   from  emp02; 

문제50.  emp02에서 email 을 출력하는데 @ 이후에 나오는 철자들만 잘라내서
           출력하시오 !

emp1234@naver.com

ttteee1256@gmail.com 
aaabbcc34@daum.net

 select  instr(email, '@')
  from  emp02;

답: select  substr( email, instr(email,'@')+1,100)
      from emp02;

문제51. (오늘의 마지막 문제)  emp02 의 이메일에서 도메인만 출력하세요(선택)

  naver
  gmail
  daum

 5시 신호 보냈습니다. ~~~

 나머지 시간은 자유롭게 자습하세요  

 6시에 신호 보내겠습니다. 




데이터 준비 :
                                naver.com ----> navar.com
                                gmail.com  ---->  ggml.com
                                daum.net  ---->  kaum.net

9,'sophia','여자', '94/07/26',27,'kt','전자공학','서울특별시 강남구 역삼동','sophia@navar.com'

insert  into  emp13
 values( 9,'sophia','여자', '94/07/26', 27,'kt','전자공학','서울특별시 강남구 역삼동','sophia@navar.com');

drop  table emp13; 

alter  session  set  nls_date_format='RR/MM/DD';

create   table  emp13
( empno    number(10),
  ename     varchar2(30),
  gender     varchar2(10),
  birth        date,
  age         number(10),
  telecom   varchar2(10),
  major      varchar2(50),
  address    varchar2(80),
  email       varchar2(80) );
  
	
insert into emp13
values(29, 'jenny', '여자', '83/11/21', 39, 'kt', '전자공학', '수원시 영통구 영통동', 'jenny@navar.com');

insert into emp13
values(24,'HAN','남자','96/09/19',26,'kt','컴퓨터정보통신공학','서울특별시 관악구 성현동','han@ggml.com');

insert into emp13
values(15, 'Charlie','남자','96/09/15',26,'kt','경영경제','서울특별시 송파구 장지동', 'Charlie@navar.com')

insert into emp13 values(28,'matthew','남자','96/06/06',26,'LG','정보보호학','수원시 영통구 하동','matthew@navar.com');


insert into emp13
values( 22,'james','남자', '96/02/17', 26,'lg','자동차학','서울특별시 관악구 중앙동','james@navar.com');

insert into emp13
values(18,'Avocado','남자','95/11/26','27','kt','컴퓨터공학','서울특별시 서초구 서초동','kinsley1004@navar.com');


insert  into  emp13
 values( 17, 'chloe', '여자', '97/12/15', 25, 'lg', '문화인류', '서울특별시 광진구 능동', 'chloe@navar.com');


insert into emp13
values(1,'kes','남자','93/10/18',27,'lg','경영','서울특별시 강남구 논현동','kes@navar.com');


insert into emp13
values(16, 'geonwoo', '남자', '94/12/17', 28,'skt', '신소재공학', '서울특별시 마포구 상수동', 'parkgeonwo@navar.com');

insert into emp13
values(10,'jane','여자','97/07/23',25,'kt','통계학','경기도 의왕시 학의동','jane@navar.com');

insert into emp13
values(7,'janet','여자','96/08/06',26,'sk','사회학','인천광역시 연수구 선학동','janet@ggml.com');

insert into emp13
values(21, 'steve', '남자', 91/09/22, 31, 'kt', '국제통상', '경기도 용인시 죽전동', 'steve@navar.com');

insert into emp13
values(3,'hellen','여자','94/03/10',27,'SKT','경제학','경기도 안양시 동안구 호계동','hellen@ggml.com');

Insert into emp13
values( 25,'panda','남자','83/08/26','38','LG','미생물공학','서울특별시 강남구 역삼동','qpanda@kaum.net' );

insert into emp13
values(12,'ewan','남자','96/12/06',26,'kt','IT경영','경기도 오산시 금암동','ewan@navar.com');

insert into emp13
values( 19, 'kane', '남자', '89/02/27', 33, 'lg', '신소재공학', '수원시 영통구 이의동', 'kane@ggml.com')

insert into emp13
values(2,'edgar','남자','86/03/20','36','kt','생물공학','인천광역시 계양구 작전동','edgar@navar.com');

insert into emp13
values( 20,'Antonio','남자','95/10/25',27,'kt','경영학','서울특별시 동작구 상도동','Antonio@navar.com');

insert into emp13
values(14,'bruce','남자','96/01/10',26,'lg','네트워크','서울특별시 성동구 송정동','djdsla789@navar.com');

insert into emp13
values(23,' serah','여자','99/02/14',23,'kt','컴퓨터정보통신공학','서울특별시 강동구 천호동','iamserah@navar.com');

insert into emp13
values(21, 'steve', '남자', '91/09/22', 31, 'kt', '국제통상', '경기도 용인시 죽전동', 'steve@navar.com');


insert into emp13
values(13,'zinuk','남자','94/05/23',28,'kt','사진','서울특펼시 관악구 신림동','ziiiiiiink@navar.com');

insert into emp13
values(6, 'Jamie','여자', '91/04/14',31,'lg','국제개발협력학','서울특별시 송파구 송파동', 'jamie@navar.com');

insert into emp13
values(27,'sam','남자','88/01/27',34,'kt','물리학','서울특별시 관악구 신림동','sam@kaum.net');

insert into emp13
values(30, 'heejun','여자','95/07/27','27','lg','화학','수원시 영통구 하동','heejun@navar.com');

insert into emp13
values(5.'eryn','여자','82/07/31','40','kt','경영학','경기도 성남시 분당구','eryn@navar.com');

Insert into emp13
Values(9, 'krystal', '여자', '98/01/18', '24', 'skt', '통계학', '경기도 시흥시 배곧동','krystal@navar.com');

Insert into emp13
values(11,'jenny', '여자', '97/05/02', 25, 'lg', '경제금융', '서울특별시 영등포구 신길동', jenny@navar.com);


insert into emp13
values( 26,'luna','여자','95/01/28','27','skt','응용통계학','경기도 광명시 철산동','luna@navar.com');

insert into emp13
values( 8,’Elin’,’여자’,’97/08/09’,25,’lg’,’스포츠건강재활’,’서울특별시 도봉구 창동’, ‘uuuu0809@navar.com’);


Insert into emp13
values(4,'erin','여자','96/12/30',26,'skt','한국언어문학','인천광역시 부평구 구산동','fca1230@navar.com');

commit;

 유연수  선생님 
 나이 : 5?
 
 SQL ----> dba (데이터 베이스 관리자) ------> 오라클 ---> DBA 데이터 분석가
 ---->  

 50분 부터 A 반  --->  B반

  0. 사원번호:
  1. 이름 :
  2. 나이 :
  3. 전공과 전에 했던 일들 :
  4. 왜 이 과정을 등록했는지?
  5. 앞으로 하고 싶은것 ?
  6. 반친구들에게 하고 싶은말?
 

12시까지 쉬시고 신호 보내고 바로 점심시간 문제를 내주겠습니다. 

문제52.   우리반 테이블에서  이름과 전공과 나이를 출력하는데  나이가 
             높은 학생부터 출력하시오 !

 select  ename,  major,  age
   from   emp13
   order  by   age  desc; 

문제53.  전공이 통계학, 물리학과인 학생들의 이름과 전공을 출력하시오 !

select  ename, major
 from  emp13
  where  major in ('통계학','물리학');

select ename, major
 from emp13
 where  major  like  '%통계%'
     or   major  like  '%물리%'; 

문제54.(점심시간 문제)  통신사 kt , lg 인 학생들의 이름과 나이와 통신사를 
          출력하는데 나이가 높은 학생부터 출력하시오 !

  라인 검사 입니다. 다된 라인은 손을 들어주시고 검사받고 식사하러 가세요~


※ rtrim, ltrim , trim 함수 활용 사례

 insert   into  emp(empno, ename, sal )
   values( 1111, 'jack     ', 3400);

commit;  

예제1.   이름이 jack 인 사원의 이름과 월급을 출력하시오 !

select  ename, sal
  from  emp
  where  rtrim(ename)  = 'jack';
              ↓
  양쪽의 공백을 다 잘라버리겠다. 

delete  from   emp  
 where  empno = 1111; 

commit;
■ 023 반올림해서 출력하기(ROUND)

예제:  select  round(786.67, -2 )
           from  dual;  

문제55.  사원 테이블에서 월급을 출력하는데 십의 자리에서 바로 반올림해서
            출력되게하시오 !

 select  round(sal, -2)
    from  emp;

문제56.  우리반 테이블(emp13) 에서 나이를 출력하는데 일의 자리에서 반올림
            되어서 출력되게하시오 !

 select  round(age, -1)
   from  emp13;

■ 024 숫자를 버리고 출력하기(TRUNC)

 예제:  select  trunc( 786.787,  2 )
            from  dual;  

문제57.  우리반 테이블에서 나이를 출력하는데 나이를 비식별처리하기 위해서
            27 ---> 20대, 32 ---> 30대  이렇게 결과가 출력되게하시오 !

select trunc(age, -1) || '대'
from emp13;

■ 025 나눈 나머지 값 출력하기(MOD)

예제:  select  mod( 27, 2 )
          from  dual;  

문제58.  이름과 나이를 출력하는데 나이가 홀수인 학생들만 출력하시오!

 select  ename, age
   from  emp13
   where  mod(age,2) = 1;

■ 026 날짜 간 개월 수 출력하기(MONTHS_BETWEN)

* 날짜함수 4가지

 1. months_between : 날짜와 날짜 사이의 개월수를 출력
 2. add_months : 날짜에서 개월수를 더한 날짜를 출력
 3. last_day :   특정 날짜의 달의 마지막 날짜를 출력
 4. next_day :  해당날짜의 달에서 앞으로 돌아올 특정 요일의 날짜를 출력

 * 오늘날짜 출력하기 

   select  sysdate
     from  dual; 

예제1. 내일날짜를 출력하시오 ! ( 오늘날짜에서 하루 더한 날짜를 출력하시오)

 select  sysdate + 1 
   from dual;

예제2.  사원테이블에서  해당 사원이 입사한 날짜부터 오늘까지 총 몇일 근무
          했는지 출력하시오 !

 날짜 - 날짜 = 숫자
 날짜 + 숫자 = 날짜
 날짜 - 숫자  = 날짜 

 select   round( sysdate - hiredate  )
    from  emp; 

예제3.  여러분들이 태어난 날짜부터 지금까지 총 몇일 살았는지 출력하시오 !

 select  round(sysdate -  birth)
   from  emp13
   where  empno = 1; 

예제4.   태어난 날짜부터 지금까지 총 몇 달 살았는지 출력하시오 ! 

 select  months_between( sysdate,  birth )
   from  emp13
   where  empno = 1; 

문제59.  사원 테이블의 사원의 이름을 출력하고 입사한 날짜부터 오늘까지 
            총 몇달 근무했는지 출력하시오 ! 

select  ename, trunc(months_between( sysdate,  hiredate ))
      from  emp;

문제60.  아래와 같이 결과가 출력되게하시오 !
 
 KING 은 472 달 근무했습니다.
 BLAKE 은 479달 근무했습니다.
            :
            :

select  ename || ' 은 ' ||  round(months_between(sysdate,hiredate)) ||
           '달 근무했습니다'
 from  emp; 

■ 027 개월 수 더한 날짜 출력하기(ADD_MONTHS)

예제:  오늘 날짜에서 100달뒤의 날짜를 출력하시오 

   select  sysdate,  add_months( sysdate, 100 )
        from  dual ;

문제61.  이름, 입사한 날짜, 입사한 날짜의 200달 뒤의 날짜를 출력하시오 !

 select  ename, hiredate, add_months( hiredate, 200 )
   from  emp;

■  028 특정 날짜 뒤에 오는 요일 날짜 출력하기(NEXT_DAY)

예제:   오늘 날짜를 출력하고 오늘날짜에서 바로 돌아오는 월요일의 날짜를
          출력하시오 !
 
       select   sysdate,   next_day( sysdate,'월요일')
         from  dual; 

문제62.  오늘날짜에서 100달뒤에 돌아오는 월요일의 날짜를 출력하시오 !

select  next_day( add_months( sysdate, 100 ), '월요일')
   from   dual; 

■ 029 특정 날짜가 있는 달의 마지막 날짜 출력하기(LAST_DAY)

예제1:  오늘날짜가 속한 달의 마지막 날짜가 무엇인가 ?

   select   last_day( sysdate )
           from dual; 

예제2.   2021년 3월달의 마지막 날짜는 몇일인가 ?

   select  last_day( to_date('2021/03/01','RRRR/MM/DD') )
       from  dual; 

설명: to_date('2021/03/01','RRRR/MM/DD')  은 ?

  2021/03/01 에서 2021 은 년도 4자리(RRRR) 이고 
   03 은 달이고 01 은 일이다라고 알려주는것이다. 

문제63.  오늘부터 요번달 말일 까지 총 몇일 남았는지 출력하시오 !

    45분까지 쉬세요 ~~

■ 030 문자형으로 데이터 유형 변환하기(TO_CHAR)

▩ 함수

 1. 단일행 함수  : 문자함수: upper, lower, initcap, substr, instr, length, replace,
                                    rpad, lpad, trim , rtrim, ltrim
                       숫자함수: round, trunc, mod
                       날짜함수: months_between, add_months, last_day, next_day
                       변환함수: to_char, to_number, to_date
                       일반함수: nvl, decode, case
 2. 다중행 함수:   max
                       min
                       avg
                       sum
                       count
                       통계함수들(표준편차, 분산등을 구하는 함수)

 to_char :  문자로 형변환하는 함수 


       날짜형         문자형        숫자형


예제1.  오늘날짜를 문자로 출력하시오 !

  select  to_char( sysdate )
    from  dual; 

예제2.  오늘이 무슨 요일인지 출력하시오 !

   select  to_char( sysdate, 'day')
       from   dual;  

※  day  ---> 요일로 출력하는 날짜 포멧 

문제64. 내가 무슨요일에 태어났는지 출력하시오 !

select  to_char( birth, 'day')
  from  emp13
 where  empno = 12;

 select  to_char( to_date('1996/08/06','RRRR/MM/DD'), 'day')
   from  dual;

 책 93페이지 to_char에서 사용할 수 있는 날짜 포멧 
  48페이지

 년도:  RRRR, RR, YYYY, YY
 달 :  MM , MON
 일 :  DD 
 시간: HH, HH24
 분:  MI
 초 : SS
 요일 : DAY, DY, D

문제65.  이름, 입사일, 입사한 요일을 출력하시오 !

 select  ename, hiredate, to_char( hiredate, 'day')
   from  emp;

문제66.  이름, 입사일, 입사한 년도 4자리를 출력하시오 !

 select ename, hiredate, to_char(hiredate,'RRRR')
  from  emp;

문제67.  이름, 입사일, 입사한 달을 출력하시오!

 select ename, hiredate, to_char(hiredate,'MM')
  from  emp;

문제68.  이름, 생일, 태어난 달을 출력하는데 태어난달을 ascending 하게
           정렬해서 출력하시오 !

 select  ename, birth, to_char(birth, 'mm')
  from  emp13
  order  by  3  asc; 

 요일 : DAY, DY, D

 select   ename, hiredate, to_char(hiredate,'dy'), to_char(hiredate, 'd')
     from   emp;

문제69.   이름, 생일, 태어난 요일을 출력하는데 월화수목금토일 순으로 정렬해서
            출력하시오! 

 요일 : DAY, DY, D

문제70. (오늘의 마지막 문제)  월급이 1000 에서 4000 사이인 사원들의 
           이름과 월급과  입사일과 입사한 년도 4자리를 출력하는데
           입사한 년도를 ascending 하게 정렬해서 출력하고  컬럼명을 
           한글로 이름, 월급, 입사일, 입사년도라고 출력되게하시오!

 5시 신호 보냈습니다.   마지막 문제 올리고 자유롭게 자습하세요 ~~~
 6시 신호 보냈습니다. 

공지사항:  1. 다음주부터는 9강의장에서 수업이 진행이 됩니다. 
              B 반은 다음주부터 9강의장으로 출석

           월   화   수   목   금
강의장   A   B     A    B     A
집         B   A     B    A     B

  오라클 설치 미리 해놓으세요 ~

■ 030 문자형으로 데이터 유형 변환하기(TO_CHAR)

복습:     1. 기본 SELECT 문 :   select   컬럼명
                                        from   테이블명
                                        where  검색조건
                                        order by  정렬을 할 컬럼명 

            2. 함수 :     단일행 함수 :    문자:  upper, lower, initcap, replace,
                                                         substr, trim, rtrim, ltrim, lpad, rpad,
                                                         length, instr
                                                숫자:  round, trunc, mod
                                                날짜:  months_between
                                                        add_months
                                                        next_day
                                                        last_day

                                                변환: to_char, to_number, to_date
                                                일반:
                            복수행 함수 :   max, min, sum, avg, count

to_char:    날짜 -------> 문자
              숫자 -------> 문자

예제:  이름과 월급을 출력하는데 월급을 출력할 때 천단위를 부여하시오 !

 select  ename,  to_char( sal, '999,999' )
   from  emp;

※ 설명:  숫자 9는 이자리에 숫자 어떤게 와도 관계없다는 뜻입니다. 

문제71.  이름과 연봉(sal*12*100) 을 출력하는데 천단위와 백만단위의 콤마도 
            출력되게하시오 !

 select  ename,to_char(sal*12*100,'999,999,999')  as 연봉
  from  emp;

* 위의 결과에서 앞에 달러 단위를 붙여서 출력하려면?

 select  ename,to_char(sal*12*100,'$999,999,999')  as 연봉
  from  emp;

* 위의 결과에서 앞에 원화(\) 단위를 붙여서 출력하려면?

 select  ename,to_char(sal*12*100,'L999,999,999')  as 연봉
  from  emp;                             

■  031 날짜형으로 데이터 유형 변환하기(TO_DATE)

    
     날짜            문자             숫자  

예제1.  81년 11월 17일에 입사한 사원들의 이름과 입사일을 출력하시오 !

 select  ename, hiredate
   from  emp
   where  hiredate ='81/11/17';

※ 설명:  위와 같이 날짜 검색을 해도 검색이 잘 되었던 이유는 81년이 년도이고
            11일이 달이고 17이 일이다 라는것을 오라클이 인식했기 때문입니다.
            이미 기본 셋팅이 날짜 데이터는 '년도/달/일' 로 되어있다.

* 지금현재 셋팅되어있는 날짜 데이터의 형식을 확인하는 방법

 select  *
   from  nls_session_parameters;  

* 날짜형식이 MM/MON/RR 이면 다음과 같이 검색해야합니다.

 select  ename, hiredate
  from  emp
  where  hiredate='11/NOV/81';

* 내가 어느 나라에 있든 어떠한 환경에 있든 그냥 81년 11월 17일에 입사한 사원의
   데이터를 오류 없이 검색하는 방법은 아래와 같습니다. 

 select   ename,  hiredate
  from  emp
  where   to_char(hiredate,'RR/MM/DD') ='81/11/17';

설명:   emp 테이블의 hiredate 의 날짜 형식을 RR/MM/DD 로 강제로 다 변환시킨다

또는

select  ename, hiredate
  from  emp
  where   hiredate = to_date('81/11/17', 'RR/MM/DD');

설명:  지금 이 컴퓨터의 오라클의 날짜 형식이 어떻게 되어있는지는 잘 모르겠지만
         확실한건 81은 년도이고 11은 달이고 17은 일이야 ~ 라고 알려준다. 

문제72.  81년도에 입사한 사원들의 이름과 입사일을 출력하시오 !
            ( like 쓰지 말고 between .. and 로 하세요)

select   ename,  hiredate
  from   emp
  where   hiredate   like  '81%';

select  ename, hiredate
  from  emp
  where   hiredate   between  to_date('81/01/01','RR/MM/DD')   
                                and  to_date('81/12/31', 'RR/MM/DD');

설명:  위의 SQL은 우리나라에서 수행하던 영국이나 프랑스에서 수행하든
         오류없이 수행됩니다. 

* 날짜 형식 포멧 

 년도:  RRRR, RR, YYYY, YY
  달  :  MON, MM
  일  :  DD
 시간:  HH,  HH24
 분  :  MI
 초  :  SS
 요일 :  DAY, DY, D 
 주   :   IW, WW

* 년도 날짜 형식 RR 과 YY 의 차이점 

1. 현재 셋팅되어져 있는 날짜 형식을 확인하는 방법
  
 select  * from   nls_session_parameters;

 NLS_DATE_FORMAT       RR/MM/DD

2. 현재 셋팅되어져 있는 날짜 형식을 YY/MM/DD 로 변경하기 

alter  session  set  nls_date_format='YY/MM/DD';

select  * from  nls_session_parameters;

3. 81년 11월 17일에 입사한 사원들의 이름과 입사일을 출력하시오 

SQL> select ename,  hiredate
  2   from emp
  3   where  hiredate ='81/11/17';

선택된 레코드가 없습니다.

                         RR            vs            YY
                         81                           81
            1981              2081       1981           2081
현재연도            2021                        2021
               현재연도에서                   현재세기 
            가장 가까운 연도

select  ename, hiredate
 from  emp
 where to_char(hiredate,'RR/MM/DD')='81/11/17';

SELECT   ename, hiredate
 from  emp
 where  hiredate = to_date('81/11/17', 'RR/MM/DD');

alter  session  set   nls_date_format='RR/MM/DD';

문제73. (복습)  직업이 SALESMAN 이 아닌 사원들의 이름과 월급과 직업을
                    출력하는데 월급이 높은 사원부터 출력하고 월급을 출력할 때
                    천단위가 표시되게하시오 !

select  ename, to_char(sal,'999,999') , job
  from  emp
  where job !='SALESMAN'
  order by  sal desc;

문제74. (복습) 우리반 테이블에서 수요일에 태어난 학생들의 이름과 나이와 생일을
          출력하는데 나이가 높은 학생부터 출력하시오 !

select  ename, age, birth
  from emp13
  where  to_char(birth,'day') ='수요일'
  order  by  age  desc; 

문제75.(복습) 나이가 30대인 학생들의  이름과 나이와 전공을 출력하시오 !

select ename, age, major
from emp13
where trunc(age,-1) = 30;  

select  ename, age, major
 from emp13
 where  age  between  30   and   39;

문제76. (복습)  통신사가 lg, kt 인 학생들의 이름과 통신사를 출력하시오 ! 

select ename, telecom
from emp13
where lower(telecom) in ('kt', 'lg');

select ename, telecom                 45분까지 쉬세요 !~~
 from  emp13
 where  telecom  in ('kt', 'LG', 'lg');

■ 032 암시적 형 변환 이해하기

 예제:  select  ename, sal
           from  emp
           where  sal = '3000' ;  

           where   숫자 = 문자 ;

           위와 같은 경우는 오라클이 2개중에 하나의 데이터 유형을 변환시켜줍니다. 
           숫자가 우선순위가 높으므로 문자를 숫자로 변환시켜줍니다.
           결국  아래와 같이 실행됩니다.

          where  sal = 3000 ;

  select  ename, sal
     from  emp
     where  sal  like  '30%';
              숫자       문자 

 설명:  위의 경우에는  30% 를 숫자로 변경할 수 없으므로 어쩔 수 없이
          sal 을 문자로 변경합니다.

 select  ename, sal
  from emp
  where to_char(sal)  like  '30%';


  select  ename, sal
     from  emp
     where  sal  like  '30%';

문제77. (복습문제)  직업이 SALESMAN 이고 부서번호가 30번인 사원들의
          이름, 입사일, 입사한 요일과 월급을 출력하는데 월급을 출력할때
          천단위 표시가 나오게 하시오 !        


문제78.  나이가 20대이고 전공에 컴퓨터 가 포함된 학생들의 이름과 나이와 
           전공을 출력하시오 !

select  ename, age, major
 from  emp13
 where  age  between  20  and 29  
   and   major   like  '%컴퓨터%'; 

문제79. (점심시간 문제) 부서번호가 10번 20번인 사원들의 이름과 월급과 직업과
          부서번호를 출력하는데  직업을 ABCD 순으로 출력되게하고 
          월급을 출력할때에 천단위가 표시되게하고 그리고 컬럼명이 한글로
          이름, 월급, 직업, 부서번호로 출력되게 하시오 !

■ 033 NULL 값 대신 다른 데이터 출력하기(NVL, NVL2)

함수:  1. 단일행 함수 : 문자, 숫자, 날짜, 변환, 일반
        2. 복수행 함수 :  MAX, MIN, AVG, SUM, COUNT

       단일행 함수                       vs                   복수행 함수 

           함수                                                      함수 

예제1.  이름과  커미션을 출력하시오 !



예제2.  이름,  월급,  커미션,  월급 + 커미션을 출력하시오 !

 select  ename, sal, comm,  sal + comm
  from  emp; 

  select  ename, sal, comm,  nvl(comm, 0),  nvl(comm, 100)
     from  emp;                   ↓
                               Null VaLue

 ※ 설명:  nvl(comm, 0) 은  comm 이 null 이면 0 으로 출력하고 null 이 아니면
            그냥 그 값을 그대로 출력하라는 뜻입니다. 

  null 값 대신에 다른값을 출력하게 하는 함수가 바로  nvl 함수 입니다. 

  이름, 월급, 커미션, 월급 + 커미션을 출력하시오 !

  select  ename, sal, comm, sal + nvl(comm,0)
   from  emp;

문제80.  이름, 커미션을 출력하는데 커미션이 null 데이터는 no comm 이라는 글씨로
            출력되게하시오 ! 

ENAME                      COMM
-------------------- ----------
KING                       no  comm
BLAKE                      no  comm
CLARK                      no  comm
JONES                      no  comm 
MARTIN                     1400

답:   select   ename,  nvl( to_char(comm), 'no comm')
           from  emp; 

문제81.  이름,  관리자 번호(mgr) 를 출력하시오 !


문제82.  이름, 관리자 번호(mgr) 를 출력하는데 관리자 번호 null 인 사원들은
            no manager 라는 글씨로 출력되게하시오 !

ENAME                       MGR
-------------------- ----------------
KING                       no manager 
BLAKE                      7839
CLARK                      7839
JONES                      7839
MARTIN                     7698
ALLEN                      7698

 select  ename,  nvl( to_char(mgr), 'no manager')
  from  emp;

* nvl2 함수 

예제:  select  ename, sal, comm,  nvl2( comm, sal+comm, sal)
               from  emp; 

문제83. (복습문제) 직업이 SALESMAN, ANALYST 인 사원들의 이름과 월급과 
            커미션을 출력하는데 커미션이 높은 사원부터 출력하시오 ! 

select ename, sal, comm
 from emp
 where job in ('SALESMAN', 'ANALYST')
 ORDER BY comm DESC nulls  last; 

문제84. (복습문제)   월급이 1000 에서 3000 사이인 사원들의 이름과 월급과 
            입사일을 출력하는데  최근에 입사한 사원부터 출력하시오 ! 

select  ename, sal, hiredate
  from  emp
  where  sal  between  1000   and  3000
  order  by  hiredate   desc; 

문제85. (복습문제)  이름, 직업, 월급을 출력하는데 직업은 ascending 하게 출력하고
                         직업이 ascending 하게 출력된것을 기준으로 월급을 descending
                          하구 출력하시오 !

select  ename, job, sal
  from  emp
  order by  2  asc, 3  desc;

※ 설명: order by 절에 컬럼을 여러개 사용할 수 있습니다. 

문제86. (복습문제)  이름, 입사한 년도 4자리,  월급을 출력하시오 !

select  ename,  to_char(hiredate,'RRRR'),  sal
  from  emp; 

문제87. (복습문제)  이름, 입사한 년도 4자리, 월급을 출력하는데 
           입사한 년도 4자리는 ascending 하게 출력하고  입사한 년도 4자리가
           ascending 하게 출력된것을 기준으로 월급을 descending 하게 출력하시오

 SELECT ename, to_char(hiredate,'RRRR'),sal
 FROM emp
 ORDER BY 2, 3 desc;

■  034 IF문을 SQL로 구현하기 1(DECODE)

  decode 함수는 SQL 에서 if 문을 구현하고 싶을때 사용하는 함수입니다. 

예제1.  이름, 직업, 보너스를 출력하는데 보너스가 직업이 SALESMAN이면
          보너스를 9000 을 출력하고 아니면 0 을 출력하시오 !

select  ename, job, decode( job, 'SALESMAN', 9000, 0 )  as 보너스
   from   emp;

문제88.  이름,  통신사,  보너스를 출력하는데 통신사가 kt 면 보너스를 3000 을
           출력하고 아니면 0 을 출력하시오 !

select  ename, telecom, decode( lower(telecom) , 'kt', 3000, 0 ) as 보너스
   from  emp13;

문제89.  이름, 부서번호, 보너스를 출력하는데 부서번호가 10번이면 보너스를
             9000 을 출력하고 부서번호가 20번이면 보너스를 5000 을 출력하고
             나머지 부서번호는 0 을 출력하시오!

select  ename,  deptno,  decode( deptno, 10, 9000, 
                                                       20, 5000,
                                                            0  )  as  보너스 
   from   emp;

문제90.  이름,  직업,  보너스를 출력하는데  직업이 SALESMAN 이면 6000 을
            출력하고 직업이 ANALYST 면 3000 을 출력하고 
            직업이 MANAGER 면 2000 을 출력하고 나머지 직업은 0 으로 출력되게
            하시오 !

select ename, job,
      decode(job,'SALESMAN',6000,
                     'ANALYST', 3000,
                     'MANAGER',2000,
                                      0) as 보너스
from emp;


문제91.  이름,  입사한 년도 4자리,  보너스를 출력하는데
            입사한 년도가 1980 년이면 9000 을 출력하고 
            입사한 년도가 1981 년이면 8000 을 출력하고 나머지 년도는 1000 으로 
            출력되게하시오 

select  ename, to_char(hiredate, 'RRRR'), 
         decode( to_char(hiredate,'RRRR'), '1980',  9000,  
                                                     '1981', 8000, 
                                                                 0 )  as  보너스 
   from  emp;


문제92.   이름, 월급, 보너스를 출력하는데  월급이 3000 이상이면 보너스를 9000
            을 출력하고 월급이 3000 보다 작으면 0 을 출력하시오 !

위의 문제는 case 문을 이용해야 합니다. 

■ 035 IF문을 SQL로 구현하기 2(CASE)

이름, 월급, 보너스를 출력하는데  월급이 3000 이상이면 보너스를 9000
 을 출력하고 월급이 3000 보다 작으면 0 을 출력하시오 !

select  ename, sal,  case  when   sal >= 3000  then   9000
                                   else   0   end  as  보너스
   from   emp;

문제93.  이름, 월급, 보너스를 출력하는데 월급이 3000 이상이면 보너스를
           9000 을 출력하고 월급이 2000 이상이면 (2000이상이면서 3000보다 작으면)
           8000 을 출력하고 나머지(2000 보다 작은 사원들)는 0 을 출력하시오 

select  ename, sal,  case  when   sal >= 3000  then   9000
                                 when   sal >= 2000  then   8000
                                   else   0   end  as  보너스
   from   emp;

문제94.(복습문제)  통신사가 sk 인 학생들의 이름과 나이와 통신사를 출력하시오!

 select  ename, age, telecom
  from  emp13
  where  lower(telecom)  like '%sk%'  

문제95. (복습문제)  통신사가 sk , lg 인 학생들의 이름과 나이와 통신사를 출력
            하시오 ! 

select  ename, age, telecom
 from  emp13
 where  lower(telecom)  like  '%sk%'  
     or   lower(telecom)  like  '%lg%'; 

문제96.  이름, 통신사, 보너스를 출력하는데 통신사가  sk 면 보너스를 9000 을 출력
           하고 통신사가 lg 면 보너스를 7000 을 출력하고 나머지 통신사는 0 을 
           출력하시오 !

 select  ename, telecom, 
                    case  when  lower(telecom) like  '%sk%'  then 9000
                            when  lower(telecom) like  '%lg%'  then 7000
                    else  0  end as  보너스
    from  emp13;


문제97. (복습문제) nvl2 함수를 이용해서 이름,  보너스를 출력하는데 
           커미션이 null 이면 보너스를 자신의 월급이 되게하고 
           커미션이 null 이 아니면 보느스를 자신의 월급 + 커미션이 되게하시오 !

select   ename,  nvl2( comm, sal+comm, sal ) as 보너스
   from  emp;

문제98.  위의 결과를 nvl2 함수 쓰지 말고 case 문을 이용해서 출력하시오 !

select  ename, 
             case  when   comm  is  null   then   sal
                    when    comm  is  not  null   then  sal + comm
                    end   as  보너스
     from  emp;

■ 036 최대값 출력하기(MAX)

예제:  사원 테이블에서 최대월급을 출력하시오 !

  select  max(sal)
    from  emp; 

문제99. 우리반에서 최대나이를 출력하시오 !

 select  max(age)
   from  emp13;

문제100.  직업이 SALESMAN 인 사원들중에서의 최대월급을 출력하시오 !

 select  max(sal)
   from  emp
   where   job='SALESMAN' ;

문제101.  통신사가 sk 인 학생들중에서의 최대나이를 출력하시오 ! 

 select  max(age)
   from  emp13
   where  lower(telecom)  like  '%sk%';

문제102.  부서번호가 20번인 사원들중에서의 최대월급을 출력하시오 !

 select  deptno, max(sal)
  from  emp
  where  deptno = 20
  group  by  deptno;

※ group by 절의 역활 ?    데이터를 grouping 하는 역활 

 select 절에 그룹함수와 더불어 컬럼명을 기술하고자 할 때는 반드시 
  group by 절에 해당 컬럼명을 적어주고 실행해야 오류를 피할 수 있습니다. 

문제102.  직업이 SALESMAN 인 사원들 중에서의 최대월급을 출력하는데
             아래와 같이 직업도 같이 출력하시오 !
 
  결과:   SALESMAN  1600 

select  job,  max(sal)
 from  emp
 where  job='SALESMAN'
 group  by  job; 

예제.  직업, 직업별 최대월급을 출력하시오 !

select  job,  max(sal)
 from  emp
 group  by  job; 

문제103.  부서번호, 부서번호별 최대월급을 출력하시오 !

 select  deptno,  max(sal)
   from  emp
   group  by  deptno; 

문제104.  성별, 성별별 최대나이를 출력하시오 !

 select   gender,  max(age)
    from  emp13
    group  by  gender;

문제105.  위의 결과를 다시 출력하는데 나이가 높은 데이터부터 출력하시오 !

 select   gender,  max(age)
    from  emp13
    group  by  gender
    order  by  2  desc; 

문제106. (오늘의 마지막 문제)  직업과 직업별 최대월급을 출력하는데
           직업이 SALESMAN 은 제외하고 출력하고 직업별 최대월급이 높은것부터
           출력하는데 직업별 최대월급에 천단위를 부여해서 출력하고 컬럼명을
           한글로 직업, 최대월급이라고 출력되게 하시오 ~


  5시 신호 보냈습니다. 
  6시 신호 보냈습니다. 
  나머지 시간은 자유롭게 자습하세요 ~~  
  B 반은 9강의장 자기 자리에 오라클 설치를 미리 해놓으시거나
  화요일 아침에 일찍와서 하세요 ~~~
  다음주 월요일은 A 반이 반 출석 B 반은 집이나 스터디 카페또는 카페에서 접속하시면
  됩니다. 

■ 예제37. 최소값 출력하기(MIN)

예제.  사원 테이블에서 최소 월급을 출력하시오 ! 


문제107.   우리반 테이블(emp13) 에서 최소 나이를 출력하시오 !



문제108.   직업이 SALESMAN 인 사원들중에서의 최소월급을 출력하시오 ! 

 select  min(sal)
   from   emp
   where  job='SALESMAN';  

문제109.   부서번호가 20번인 사원들중에서의 최소월급을 출력하시오 !



문제110.   우리반에서 나이가 30대인 학생들 중에서의 최소나이를 출력하시오 !



문제111.  직업,  직업별 최소월급을 출력하시오 !

 select  job,  min(sal)
  from  emp
  group   by   job; 

※ group by 절의 역활 ?     1. grouping 하는 역활

문제112.  부서번호, 부서번호별 최소월급을 출력하시오 ! 



문제113.  위의 결과를 다시 출력하는데 최소월급이 높은것부터 출력하시오 !

 select  deptno, min(sal)
   from  emp
   group  by deptno
   order  by  min(sal)  desc;

문제114.  통신사, 통신사별 최소나이를 출력하시오 !

 select   decode( lower(telecom), 'skt', 'sk', lower(telecom) ) , min(age)
   from   emp13
   group  by   decode( lower(telecom), 'skt', 'sk', lower(telecom) ) ;

설명:  telecom 이 SKT 면  sk 로 출력하고 아니면 그냥 telecom 으로 출력하시오 !

문제115.  우리반 테이블에서 이메일에서 이메일의 도메인명을 출력하시오 !

 navar
 ggml
 kaum 
  :
  :
  :

 ewan@navar.com

select  rtrim( rtrim( substr( email, instr(email,'@') + 1 ), '.com'), '.net')
   from  emp13;

문제116.  이메일에서 도메인명을 출력하고 도메인별 최소 나이를 출력하시오 !

select  rtrim( rtrim( substr( email, instr(email,'@') + 1 ), '.com'), '.net'), min(age)
   from  emp13
  group  by  min(age) ;

■ 038 평균값 출력하기(AVG)

예제1.  사원 테이블에서 평균 월급을 출력하시오 !

 select   avg(sal)
   from  emp;

예제2.  위의 결과에서 소숫점이하는 안나오게 반올림하시오 !

 select   round(avg(sal))
   from  emp;

문제117. 우리반 테이블에서 평균 나이를 출력하시오 !

select  round(avg(age))
  from  emp13;

문제118.   직업, 직업별 평균월급을 출력하시오 !

 select   job,  avg(sal)
  from   emp
  group   by  job; 

문제119.   위의 결과를 다시 출력하는데 직업별 평균월급이 높은것 부터 출력하시오 !

 select   job,  avg(sal)
  from   emp
  group   by  job
  order  by  avg(sal)  desc;  

* 평균값 구하는 avg 의 특징 

 1. 커미션을 출력하시오 !

  select  comm   
    from  emp; 

 2. 커미션의 평균값을 출력하시오 !

  select  avg(comm)
   from  emp; 

※ group 함수는 null 값을 무시한다 !!!

문제120.  그럼 커미션을 다 더해서 전체 사원수로 나누게 하려면 어떻게 해야하는가?

  select  avg( nvl(comm,0) )
   from  emp;

문제121.   부서번호, 부서번호별 평균월급을 출력하는데 평균월급이 
              높은것부터 출력하시오 !

select  deptno,  avg(sal)
  from  emp
  group   by  deptno
  order  by   2  desc; 

문제122. 위의 결과에서  소수점 이후는 소수점 이후 두번째 자리까지만 출력하시오 !

 DEPTNO   AVG(SAL)
------- ----------
     10    2916.66
     20       2175
     30   1566.66

select  deptno,  to_char(avg(sal), '9999.99')
  from  emp
  group   by  deptno
  order  by   2  desc;

문제123.  위의 결과를 다시 출력하는데 천단위 표시도 출력되게 하시오! 

select  deptno,  to_char(avg(sal), '9,999.99')
  from  emp
  group   by  deptno
  order  by   2  desc;

문제124. 위의 결과를 다시 출력하는데 컬럼명을 한글로 부서번호, 평균월급이라고
            출력되게하시오 !

select  deptno  as 부서번호,  to_char(avg(sal), '9,999.99')  as 평균월급 
  from  emp
  group   by  deptno
  order  by   2  desc;

문제125. 위의 결과를 다시 출력하는데 금액 앞에 달러($)가 붙어서 출력되게하시오 !

select  deptno  as 부서번호,  to_char(avg(sal), '$9,999.99')  as 평균월급 
  from  emp
  group   by  deptno
  order  by   2  desc;

문제126.  우리반 테이블에서 통신사와 통신사별 평균나이를 출력하시오 !

 select   decode( lower(telecom), 'skt', 'sk', lower(telecom) ) , avg(age)
   from   emp13
   group  by   decode( lower(telecom), 'skt', 'sk', lower(telecom) ) ;

문제127.  직업, 직업별 평균월급을 출력하는데 직업이 SALESMAN 은 제외하고
             출력하고 직업별 평균월급이 높은것부터 출력하시오 ! 

select  job,  avg(sal)
  from   emp
  where  job != 'SALESMAN'
  group  by   job
  order   by   2  desc; 

문제128. 입사일, 입사한 년도를 4자리로 출력하시오 ! 



문제129.  입사한 년도(4자리)를 출력하고 입사한 년도별 평균월급을 출력하시오 !

 select  to_char(hiredate,'RRRR'),  avg(sal)
   from  emp
   group  by  to_char(hiredate,'RRRR');

문제130. 위의 결과를 다시 출력하는데  입사한 년도를 ascending 하게 출력하시오!

 select  to_char(hiredate,'RRRR'),  avg(sal)
   from  emp
   group  by  to_char(hiredate,'RRRR')
   order  by  1  asc; 

문제131.  이메일의 도메인명을 출력하고 도메인별 평균나이를 출력하시오 !

  navar         28
   :               : 

select  rtrim( rtrim( substr( email, instr(email,'@') + 1 ), '.com'), '.net'), avg(age)
   from  emp13
  group  by  rtrim( rtrim( substr( email, instr(email,'@') + 1 ), '.com'), '.net');

■ 039 토탈값 출력하기(SUM)

예제1.  사원 테이블에서 월급의 토탈값을 출력하시오 !

 select  sum(sal)
   from   emp;

문제132.  직업이 SALESMAN 인 사원들 중에서의 토탈월급을 출력하시오 !


문제133.  SQL 로 숫자를 1부터 10까지 출력하시오 !

 "계층형 질의문"

 select  level
   from   dual
   connect   by  level <= 10;  

문제134.  1부터 10까지의 합은 얼마인가 ?

 1+2+3+4+ ... + 10 = ?

select  sum(level)
  from  dual
  connect  by  level <= 10;

문제135.  1부터 10까지 숫자중에 어느 하나의 숫자가 없다. 그 숫자가 뭔지 
             한번에 알아내시오 ! (답글로 올려주세요 )

create   table   emp100
(  empno     number(10) );

insert  into  emp100  values(1);
insert  into  emp100  values(2);
insert  into  emp100  values(3);
insert  into  emp100  values(4);
insert  into  emp100  values(5);
insert  into  emp100  values(7);
insert  into  emp100  values(8);
insert  into  emp100  values(9);
insert  into  emp100  values(10);
commit;

문제136.  부서번호, 부서번호별 토탈월급을 출력하는데 부서번호별 토탈월급이
             높은것부터 출력하시오 !

 select  deptno, sum(sal)
   from  emp
   group  by  deptno
   order by  2  desc;

문제137. 위의 결과를 다시 출력하는데 토탈월급의 금액에 천단위 표시를 하시오 !

 select  deptno, to_char( sum(sal), '999,999')
   from  emp
   group  by  deptno
   order by  2  desc;

문제138.  (점심시간 문제)   직업,  직업별 토탈월급을 출력하는데
             직업이 SALESMAN 은 제외하고 출력하고  직업별 토탈월급이 높은것부터
             출력하는데 직업별 토탈월급을 출력할때 천단위가 표시되게하고 
              컬럼명을 한글로 직업, 토탈월급이라고 출력되게하시오 !

문제139.  직업, 직업별 토탈월급을 출력하시오 ~



문제140.  직업, 직업별 토탈월급을 출력하는데 직업별 토탈월급이 6000 이상인것만
             출력하시오 !

select job, sum(sal)
 from  emp
 where  sum(sal) >= 6000
 group  by job;

설명: 책 123 페이지에 보면 where 절에는 그룹함수로 검색조건을 줄 수 없다고 
       나옵니다.  where  절 대신에 having 절을 사용해야 합니다. 

select  job, sum(sal)
  from  emp
  group  by  job
  having  sum(sal) >= 6000; 

 * select 문의 6가지절 코딩순서

   select      검색할 컬럼명 
      ↓
     from      검색할 테이블명   
      ↓
     where     검색조건 
       ↓
     group  by   그룹핑할 컬럼명 
       ↓
     having     그룹함수로 검색조건주는 절 
       ↓
     order  by   정렬할 컬럼명 


문제141.  직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN은 제외하고 출력
             하고 직업별 토탈월급이 5000 이상인것만 출력하시오 ~

 select   job,  sum(sal)
   from  emp
   where   job  != 'SALESMAN'
   group   by   job
   having  sum(sal) >= 5000; 

문제142.  위의 결과를 다시 출력하는데 직업별 토탈월급이 높은것부터 출력하시오 !

 select   job,  sum(sal) 토탈값
   from  emp
   where   job  != 'SALESMAN'
   group   by   job
   having  sum(sal) >= 5000
   order  by   토탈값  desc;

문제143.  통신사,  통신사별 평균나이를 출력하는데 통신사별 평균나이가
             27 세 이상인것만 출력하시오 ~

 select  decode( lower(telecom), 'skt', 'sk', lower(telecom) )  as  통신사, 
          avg(age)  as 평균나이
    from   emp13
    group  by  decode( lower(telecom), 'skt', 'sk', lower(telecom) )
    having  avg(age) >= 27;

문제144.  위의 결과를 다시 출력하는데  통신사별 평균나이가 높은것부터 출력하시오

 select  decode( lower(telecom), 'skt', 'sk', lower(telecom) )  as  통신사, 
          avg(age)  as 평균나이
    from   emp13
    group  by  decode( lower(telecom), 'skt', 'sk', lower(telecom) )
    having  avg(age) >= 27
    order  by  2  desc; 

문제145.  위의 결과를 다시 출력하는데  lg 는 제외하고 출력하시오 !

 select  decode( lower(telecom), 'skt', 'sk', lower(telecom) )  as  통신사, 
          avg(age)  as 평균나이
    from   emp13
    where   lower(telecom) != 'lg'
    group  by  decode( lower(telecom), 'skt', 'sk', lower(telecom) )
    having  avg(age) >= 27  
    order  by  2  desc; 

문제146.  성별,  성별별 평균나이를 출력하시오 !

select   gender,  avg(age)
  from  emp13
  group  by  gender; 

■  040 건수 출력하기(COUNT)

예제1.   사원 테이블의 전체 인원수가 어떻게 되는지 확인하시오 !

 select  count(empno)
   from  emp;

 select  count(*)
   from  emp; 

예제2.  커미션만 count 하시오 !

 select   count(comm)
   from  emp;

문제147.   직업,  직업별 인원수를 출력하시오 !

 select   job,  count(*)
   from   emp
   group  by  job; 


문제148.  성별, 성별별 인원수를 출력하시오 !

select  gender, count(*)
  from  emp13
  group  by  gender; 

문제149.  나이, 나이별 인원수를 출력하는데 나이가 높은 데이터부터 출력하시오!

 select  age, count(*)
  from  emp13
  group  by  age
  order   by    2  desc;

문제150.  부서번호와 부서번호별 인원수를 출력하는데 부서번호가 20번은 제외하고
             출력하고 부서번호별 인원수가 2명 이상인것만 출력하고 부서번호별 
             인원수가 높은것부터 출력하시오 !

select   deptno,  count(*)
  from  emp
  where  deptno != 20
  group   by  deptno 
  having   count(*) >= 2
  order  by   2  desc; 

문제151.  커미션을 count 하시오 !

 select   count(comm)
   from  emp;

문제152.  위의 SQL 을 다시 출력하는데 14명이 다 나오게 하시오 !

 select  count( nvl(comm,0) )
  from  emp;

* 함수 복습 :  

  함수의 종류 2가지?    1. 단일행 함수 : 문자, 숫자, 날짜, 변환, 일반
                              2. 복수행 함수 :  max, min, avg, sum, count, 
                                                    variance(분산),  stddv (표준편차)
■  variance  함수 

  " 분산을 구하는 그룹함수"
     ↓
   데이터의 퍼짐 정도 
   평균을 중심으로 얼마나 데이터가 퍼져있는지 데이터의 퍼짐정도 

예:  사원 테이블의 월급의 분산값을 출력하시오 !

 select  variance(sal)
  from  emp;

문제153.  우리반 나이 데이터의 분산값을 출력하시오 !

select  variance(age)
 from  emp13;

■ stddv  함수

  " 표준편차 구하는 함수"
       ↓ 
  분산값에 루트를 씌운값을 말한다. 

예제1. SQL 루트 함수 예제
 
 select  sqrt(4)  from  dual;

예제2.   우리반 나이 데이터의 표준편차를 출력하시오 !

 select  stddev(age)  from  emp13;

문제154.  우리반 나이 데이터의  분산값에 루트를 씌워서 위의 표준편차값과
             동일한 결과가 나오는지 출력하시오 !

select sqrt( variance(age) )
 from  emp13;

문제155.  사원 테이블에 직업의 종류가 몇개가 있는지 출력하시오 !


   결과 :  5 


문제155번을 위한 예제1.   직업을 출력하는데 중복을 제거해서 출력하시오 !

 select   distinct  job
   from  emp;

문제155번을 위한 예제2.  위의 결과를 count 하시오 !

 select   count(distinct  job)
   from  emp;

문제156.  우리반의  전공의 종류가 몇가지 인지 출력하시오 !

 select  count( distinct  major )
   from   emp13;

문제157.  (SQL로 알고리즘 문제풀기1)  숫자 1번부 10까지의 숫자중에
             홀수의 합은 얼마인가 ?

select  sum(level)
 from dual
 where mod(level, 2)=1  
 connect by level <=10;

문제158.  직업별 토탈월급중에서 최대값만 출력하시오 !

 select  max(sum(sal))
  from emp
  group by job


update   emp13
  set  age=28
where empno = 3;

commit;

■ 041 데이터 분석 함수로 순위 출력하기 1(RANK)

 * 데이터 분석을 용이하게 해주는 함수

 1. rank
 2. dense_rank
 3. ntile
 4. listagg
 5. lead
 6. lag
 7. pivot
 8. unpivot
 9. 누적 데이터 출력하는 함수 

예제1.  이름, 월급, 월급에 대한 순위를 출력하시오 !

 select  ename, sal,  rank()  over  ( order  by  sal  desc)  as  순위
    from   emp;

문제159.  이름, 나이, 순위를 출력하는데 순위가 나이가 높은 학생부터
             순위가 부여되게하시오 !


문제160.  직업이 SALESMAN 인 사원들의 이름, 직업, 월급, 순위를 출력하는데
             순위가 월급이 높은 사원부터 순위를 부여하시오 !

 select  ename,  job, sal,  rank()  over ( order  by sal desc ) as  순위
   from  emp
   where   job='SALESMAN';

문제161.  위의 결과에서 1등만 출력하시오 !

select   *
  from   (
        select  ename,  job, sal,  rank()  over ( order  by sal desc ) as  순위
          from  emp
          where   job='SALESMAN'  
           )
  where   순위 = 1 ;


문제162. 우리반에서 나이가 제일 많은 학생(나이의 순위가 1위인 학생) 의 이름과
             나이와 순위를 출력하시오 !

select *
  from  ( 
         select  ename, age,  rank()  over  ( order  by   age   desc )  as  순위
            from   emp13
          )
  where   순위 = 1; 

문제163. 살인이 가장 많이 일어나는 장소가 어디인가 ?

 데이터를 먼저 구해야한다 --->  공공 데이터 포털 

create table crime_loc
( crime varchar2(60),  -- 범죄유형 
 loc varchar2(60),      -- 범죄장수
 ccount number(10));  -- 범죄건수

예제1.  살인이 일어난 장소와 건수를 출력하시오 

select  loc, ccount
  from  crime_loc
  where  crime='살인';

예제2.  장소, 건수, 순위를 출력하는데 순위가 건수가 높은 순으로 출력하시오 !

select  *
 from  (  
      select  loc,  ccount, rank()  over ( order  by  ccount  desc) 순위
             from  crime_loc
            where  crime='살인'
          )
 where   순위 = 1;

문제164. (오늘의 마지막 문제)  절도가 많이 일어나는 장소를 1위부터 5위까지
             출력하시오 !


■ 042 데이터 분석 함수로 순위 출력하기 2(DENSE_RANK)

 rank 의 경우는 같은 순위가 여러명이 있으면 다음순위가 바로 이어지지 않습니다.
 그 여러명을 다 포함시킨후의 순위가 출력이 됩니다. 

예제:  select  ename, sal, dense_rank()  over  ( order  by  sal  desc) 순위
           from   emp; 


문제165.  이름, 입사일,  순위를 출력하는데 순위가 입사한 순서데로 순위를 부여하시오



문제166.  직업, 이름, 월급과 순위를 출력하는데  월급이 높은 사원순으로 순위를 
             부여하시오 !

 select   job,  ename,  sal,  dense_rank()  over  ( order  by  sal  desc ) 순위
    from   emp;

문제167.  위의 결과를 다시 출력하는데 직업별로 각각 월급에 대한 순위가 부여되게 
            하시오 !

 select   job,  ename,  sal,  dense_rank()  over  (  partition  by  job 
                                                               order  by  sal  desc ) 순위
    from   emp;

설명:   데이터 분석함수인 dense_rank() 를 사용할 때  괄호 안에 order  by 앞에
         partition by  컬럼을 사용하면 컬럼의 데이터의 종류에 따라서 각각 분류해서
         순위를 부여합니다. 

문제168.  통신사,  이름, 나이, 순위를 출력하는데 통신사별로 각각 나이에 대한 순위를
             출력하시오 !

select  decode( lower(telecom),'skt', 'sk', lower(telecom) ) ,  ename,  age,  
         dense_rank()   over  ( partition  by  decode( lower(telecom),'skt', 'sk', lower(telecom) )
                                     order  by   age  desc  )  순위
    from   emp13;


문제169. 부서번호, 이름,  월급, 순위를 출력하는데 순위가 부서번호별로 각각
           월급이 높은 순서데로 순위를 부여하시오 ! 

 A 반에 추해정이가 답을 채팅창에 올려주세요 ~~ 

SELECT deptno,ename,sal, DENSE_RANK()  OVER (PARTITION BY deptno 
                                                               ORDER BY sal DESC)   as  순위
    FROM emp;

문제170.  월급이 1250 인 사원은 전체 사원들중에서 월급의 순위가 몇위인가 ?



문제171.  36살은 우리반에 나이의 순위가 어떻게 되는가 ?

 양남휘학생이 답을 채팅창에 올리세요 ~~

select  dense_rank(36) within group (order by age desc) as 순위
   from emp13;

문제172.  81/11/17에 입사한 사원은 사원 테이블에서 몇번째로 입사한 사원인가 ?

A 반 이승연 학생이 답을 채팅창에 올리세요 ~~

select  dense_rank('81/11/17')  within  group ( order  by hiredate  asc )  순위
   from   emp;

select  dense_rank( to_date('81/11/17','RR/MM/DD') ) 
              within  group ( order  by hiredate  asc )  순위
   from  emp;

문제173.    직업이 SALESMAN 인 사원들의 이름과 입사일과 순위를 출력하는데
               순위가 먼저 입사한 사원순으로 순위를 부여하시오 !

 45분까지 쉬세요 ~~

select ename,hiredate,rank () over (order by hiredate asc) as 순위 
     from emp 
     where job=‘SALESMAN’;

■  043 데이터 분석 함수로 등급 출력하기(NTILE)

  " 데이터를 분할하여 등급을 부여하는 함수 "

예제:  select  ename, sal,  ntile(4)  over  ( order  by  sal  desc ) 등급
            from   emp;

설명:  0 ~ 25% : 1등급
        25~ 50% : 2등급
        50~75%  : 3등급
        75~100% : 4등급 

문제174.  이름, 입사일, 입사한 사원순으로 등급을 나누는데 등급을 5등급으로 
              나눠서 출력하시오 !

A반 이다희 학생이 정답을 올리세요 

select ename, hiredate,  ntile(5) over (order by hiredate asc) 등급
  from emp;

문제175.   부서번호, 이름, 월급,  등급을 출력하는데 등급을 부서번호별로 각각
              월급이 높은 사원순으로 3등급으로 등급을 부여하시오 !

select  deptno, ename, sal, 
          ntile(3)  over  ( partition  by  deptno
                              order  by   sal   desc )  등급
        from   emp ;

■  044 데이터 분석 함수로 순위의 비율 출력하기(CUME_DIST)

예제.  이름과 월급과 월급의 순위와 월급의 순위 비율을 출력하시오 !

 select  ename, sal, rank()  over  ( order  by sal  desc )  as  순위,
                      dense_rank()  over ( order  by sal  desc)  as  순위2,
         cume_dist()   over  ( order  by  sal  desc )  as   순위비율
   from emp; 

설명:  1등은 1/14로 계산된 비율이고 2등은 2명이어서 3/14로 계산된 비율입니다. 

문제176.   부서번호, 이름과 월급과  월급의 순위에 대한 비율을 출력하시오 !
              순위 비율이 부서번호별로 각각 출력되게하시오 !
              ( 순위는 월급이 높은 사원순입니다.)

 select  deptno, ename, sal,
         cume_dist()   over  ( partition  by  deptno 
                                    order  by  sal  desc )  as   순위비율
   from emp; 

■ 045 데이터 분석 함수로 데이터를 가로로 출력하기(LISTAGG)

  데이터를 가로로 출력하는 함수 

예제.  부서번호,  부서번호 옆에 해당 부서번호에 속하는 사원들의 이름을 가로로 
        출력하시오 !

select  deptno,  listagg(ename, ',')  within  group  ( order  by  sal desc ) as 사원
  from  emp
  group  by  deptno ;

설명:  group by 절은 group 함수를 사용할때만 사용했었고 데이터 분석함수를 
        사용할때는 한번도 group by 절을 사용한적이 없었는데 이 listagg 는
        반드시 group by 절을 같이 써줘야 합니다. 

문제177.   직업,  직업별로 속한 사원들의 이름을 가로로 출력하는데
              가로로 출력될때에 월급이 높은 사원부터 출력되게하시오 ! 

select   job,  listagg(ename, ',')  within  group  ( order  by  sal  desc )  as  사원
 from   emp
 group  by  job; 

문제178.  위의 결과를 다시 출력하는데 이름 옆에 월급도 같이 출력되게하시오 !

JOB                사원
------------------ --------------------------------
ANALYST            FORD(3000),SCOTT(3000)
CLERK                 MILLER(1200),ADAMS(1500),JAMES,SMITH
MANAGER            JONES,BLAKE,CLARK
PRESIDENT          KING
SALESMAN           ALLEN,TURNER,MARTIN,WARD

답글로 올려주세요 ~~

Select job, listagg(ename || '(' || sal || ')',', ' ) within group (order by sal desc) as 사원
from emp
group by job;


문제179.  성별,  성별별 이름을 가로로 출력하는데 이름 옆에 나이가 나오게하고
             나이가 높은 학생들 부터 출력되게하시오 !

 남자      panda(38), edgar(36), ..............
 여자      eryn(40),  ..........................

select  gender, 
          listagg(ename || '(' || age || ')',', ' ) within group (order by age desc) as 사원
from emp13
group by  gender;

■ SQL 로 통계 문제 풀기

 확률문제:  SQL 로 동전 던지기 

예제1.  SQL 로 동전을 한번 던지시오 

 select  dbms_random.value(0,1)
   from  dual;

설명: 0~1사이의 실수를 랜덤으로 출력하는데 출력되는 데이터가
       가우시안 정규분포를 따르는 데이터 범위로 출력이 됩니다. 

예제2.  동전의 앞면을 1이라고 하고 뒷면을 0이라고 해서 0 또는 1이 
          랜덤으로 출력되게하시오 !  

 select  round( dbms_random.value(0,1)  )
   from  dual;

예제3.  동전을 10번을 던지세요 ~ 

 select  round( dbms_random.value(0,1)  )
   from  dual
   connect  by  level <= 10; 

설명:  connect by 절에 숫자 10을 쓰면 select 문장의 함수가 10번 실행이 되는것이고
        100을 쓰면 100번 실행이 되는것 입니다. 

문제180.  동전을 10번 던졌을때 앞면(1) 이 나오는 횟수를 출력하시오 !

select  동전
 from ( 
    select  round( dbms_random.value(0,1)  )  as  동전
       from  dual
        connect  by  level <= 10
         )
  where  동전=1; 

문제181. ( 점심시간 문제 ) 동전을 100000 번 던져서 동전의 앞면이 나오는 확률이
             0.5 에 근사하는지 확인하시오 !

■ 046 데이터 분석 함수로 바로 전 행과 다음 행 출력하기(LAG, LEAD)

 lag 함수는 바로 전행을 출력하는 함수 
 lead 함수는 바로 다음행을 출력하는 함수 

예제:   select  ename, sal, lag(sal, 1)  over  ( order  by sal  asc )  이전행,
                                lead(sal, 1)   over  ( order  by sal  asc )  다음행
            from   emp;

문제182.  이름, 입사일, 바로 전에 입사한 사원과의 간격일을 출력하시오 !

select  ename, hiredate,  
         hiredate  -  lag( hiredate,  1 )  over   ( order  by  hiredate  asc )  as  days
   from   emp; 

문제183.  우리반 데이터에서  이름, 생일, 생일과 생일과의 간격일을 출력하시오 !
            
select  ename, birth,  
         birth  -  lag( birth,  1 )  over   ( order  by  birth  asc )  as  days
   from   emp13; 

■ 047 COLUMN을 ROW로 출력하기 1(SUM+DECODE)

예제1.  부서번호, 부서번호별 토탈월급을 출력하시오 !

select  deptno, sum(sal)
  from  emp
  group  by  deptno; 

예제2. 위의 결과를 가로로 출력하시오 !  ( DW : datawarehouse
                                                      DM :  data mart  에서 많이 사용하는 SQL)

                OLTP  서버  ------------------------- DW 서버
                    ↓                                             ↓
        실시간 데이터 처리                            히스토리성 데이터(과거 데이터)

     10     20        30     <--- 컬럼명              
  8750   10875   9400    <--- 결과 데이터 

예제3.   부서번호,  부서번호가 10번이면 월급을 출력하고 아니면 NULL 을 출력하시오
            ( decode 함수를 이용해서 출력하세요)

select  deptno,  decode( deptno, 10, sal, null )  as  "10"
      from   emp; 

select   sum( decode( deptno, 10, sal, null ) )  as  "10"
      from   emp; 

문제184.  위의 결과에서 10번 옆에 20번과 30번의 데이터도 출력되게하시오

  10     20        30     <--- 컬럼명              
  8750   10875   9400    <--- 결과 데이터 

select   sum( decode( deptno, 10, sal, null ) )  as  "10",
          sum( decode( deptno, 20, sal, null ) )  as  "20",
          sum( decode( deptno, 30, sal, null ) )  as  "30"
      from   emp; 

문제185.  직업, 직업별 토탈월급을 가로로 출력하시오 !

  ANALYST    CLERK    MANAGER    PRESIDENT    SALESMAN  <-- 컬럼명
     6000         4150       8275           5000               5600     <-- 결과 데이터 

select  sum( decode( job, 'ANALYST', sal, null)   )   as  "ANALYST",
         sum( decode( job, 'CLERK', sal, null)   )   as  "CLERK",
         sum( decode( job, 'MANAGER', sal, null)   )   as  "MANAGER",
         sum( decode( job, 'PRESIDENT', sal, null)   )   as  "PRESIDENT",
         sum( decode( job, 'SALESMAN', sal, null)   )   as  "SALESMAN"
  from   emp;

설명:  컬럼별칭이 숫자일때는 양쪽에 더블쿼테이션 마크로 둘러줘야 합니다. 

문제186.  성별, 성별별 인원수를 세로로 출력하시오

  GENDER                 COUNT(*)
   -------------------- ----------
  남자                         16
  여자                         14

문제187.  위의 결과를 가로로 출력하시오 !

   남자           여자 
    16              14

 select    count( decode(gender, '남자',  empno, null )  )  as  "남자",
             count( decode(gender, '여자',  empno, null )  )  as  "여자"
 from   emp13;

문제188.  위의 결과에 통신사 컬럼도 같이 출력되게하시오 ! 

 select    decode( lower(telecom), 'skt', 'sk', lower(telecom) )   as 통신사,
             count( decode(gender, '남자',  empno, null )  )  as  "남자",
             count( decode(gender, '여자',  empno, null )  )  as  "여자"
 from   emp13
 group  by   decode( lower(telecom), 'skt', 'sk', lower(telecom) );

문제189.  (복습문제) 직업이 ANALYST 인 사원들의 이름과 월급과 직업과 입사일을 
             출력 하는데 입사일이 최근에 입사한 사원부터 출력하시오! 

select  ename, sal, job, hiredate
  from  emp
  where  job='ANALYST'
  order  by  hiredate  desc;

문제190. (복습문제)  월급이 1000 에서 4000 사이인 사원들의 이름과 월급과 직업을
            출력하는데 월급이 높은 사원부터 출력하시오 !

select  ename, sal, job
  from  emp
  where  sal  between  1000  and  4000
  order  by  sal  desc; 

문제191. (복습문제)  직업과 직업별 인원수를 출력하는데 직업별 인원수가 3명이상인
           것만 출력하시오 ! ( 세로출력 입니다.) 

 select  job,  count(*)
   from   emp
   group   by  job
   having   count(*)  >= 3;

문제192. (복습문제)  부서번호, 부서번호별 토탈월급을 출력하는데
                           부서번호별 토탈월급을 출력할 때 천단위 표시를 하시오 !
            (세로출력)

select  deptno,  to_char( sum(sal), '999,999')  
   from   emp
   group   by  deptno; 

문제193. (복습문제)  직업, 이름, 월급, 순위를 출력하는데 순위가 직업별로 각각
            월급이 높은 사원순으로 순위를 부여하시오 !

select  job, ename, sal,  rank()  over  ( partition  by  job
                                                  order  by  sal  desc )  as  순위
       from   emp;

문제194. (복습문제)  그럼 위의 결과에서 순위가 1등들만 출력하시오 ! 

select  *
  from  (  
             select  job, ename, sal,  rank()  over  ( partition  by  job
                                                               order  by  sal  desc )  as  순위
               from   emp
            )
 where   순위 = 1; 


문제195.  부서번호, 부서번호별 토탈월급을 가로로 출력하시오 !

   select    sum( decode( deptno, 10, sal, null) )  as  "10" ,
              sum( decode( deptno, 20, sal, null) )   as  "20",
              sum( decode( deptno, 30, sal, null) )   as  "30"
    from emp;

문제196.  부서번호, 부서번호별 인원수를 가로로 출력하시오 ! 

   select    count( decode( deptno, 10, empno, null) )  as  "10" ,
              count( decode( deptno, 20, empno, null) )   as  "20",
              count( decode( deptno, 30, empno, null) )   as  "30"
    from emp;

문제197. (복습문제) 이름, 입사일, 입사한 년도를 4자리로 출력하시오 !

 select  ename,  hiredate, to_char(hiredate,'RRRR')  
   from  emp; 

문제198.  입사한 년도 4자리, 입사한 년도별 토탈월급을 출력하시오 (세로출력) 

 임진영 학생이 답을 채팅창에 올려주세요 ~~

select to_char(hiredate, 'RRRR'), sum(sal)
   from emp
   group by to_char(hiredate, 'RRRR');

문제199.  위의 결과를 가로로 출력하시오 !

  1980    1981    1982    1983
    800    22825    4300   1100

select   sum( decode( to_char(hiredate,'RRRR'), '1980',  sal , null  ) )  as  "1980",
          sum( decode(  to_char(hiredate,'RRRR'), '1981',  sal,  null ) )  as  "1981",
          sum( decode(  to_char(hiredate, 'RRRR'), '1982',  sal, null ) )   as  "1982",
          sum( decode(  to_char(hiredate,'RRRR'), '1983',  sal, null ) )  as  "1983"
   from  emp;

문제200.  위의 결과에서 맨 앞에 직업도 같이 출력되게하시오

select  job,
          sum( decode( to_char(hiredate,'RRRR'), '1980',  sal , null  ) )  as  "1980",
          sum( decode(  to_char(hiredate,'RRRR'), '1981',  sal,  null ) )  as  "1981",
          sum( decode(  to_char(hiredate, 'RRRR'), '1982',  sal, null ) )   as  "1982",
          sum( decode(  to_char(hiredate,'RRRR'), '1983',  sal, null ) )  as  "1983"
   from  emp
   group  by  job; 

문제201.  부서번호,  입사한 년도별 토탈월급을 가로로 출력하시오 !
             ( 위의 결과에서 직업을 부서번호로만 변경하면 됩니다.)

select  deptno,
          sum( decode( to_char(hiredate,'RRRR'), '1980',  sal , null  ) )  as  "1980",
          sum( decode(  to_char(hiredate,'RRRR'), '1981',  sal,  null ) )  as  "1981",
          sum( decode(  to_char(hiredate, 'RRRR'), '1982',  sal, null ) )   as  "1982",
          sum( decode(  to_char(hiredate,'RRRR'), '1983',  sal, null ) )  as  "1983"
   from  emp
   group  by  deptno; 

문제202. 위의 결과를 토탈월급이 아니라 인원수로 출력하시오 !

select  deptno,
          count( decode( to_char(hiredate,'RRRR'), '1980',  empno , null  ) )  as  "1980",
          count( decode(  to_char(hiredate,'RRRR'), '1981', empno,  null ) )  as  "1981",
          count( decode(  to_char(hiredate, 'RRRR'), '1982', empno, null ) )   as  "1982",
          count( decode(  to_char(hiredate,'RRRR'), '1983',  empno, null ) )  as  "1983"
   from  emp
   group  by  deptno; 

■  048 COLUMN을 ROW로 출력하기 2(PIVOT)

   컬럼을 행으로 출력하는 함수 :   pivot
   행을 컬럼으로 출력하는 함수 :  unpivot 
  
예제1.  부서번호, 부서번호별 토탈월급을 가로로 출력하시오 !

   select    sum( decode( deptno, 10, sal, null) )  as  "10" ,
              sum( decode( deptno, 20, sal, null) )   as  "20",
              sum( decode( deptno, 30, sal, null) )   as  "30"
    from emp;

예제2. 위의 결과를 pivot 문으로 구현하시오 ! 

 select  *
    from  (  select  deptno, sal  from   emp  ) 
    pivot  (  sum(sal)  for  deptno  in (10, 20, 30) ) ;
   
설명:  토탈월급을 출력해라 ~  어떤 토탈월급 ?  부서번호에 대한 토탈월급
         어떤 부서번호 ?   10, 20, 30 에 대한거 

문제203.  성별와 성별별 토탈나이를 가로로 출력하시오 ( pivot 문을 사용해서)

 select  *
    from  (  select  gender, age  from   emp13  ) 
    pivot  (  sum(age)  for  gender  in ('남자'  as  "남자", 
                                                   '여자' as "여자" ) ) ;
   
문제204.  위의 결과를 다시 출력하는 토탈나이가 아니라 평균나이가 되게하시오!

 select  *
    from  (  select  gender, age  from   emp13  ) 
    pivot  (  avg(age)  for  gender  in ('남자'  as  "남자", 
                                                 '여자' as "여자" ) ) ;

문제205.  이번에는 평균나이가 아니라 인원수가 출력되게하시오 !  

 select  *
    from  (  select  gender, age from   emp13  ) 
    pivot  (  count(age)  for  gender  in ('남자'  as  "남자", 
                                                    '여자' as "여자" ) ) ;
 
문제206. (오늘의 마지막 문제)  통신사, 이름,  나이, 순위를 출력하는데
           통신사별로 나이의 순위가 1등인 학생들만 출력하시오 !

■ 복습 

   1. 기본 쿼리문
   2. 함수 :  단일행 함수: 문자, 숫자, 날짜, 변환, 일반
               복수행 함수: max, min, avg, sum, count
   3.  데이터 분석함수 :   rank
                                dense_rank
                                ntile
                                cume_dist
                                lag,  lead
                                listagg
                                sum + decode
                                pivot 

문제207.(복습문제)   직업, 이름, 월급, 순위를 출력하는데  순위가 월급이 
            높은 사원부터  순위를 부여하시오 !

 select  job,  ename,  sal,
         dense_rank()   over  ( order  by  sal  desc ) 순위
   from  emp;

문제208.(복습문제) 위의 결과를 다시 출력하는데  직업별로 각각 월급이 
           높은 사원순으로 순위가 부여되게 하시오 !

select  job,  ename,  sal,
         dense_rank()   over  (  partition  by   job
                                      order  by  sal  desc ) 순위
   from  emp;


문제209. (복습문제) 통신사가 sk 텔레콤인 학생들의  평균나이는 어떻게 되는가?

 select  avg(age)
   from  emp13
   where  lower(telecom) like  '%sk%';

문제210.  위의 결과를 다시 출력하는데  통신사명도 같이 출력되게하시오 !

   sk    26.5

 select  decode(lower(telecom), 'skt', 'sk', lower(telecom) ) ,  avg(age)
   from  emp13
   where  lower(telecom) like  '%sk%'
   group  by  decode(lower(telecom), 'skt', 'sk', lower(telecom) ) ;


  데이터를 전처리하면서 SQL 을 작성 :  데이터 분석가 , 데이터 엔지니어,
                                                    딥러닝 개발자(연구원)

문제211. (복습문제) 성별, 성별별 평균나이를 출력하시오 ! (세로 출력) 

 select   gender,  avg(age)
    from   emp13
    group  by   gender; 

문제212. (복습문제)  위의 결과를 다시 출력하는데 가로로 출력하시오 !

    남자           여자 
   29.1875     27.9285714

1.  avg + decode

  select     avg( decode( gender, '남자', age, null )  )    as  "남자",
              avg( decode( gender, '여자', age, null )  )    as  "여자"
      from   emp13;

2. pivot 문

  select  round("남자"),  round("여자")
   from   (  select   gender, age  from  emp13 )
   pivot   (  avg(age)  for  gender  in ('남자'  as  "남자", 
                                                  '여자'  as  "여자" )  )  ;

설명: 1. from  절의 서브쿼리의 쿼리문은 결과를 보기 위해 필요한 컬럼들만
           선택해야한다. 

       2.  pivot 문안에는 그룹함수외에 다른 함수를 쓸 수 없다. 

문제213.  입사한 년도(4자리), 입사한 년도별 평균월급을 출력하시오 !( 세로출력)

 select  to_char(hiredate, 'RRRR'),  avg(sal)
   from  emp
   group  by  to_char(hiredate,'RRRR');


문제214.  위의 결과를 가로로 출력하시오 !  ( Data Mart, Data Warehouse)
 
                                                                   데이터베이스 서버

           데이터 엔지니어 ( SQL , 파이썬)

    웹서버   ----------- 미들티어 서버 ----------  OLTP 서버 ------  DW 서버 
       ↓                           ↓                             ↓                    ↓
   웹서비스를 위한        웹서버에서 DB 서버에     실시간 데이터 검색  배치처리
    코드와 데이터         데이터를 요청하게 되는데                               ↓
                               요청자가 여러명이므로 그 부하를                김영숙
                               잘 분배하는 역활을 하는 서버 

                              예:  턱시도, 티맥스 소프트웨어 
                         

 


1. 빅데이터 기사 시험준비를 위한 스터디는 아닙니다. 
 이 수업에 대한 예습 스터디 

 2. 사실 빅데이터 공부를 하기 위해서 수학이 아주 비중이 큰것은 아니다
    우리 수업에서 가장 비중이 큰것은 ?  코딩 

    회사에 필요한것은 ?  코딩이니까 코딩위주로 공부를 한거니까

 3.  이 과정을 수료한 후의 선배들의 진로 ?   

   데이터 분석가,  데이터 엔지니어,  딥러닝 개발자, 스타업 

 이 수업을 위한 예습 스터디 

1.  avg + decode

  select    avg( decode( to_char(hiredate,'RRRR'), '1980', sal, null)  )  as "1980",
             avg( decode( to_char(hiredate,'RRRR'), '1981', sal, null)  )  as "1981",
             avg( decode( to_char(hiredate,'RRRR'), '1982', sal, null)  )  as "1982",
             avg( decode( to_char(hiredate,'RRRR'), '1983', sal, null)  )  as "1983"
   from  emp;

2.  pivot 문       " 입사한 년도(4자리), 입사한 년도별 평균월급 출력 " 

   select *
    from   (  select  to_char(hiredate,'RRRR')  as  h_year,  sal from  emp )
    pivot  (   avg(sal)  for  h_year  in ('1980'  as "1980", 
                                                 '1981' as  "1981", 
                                                 '1982' as  "1982",
                                                  '1983' as  "1983")   ) ;

    select  *
     from  ( select   age, gender  from   emp13 )
     pivot  (  avg(age)  for  gender  in ('남자','여자')  ) 

설명:  pivot 문에서 from 절에 서브쿼리문에  일반함수나 그룹함수를 사용하게
        되면 반드시 컬럼별칭을 사용해야 합니다. 

 45분까지 쉬세요 ~~

문제215.  통신사, 통신사별 평균나이를 세로로 출력하시오 ! 

 select  decode( lower(telecom),'skt', 'sk', lower(telecom) ) ,  avg(age)
   from   emp13
   group   by  decode( lower(telecom),'skt', 'sk', lower(telecom) );

문제216.  위의 결과를 가로로 출력하시오 !

 select  *
  from   ( select   decode( lower(telecom),'skt', 'sk', lower(telecom) ) as 통신사, age  
                 from  emp13  )
  pivot   (  avg(age)  for  통신사  in  ('sk'  as  "sk", 
                                                 'lg' as  "lg", 
                                                 'kt'  as  "kt" )    ) ;


설명:  pivot 문에서 from 절에 서브쿼리문에  일반함수나 그룹함수를 사용하게
        되면 반드시 컬럼별칭을 사용해야 합니다. 

문제217.   위의 결과를 다시 출력하는데 반올림 되게 하시오 ! 

      sk         lg         kt
-------- ---------- ----------
    27          28         30

 select    round("sk"), round("lg"),  round("kt")
  from   ( select   decode( lower(telecom),'skt', 'sk', lower(telecom) ) as 통신사, age  
                 from  emp13  )
  pivot   (  avg(age)  for  통신사  in  ('sk'  as  "sk", 
                                                 'lg' as  "lg", 
                                                 'kt'  as  "kt" )    ) ;

문제218.  우리반 데이터에서 이메일의 도메인명과 사원번호를 출력하시오 !  

 navar
 kaum
 ggml  

select   rtrim( rtrim( substr( email,  instr(email,'@') + 1,  100) ,'.com'), '.net'), empno
    from  emp13; 

문제219. (점심시간 문제)
            이메일의 도메인명, 도메인명별 인원수를 출력하시오 !  (세로 출력)

 A반은 라인 검사 받고
 B반은 카페에 올려서 검사 받으세요 ~~

■ 예제49.  ROW 를 column 으로 출력하기 (unpivot 문)  책 149

스크립트:

1. order2 라는 테이블 삭제 명령어 
drop  table order2;     

2. order2 테이블을 생성

create table order2
( ename  varchar2(10),
  bicycle  number(10),
  camera   number(10),
  notebook  number(10) );

insert  into  order2  values('SMITH', 2,3,1);
insert  into  order2  values('ALLEN',1,2,3 );
insert  into  order2  values('KING',3,2,2 );

commit;

SELECT *
 FROM order2
 UNPIVOT (건수 for 아이템 in (BICYCLE, CAMERA, NOTEBOOK));

설명:  pivot 문 :   로우(row) -----------> 컬럼(column)
       unpivot문:   컬럼(column) ---------> 로우(row)

SELECT *
 FROM order2
 UNPIVOT (갯수 for 품목 in (BICYCLE, CAMERA, NOTEBOOK));

설명:  위에 써준 이름 그대로 컬럼명이 생성되므로 이름을 마음데로 줘도 됩니다. 
        컬럼명이었던 BICYCLE, CAMERA, NOTEBOOK 은 데이터로 만들어 주기 위해서
        in 다음에 싱글 쿼테이션 마크 없이 기술합니다. 

SELECT  ename,  sum(갯수)
 FROM order2
 UNPIVOT (갯수 for 품목 in (BICYCLE, CAMERA, NOTEBOOK))
 group  by  ename;

select  ename, BICYCLE  +  CAMERA  + NOTEBOOK  
  from   order2;

설명: unpivot 문이 필요한 이유 ?    

  근로자당_연평균_실제_근로시간_OECD__20191021155649.xlsx 에서 
  2018년도에  가장  근로시간이 많은 나라가 어딘지 출력하시오 

문제220.   근로자당_연평균_실제_근로시간_OECD__20191021155649.xlsx 데이터를
              오라클 database 에 테이블로 만드시오 !

DROP TABLE WORKING_TIME;

CREATE  TABLE  WORKING_TIME
( COUNTRY      VARCHAR2(30),
  Y_2014       NUMBER(10),
  Y_2015       NUMBER(10),
  Y_2016       NUMBER(10),
  Y_2017       NUMBER(10),
  Y_2018       NUMBER(10) );

문제221. 나라가  한국인 나라의  모든 컬럼을 출력하시오 !

truncate  table  working_time;

select  * from  working_time; 

select *
 from working_time
 where  country='한국';

문제222.   unpivot 문을 이용해서  컬럼을 로우(row) 로 만드시오 !  

SELECT *
  FROM WORKING_TIME
  UNPIVOT ( 시간 FOR  년도 IN ( Y_2014, Y_2015, Y_2016, Y_2017, Y_2018));
                  ↑             ↑
                마음데로 컬럼명을 지정하면 됩니다. 

문제223.  2018년도의 나라명과 근로시간을 출력하시오 !

create  table  working_time2
as
SELECT *
  FROM WORKING_TIME
  UNPIVOT ( 시간 FOR  년도 IN ( Y_2014, Y_2015, Y_2016, Y_2017, Y_2018));
 
설명:  as 다음에 나오는 select 문의 결과를 working_time2 라는 테이블로 생성하는
         명령어 

select  country,  시간
   from  working_time2
   where  년도='Y_2018';

문제224.   나라명, 근로시간,  순위를 출력하는데 순위가 근로시간이 높은 나라부터
               순위를 부여하시오 !

select  country,  시간, rank()  over  ( order  by  시간 desc)  as  순위
   from  working_time2
   where  년도='Y_2018';

■  050 데이터 분석 함수로 누적 데이터 출력하기(SUM OVER)

예제1:  이름, 월급,  사원 테이블의 토탈월급을 출력하시오

 select  ename, sal,  sum(sal)  
    from   emp;

설명:  sum(sal)  뒤에 over 다음에  괄호안에 뭔가를 쓸수가 있는데 아무것도 안쓰면
        그냥 전체 토탈월급이 출력됩니다. 

예제2.  이름, 월급,  월급에 대한 누적 데이터를 출력하시오 !

 select  ename, sal,  sum(sal)  over  (order  by sal  rows
                                                 between  unbounded  preceding
                                                 and  current  row )  as  토탈값
    from   emp;

※ 설명:  unbounded  preceding : 제일 첫번째 행 
            unbounded  following :  맨 마지막 행 
           current   row :  현재행 

문제225.  이름, 나이 , 나이에 대한 누적 데이터를 출력하시오 !

 select  ename,  age,  sum(age)  over  ( order  by  age   rows 
                                                     between  unbounded  preceding
                                                          and   current   row )  누적치
   from   emp13;

문제226.  부서번호,  이름,  월급,  월급에 대한 누적치를 출력하시오 !

 select   deptno,  ename,  sal,  sum(sal)  over  ( order  by  sal  rows 
                                                              between  unbounded  preceding
                                                              and   current   row )  누적치
   from   emp;

문제227.  위의 결과를 다시 출력하는데 부서번호별로 각각 월급에 대한 누적치를
             출력하시오 !

 select   deptno,  ename,  sal,  sum(sal)  over  ( partition  by  deptno
                                                              order  by  sal  rows 
                                                              between  unbounded  preceding
                                                              and   current   row )  누적치
   from   emp;

■  051 데이터 분석 함수로 비율 출력하기(RATIO_TO_REPORT)

  특정 컬럼의 데이터의 합을 기준으로 특정 행의 데이터의 상대벅 비율을 
  출력하는 방법을 배웁니다. 

예제:  부서번호가 20번인 사원들의 사원번호, 이름, 월급을 출력하고
        20번 부서번호내에서 자신의 월급 비율이 어떻게 되는지 출력하시오 !

select  empno, ename, sal,  ratio_to_report(sal)  over  ()  as  비율,
                                     sal / sum(sal)  over  ()  as  "비교 비율" 
   from  emp 
   where  deptno = 20;

문제228. 위의 결과를 다시 출력하는데  비율이 높은 사원부터 출력하시오 !

select  empno, ename, sal,  ratio_to_report(sal)  over  ()  as  비율,
                                     sal / sum(sal)  over  ()  as  "비교 비율" 
   from  emp 
   where  deptno = 20
   order  by   4  desc; 

문제229. (복습문제) 직업이 SALESMAN 이 아닌 사원들의 이름과 월급과 직업과
            순위를 출력하는데 순위가 월급이 높은 사원순으로 순위를 부여하시오 !

select ename, sal, job, dense_rank() over(order by sal desc)
from emp
where job != 'SALESMAN';

문제230. (복습문제)  직업, 직업별 최대월급을 출력하는데 직업별 최대월급이 4000
            이상인것만 출력하고 직업별 최대월급이 높은것부터 출력하시오!

select job, max(sal) 
   from emp
   group by job
   having max(sal) >= 4000
   order  by max(sal)  desc; 

문제231. (복습문제) 부서번호, 부서번호별 인원수를 출력하는데 
             부서번호별 인원수가 3명이상인것만 출력하고 부서번호별 인원수가
             낮은것부터 출력하시오 !

SELECT DEPTNO, COUNT(*)
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*) >=3
ORDER BY 2 ASC;

* 서울시 물가 데이터를 오라클 database 에 입력하시오 !

문제232.   price (서울시 물가 데이터) 가 전체가 몇건인지 출력하시오! 



문제233.  price(서울시 물가 데이터) 에서  품목(A_name), 가격(A_price), 순위를
             출력하는데  순위가 가격이 높은 품목 순으로 순위를 부여하시오 !

select A_name, A_price, m_name, dense_rank() over (order by A_price desc)
from price;

문제234.  위의 결과에서  1등만 출력하시오 !   

select *
from (
    Select A_name, A_price, m_name,
	  dense_rank() over (order by A_price desc) 순위
    From price
    )
where 순위 = 1;

문제235. 범죄시간에 대한 데이터를 오라클 데이터베이스에 구성하시오 !

drop table crime_time;

 create table  crime_time
 ( crime_type   varchar2(20),
  f0t3  number(10),
  f3t6  number(10),
  f6t9  number(10),
  f9t12  number(10),
  f12t15  number(10), 
  f15t18   number(10),
  f18t21   number(10),
  f21t24     number(10)  );                                                                                                                                            


 insert into crime_time values('살인',36,34,26,51,46,46,56,69);
 insert into crime_time values('살인미수',59,45,24,48,44,61,105,123);
 insert into crime_time values('강도',381,594,136,135,169,155,228,349);
 insert into crime_time values('강간강제추행',2278,2675,1654,1073,1142,1423,1799,3248);
 insert into crime_time values('방화',269,272,107,145,147,211,252,339);
 insert into crime_time values('절도',23761,23392,20292,31732,32648,36720,45653,39745);
 insert into crime_time values('상해',7751,6107,3401,4412,4254,5508,7572,13043);
 insert into crime_time values('폭행',18911,14228,6918,7942,8129,10848,16806,31950);
 insert into crime_time values('체포감금',56,69,55,98,89,84,123,114);
 insert into crime_time values('협박',222,145,199,506,427,473,544,547);
 insert into crime_time values('약취유인',9,5,14,29,22,34,22,21);
 insert into crime_time values('폭력행위등',6915,5910,2470,2558,2787,4079,5376,9879);
 insert into crime_time values('공갈',207,165,269,612,758,1173,935,591);
 insert into crime_time values('손괴',6316,4938,3621,4486,4224,6059,10694,13566);
 insert into crime_time values('직무유기',4,6,5,110,27,18,17,10);
 insert into crime_time values('직권남용',11,4,6,43,29,17,6,11);
 insert into crime_time values('증수뢰',2,1,1,84,37,22,8,2);
 insert into crime_time values('통화',51,36,142,2018,777,590,209,133);
 insert into crime_time values('문서인장',193,127,65,2364,994,538,359,432);
 insert into crime_time values('유가증권인지',10,5,2,86,41,24,19,13);
 insert into crime_time values('사기',5149,4034,2315,39296,22459,13987,8323,8483);
 insert into crime_time values('횡령',837,686,884,4891,2292,1813,1653,1656);
 insert into crime_time values('배임',11,2,3,1007,268,55,24,6);
 insert into crime_time values('성풍속범죄',374,286,464,961,983,1608,1296,1353);
 insert into crime_time values('도박범죄',360,189,104,450,748,1670,1931,2024);
 insert into crime_time values('특별경제범죄',2573,1858,1549,10887,6360,5225,4828,5988);
 insert into crime_time values('마약범죄',110,87,53,261,292,322,477,439);
 insert into crime_time values('보건범죄',639,369,112,2301,1973,1178,900,1882);
 insert into crime_time values('환경범죄',23,29,120,408,813,351,66,64);
 insert into crime_time values('교통범죄',42507,31839,41865,44621,47385,59278,75466,157988);
 insert into crime_time values('노동범죄',30,21,33,245,74,45,73,157);
 insert into crime_time values('안보범죄',5,2,3,13,8,10,5,9);
 insert into crime_time values('선거범죄',11,14,49,225,142,124,86,38);
 insert into crime_time values('병역범죄',11,3,44,4085,775,106,108,28);
 commit;
 
 SELECT * FROM crime_time;
 
CREATE TABLE crime_time2
as
select *
    from (
    SELECT *
    FROM crime_time
    unpivot( cnt  FOR time  IN (F0T3,F3T6,F6T9,F9T12,F12T15,F15T18,F18T21,F21T24)));

SELECT * FROM crime_time2;

문제236. (오늘의 마지막 문제)  살인이 가장 많이 일어나는 시간대가 언제인지
             출력하시오 ! 

 5시 신호 보냈습니다.  

 나머지 시간은 자유롭게 복습 또는 자습하세요 ~~~

 6시에 신호 보냈습니다. 

■ 예제52. 데이터 분석 함수로 집계 결과 출력하기 1(ROLLUP)

  레포팅 함수 ?       1. rollup
                           2. cube
                           3. grouping  sets
                           4.  grouping 


 rollup 은 집계결과 아래에 전체 집계를 출력하는 데이터 분석함수 

예제1:  직업,  직업별 토탈월급을 출력하시오 !
  
      select   job,  sum(sal)
          from   emp
          group  by  job;

예제2.  위의 결과에서 맨 아래에 전체 토탈월급을 출력하시오 !

      select   job,  sum(sal)
          from   emp
          group  by  rollup(job);

문제237.   부서번호, 부서번호별  평균월급을 출력하는데 맨 아래에 전체 평균월급도 
             출력하시오 !

 select  deptno,  avg(sal)
   from  emp
   group  by  rollup(deptno);

문제238.  직업, 직업별 인원수를 출력하는데 맨 아래에 전체 인원수를 출력하시오 !

  select  job,  count(*)
   from   emp
   group  by  rollup(job);

문제239.  부서번호, 직업,  부서번호별 직업별 토탈월급을 출력하시오 !

  select   deptno,  job,  sum(sal)
     from   emp
     group   by  deptno, job
     order   by  deptno,  job ;

문제240.  위의 결과를 다시 출력하는데  맨 아래에  전체 토탈월급을 출력하시오 !

  select   deptno,  job,  sum(sal)
     from   emp
     group   by  rollup( ( deptno, job) ) ;

설명:  rollup 괄호 안에 컬럼명들을 써주면 되는데 select 절의 컬럼이 하나면 
        rollup 다음에 하나를 쓰면되고  select 절의 컬럼이 2개면 rollup 다음에 2개를
        쓰면 됩니다.  컬럼 2개를 괄호로 묶어주면 맨 아래에 전체 토탈월급이 출력됩니다. 

문제241.   입사한 년도(4자리),  부서번호,  입사한 년도별 부서번호별 토탈월급을 출력하는데
              맨 아래에 전체 토탈월급도 출력하시오 !

select  to_char(hiredate, 'RRRR'),  deptno,  sum(sal)
   from   emp
   group   by   rollup(  (to_char(hiredate,'RRRR'), deptno)  ) ;

설명:  rollup 안에 컬럼명들에 둘러준 괄호를 빼고 실행해보세요 ~~

select  to_char(hiredate, 'RRRR'),  deptno,  sum(sal)
   from   emp
   group   by   rollup(  to_char(hiredate,'RRRR'), deptno  ) ;

문제242.   직업, 부서번호, 직업별 부서번호별 토탈월급을 출력하는데
              맨 밑에 전체 토탈월급도 출력하시오 !

select  job,  deptno,  sum(sal)
  from   emp
  group  by   rollup(  ( job,  deptno)  );

문제243.  그러면 위의 결과에서  rollup 안에 쓴 컬럼명들을 묶은 괄호를 빼고 실행하게 되면
            결과가 어떻게 나오겠는가 ?

select  job,  deptno,  sum(sal)
  from   emp
  group  by   rollup(   job,  deptno  );

* 설명: 집계 그룹핑 결과 3가지 ?   1.   job, deptno 
                                             2.  job
                                             3. 전체

■  053 데이터 분석 함수로 집계 결과 출력하기 2(CUBE)

예제1.   부서번호, 부서번호별 토탈월급을 출력하시오 ( 세로 출력 )

 select  deptno, sum(sal)
   from  emp
   group  by  deptno;

예제2.  위의 결과를 다시 출력하는데 맨위에 전체 토탈월급이 출력되게하시오 !

select   deptno,  sum(sal)
  from  emp
  group   by   cube(deptno);

문제244.  위의 결과를 다시 출력하는데 맨위에 null 로 나오는 부분에 전체토탈이라고
             한글이 출력되게하시오 !

  DEPTNO   SUM(SAL)
-------- ----------
 전체토탈:   29025
      10       8750
      20      10875
      30       9400


Select nvl(to_char(deptno), '전체토탈:'), sum(sal)
From emp
Group by cube ( deptno );

문제245.  직업, 직업별 인원수를 출력하는데 맨 위에 전체 인원수도 출력하시오 !

select   job,  count(*)
  from  emp
  group  by   cube(job);  

문제246.  위의 결과를 다시 출력하는데  맨위에 null 값이 전체토탈이라고 출력되게하시오\

JOB                  COUNT(*)
------------------ ----------
전체토탈                  14
CLERK                       4
ANALYST                   2
MANAGER                 3
SALESMAN                4
PRESIDENT                1

 select   nvl(job,'전체토탈') ,  count(*)
   from  emp
   group  by   cube(job);

문제247. 부서번호, 직업,  부서번호별 직업별 토탈월급을 출력하는데 cube 를 사용해서
            집계결과가 출력되게하시오 !

select   deptno, job,  sum(sal)
   from   emp
   group   by   cube(  deptno, job ) ;

설명:  집계결과의 갯수 ?     1. deptno, job 
                                    2. deptno
                                    3. 전체 
                                    4. job      <----  cube 는 한가지 더 출력됩니다. 


   웹서버 ---------  미들티어 ----------- 데이터베이스 서버 (oltp) -------- data warehouse
                                                                                             data  mart 

■  054 데이터 분석 함수로 집계 결과 출력하기 3(GROUPING SETS)

  집계결과를 출력하는 데이터 분석 함수 

예제1.   부서번호, 부서번호별 토탈월급을 출력하시오 !

 select   deptno,  sum(sal)
   from   emp
   group   by  deptno ;

예제2.  위의 결과를 다시 출력하는데 맨 아래에 전체 토탈월급을 출력하시오 

 select   deptno,  sum(sal)
   from   emp
   group   by  grouping sets( (deptno) ,  ()   ) ;

설명:    1.  (deptno)  :  부서번호별 집계결과
          2.   ()          :  전체 집계결과

문제248. 위의 결과에서 order by 절만 사용해서 전체 집계결과가 cube 처럼 맨 위에
            출력되게하시오 !

 select   deptno,  sum(sal)
   from   emp
   group   by  grouping sets( (deptno) ,  ()   ) 
   order  by   deptno   asc   nulls  first ;

문제249.   아래의 rollup 의 결과를  grouping  sets 로 출력하시오 !

select   deptno,  job,  sum(sal)
  from   emp
  group   by  rollup( ( deptno, job)  ); 

답:
     select  deptno, job,  sum(sal)
         from  emp
        group  by  grouping  sets(   (deptno,job)  ,   ()   ) ; 

문제250.   직업, 부서번호, 직업별 부서번호별 토탈월급을 출력하는데 
               직업별 토탈월급도 나오고 부서번호별 토탈월급도 출력되게하시오 !
               
select  job,  deptno, sum(sal)
 from  emp
 group  by   grouping  sets( (job, deptno), (job), (deptno) );

문제251. 위의 결과를 다시 출력하는데 전체 토탈월급도 출력하시오 !

select  job,  deptno, sum(sal)
 from  emp
 group  by   grouping  sets( (job, deptno), (job), (deptno) , () );

문제252. (복습문제)   직업, 직업별 최대월급을 출력하시오 ! (세로출력) 

select  job,  max(sal)
  from  emp
  group  by  job; 

문제253. (복습문제)   직업, 직업별 최대월급, 직업별 최소월급을 출력하시오 ! (세로 출력)


select  job,  max(sal), min(sal)
  from  emp
  group  by  job; 

문제254. (복습문제)  직업, 직업별 최대월급, 직업별 최소월급, 직업별 평균월급, 
                          직업별 토탈월급을 출력하시오 !

select  job,  max(sal), min(sal),  avg(sal),  sum(sal)
  from   emp
  group   by   job; 

문제255.  위의 결과를 다시 출력하는데 맨 아래쪽에 전체 최대월급, 전체 최소월급,
              전체 평균월급, 전체 토탈월급이 출력되게 하시오 !

select  job,  max(sal), min(sal),  avg(sal),  sum(sal)
  from   emp
  group   by  rollup( job ); 

문제256.  부서번호, 부서번호별 토탈월급을 출력하시오 ! ( 세로 출력 )

 select   deptno,  sum(sal)
  from   emp
  group   by  deptno;

문제257. 위의 결과를 sum 과 decode 를 이용해서 가로로 출력하시오 !

 select   sum( decode( deptno, 10, sal, null)  )   as  "10",
           sum( decode( deptno, 20, sal, null)  )   as   "20",
           sum( decode( deptno, 30, sal, null)  )   as   "30"
   from  emp;

문제258. 위의 결과에서 직업도 같이 맨앞에 출력되게하시오 !

 select  job, 
          sum( decode( deptno, 10, sal, null)  )   as  "10",
           sum( decode( deptno, 20, sal, null)  )   as   "20",
           sum( decode( deptno, 30, sal, null)  )   as   "30"
   from  emp
  group  by  job; 

문제259. (점심시간 문제) 위의 결과에서 맨아래에 전체 토탈월급들이 출력되게하시오 !


■ 055 데이터 분석 함수로 출력 결과 넘버링 하기(ROW_NUMBER)

 출력되는 select 문의 결과의 행을 numbering(번호부여) 하는 함수 

예제:  select  empno, ename, sal, 
                     row_number()  over  ( order  by sal  desc )  번호 
           from   emp
          where  deptno = 20;


문제260. 위의 결과에서 번호가 2번인 사원의 사원번호, 이름과 월급과 번호를 출력하시오!

select  empno, ename, sal, 번호
  from  (  
       select  empno, ename, sal, 
                     row_number()  over  ( order  by sal  desc )  번호 
           from   emp
          where  deptno = 20
            )
  where  번호 = 2;

문제261. 우리반 데이터에서  이름과 나이와 전공을 출력하는데 나이가 높은 학생순으로
            정렬한 결과중에 위에서 5번째 데이터를 출력하시오 !

select  *
  from  (  
            select   ename,  age,  major ,  row_number()  over  (order  by  age  desc)  번호
               from   emp13
           )
   where  번호 = 5;

■ 056 출력되는 행 제한하기 1(ROWNUM)

  row_number 함수와 비슷한 기능을 갖는 함수인데  rownum  그냥 출력되는 행의
   번호를 부여하는   shadow(감춰진) 컬럼입니다. 

예제:  select  rownum,  empno, ename, job, sal
            from   emp 
            where  deptno = 20
            order  by  sal  desc; 

설명:  위의 SQL 문장은 실행 순서 때문에 번호가 뒤죽박죽 섞이게 됩니다.  
        그래서 정렬된 결과에 번호를 부여하고 싶다면 row_number() 함수를 사용해야 합니다. 

예제:  select  empno, ename, sal, 
                     row_number()  over  ( order  by sal  desc )  번호 
           from   emp
          where  deptno = 20;

문제262.   통신사가 kt 인 학생들의 이름과 나이를 출력하는데 3번째 학생만 출력하시오 !

select   ename,  age
  from   (  
                select  rownum  as 번호, ename, age
                    from  emp13
                   where  lower(telecom) ='kt'
             )
  where   번호 = 3;


문제263. ( 확률문제를 위한 연습문제)  숫자 1부터 100까지 출력하시오 !

select   level  
   from   dual
   connect   by   level <= 100; 

문제264.  동전을 100 번 던지시오 !( 앞면은 1, 뒷면은 0 입니다. )

select   round( dbms_random.value(0,1) )
   from   dual
   connect   by   level <= 100; 

설명:   round( dbms_random.value(0,1) )  가  100 번 수행되었습니다.

문제265.  동전을 100 번 던졌을때 앞면이 나오는 확률을 구하시오 !

select     count(*) / 100
 from   (  
     select   round( dbms_random.value(0,1) )   동전 
           from   dual
            connect   by   level <= 100
           )
 where  동전 = 1; 

문제266.  주사위를 100번 던져서 주사위 눈이 몇이 나오는지 확인하시오 !

 select   round( dbms_random.value(0.5, 6.5) )
  from  dual
  connect  by  level <= 100;

   0.5 <=  x  < 6.5  

문제267. (확률문제) 주사위를 10000번 던져서 주사위의 눈이 5가 나올 확률을 구하시오 !

select   count(주사위) / 10000
 from   ( 
        select   round( dbms_random.value(0.5, 6.5) )  주사위
            from  dual
            connect  by  level <= 10000
           )
  where   주사위 = 5;

문제268. (확률문제) 주사위 2개를  10000번을 던져서 주사위의 눈의 합이 12가 되는
            확률은 어떻게 되는가 ?

  답변으로 코드를 달아주세요~~~

 select count(*)/10000
     from (
           select round(dbms_random.value(0.5,6.5)) +
                   round(dbms_random.value(0.5,6.5)) as 주사위
             from dual
             connect by level <= 10000 
            )
     where 주사위=12;

select count(*)/10000
from (select round(dbms_random.value(0.5,6.5)) as 주사위1,
      round(dbms_random.value(0.5,6.5)) as 주사위2
      from dual
      connect by level <= 10000)
where 주사위1+주사위2 = 12;

■  057 출력되는 행 제한하기 2(Simple TOP-n Queries)

예제1.  이름, 월급과 직업을 출력하는데 월급이 높은 사원순으로 출력하시오 !

select   ename, sal,  job
  from   emp
  order  by   sal   desc ;

예제2. 위에서 출력된 결과에서  위쪽에 4명만 출력하시오 !

 select   ename, sal, job
  from  emp
  order  by   sal   desc    fetch  first  4  rows  only ;

문제269.   우리반에서 통신사가 kt 인 학생들의 이름과 나이를 출력하는데
             나이가 높은 학생들중에 5명만 출력하시오 !

 select   ename, age
  from  emp13
  order  by   age   desc   fetch  first  5  rows  only ;

문제270.  우리반에서 통신사가 kt 인 학생들 중에서 나이가 높은 학생들 
            상위 20% 에 해당하는 학생들을 출력하시오 !

 select   ename, age
  from  emp13
  order  by   age  desc   fetch  first   20  percent  rows  only;

문제271.  사원번호, 이름, 직업, 월급을 월급이 높은 사원부터
             출력하는데 맨위에 2명만 출력하시오 !

select   empno, ename, job, sal 
  from  emp
  order   by  sal  desc   fetch  first  2  rows  only;

문제272. 사원번호, 이름, 직업, 월급을 월급이 높은 사원부터 출력하는데
            월급이 1등과 2등을 출력하시오 !

select  *
  from  (  
       select  empno, ename, job, sal,  dense_rank()  over  (order  by sal desc) 순위
           from   emp
           )
  where  순위 in (1, 2);

select   empno, ename, sal, job
     from  emp
     order  by   sal   desc    fetch  first  2   rows  with  ties; 

문제273.   이름, 나이를 출력하는데 나이가 높은 학생순으로 7등까지 출력하시오 !

select   ename, age
     from  emp13
     order  by   age   desc    fetch  first  7   rows  with  ties; 


문제274. (확률문제) (통계를 코드로 구현) 주사위 1개와 동전 1개를 동시에 던져서
             주사위의 눈이 5가 나오고 동전이 앞면이 나올 확률을 구하시오 !
              ( 주사위와 동전을 동시에 100000 번 던져서 알아내세요)

  하시고 카페에 올리세요 ~~

Select count(*) /10000
 from (
    Select round ( dbms_random.value(0.5, 6.5) ) 주사위, 
           round ( dbms_random.value(0, 1) ) 동전
           from dual
                connect by level  <= 10000 )
   where 주사위 =5 and 동전 = 1;

책 171 페이지 맨위의 쿼리문을 실행하세요 ~

select  empno,  ename,  job, sal
  from   emp
  order  by  sal  desc   offset  9  rows ;

문제275.   우리반에서 이름과 나이를 출력하는데 나이의 순위가  20위부터 끝까지 
              출력하시오 !

select  ename,  age
  from   emp13
  order  by   age  desc   offset  19  rows;

문제276.  위의 결과에서 행 맨위에 2명만 출력하시오 !

select  ename,  age
  from   emp13
  order  by   age  desc   offset  19  rows
  fetch  first  2  rows  only; 

■ 058 여러 테이블의 데이터를 조인해서 출력하기 1(EQUI JOIN)

지금까지는 하나의 테이블에서 데이터를 가져와서 출력했다면
이제부터는 2개 이상의 테이블에서 데이터를 가져와서 같은 화면에서
출력해보겠습니다. 

예제1: 부서 테이블을 조회하세요 !


예제2.  사원 이름과 부서위치를 출력하시오 !

select  ename, loc
  from   emp,  dept 
  where   emp.deptno = dept.deptno ;  
                    ↑
               조인조건 ( emp 와 dept 를 서로 조인시키기위한 연결고리)

설명:   만약에 2개의 테이블을 위와 같이 조인할때 조인조건을 기술 하지 않으면
          전체 데이터를 다 조인하게 됩니다. 

예제3. 위의 결과에서 CHICAGO 만 출력하시오 

select  ename, loc
  from   emp,  dept 
  where   emp.deptno = dept.deptno and  loc='CHICAGO'; 


문제277.   직업이 SALESMAN 인 사원들의 이름과 직업과 부서위치를 출력하시오 !

 select  emp.ename, emp.job,  dept.loc
    from  emp,  dept
    where  emp.deptno = dept.deptno  and  emp.job='SALESMAN';

※ 컬럼명 앞에 테이블명을 적어줘야 검색성능이 더 좋아집니다. 

문제278.  월급이 1000 에서 3000 사이인 사원들의 이름과 월급과 부서위치를 
             출력하시오 !

select   emp.ename, emp.sal,  dept.loc
   from  emp  ,  dept
   where  emp.deptno = dept.deptno  and  emp.sal  between  1000  and 3000;

문제279.  DALLAS 에서 근무하는 사원들의 이름과 부서위치를 출력하시오 !

select  emp.ename,  dept.loc
  from  emp,  dept
  where  emp.deptno = dept.deptno   and  dept.loc='DALLAS';

문제280.  이름의 첫글자가 S 로 시작하는 사원들의 이름과 월급과 부서위치를 출력하시오
           (40분까지 쉬세요 ~~ 


문제281.  부서명이 SALES 에서 근무하는 사원들의 이름과 부서명과 월급을 출력하시오

select   emp.ename, dept.dname,  emp.sal
  from   emp,   dept  
  where  emp.deptno = dept.deptno  and  dept.dname='SALES';

문제282.  ( 오늘의 마지막 문제 ) 확률문제.  주사위를 던져서 주사위의 눈이 홀수가
            나올 확률을 출력하시오 !  (  주사위를 10만번 던지세요)

  5시 신호 보냈습니다.

  나머지 시간은 자유롭게 자습 또는 복습하세요 ~~

select count(*) /100000
    from    (select round(dbms_random.value(0.5,6.5)) as 주사위 
                   from dual ) 
    where mod(주사위,2)=1; 

오늘 점심시간 문제. [SQL로 수학문제 풀기] 1부터 10까지의 곱은 얼마인가?

문제283.  1부터 10까지의 합을 SQL 로 출력하시오 !


 select   sum(level)
  from  dual
  connect  by  level <= 10;

문제284.  아래의 로그식을 SQL 로 구현하시오 ~

  select  log(2,4)  from  dual;

문제285.  밑수가 자연상수 e 인 로그인 자연로그를 SQL 로 구현하시오 !

 




 select   ln(10)  from  dual; 

문제286.  밑수가 자연상수 e 이고 지수가 10인 아래의 지수식을 SQL 로 구현하시오 !





 select  exp(10)  from  dual;


점심시간 문제: (카카오 면접문제 응용) 1부터 10까지의 곱은 얼마인가요 ?


* 조인(join) ?   두개 이상의 테이블의 결과를 하나의 결과로 출력하는 SQL 문법 

문제287.   이름, 부서위치를 출력하시오 !

select  emp.ename, dept.loc
  from  emp  ,  dept
  where emp.deptno = dept.deptno;

문제288. 위의 SQL을 테이블 별칭을 이용해서 코딩을 심플하게 하시오 !

  select   e.ename,  d.loc
     from   emp   e,   dept   d
     where   e.deptno = d.deptno; 

※ 테이블 별칭을 사용하게 되면 코딩을 단순하게 할 수 있습니다. 
   위와 같이 컬럼명 앞에 테이블명 또는 테이블 별칭을 붙여주고 SQL 조인문을 작성하면
   성능이 아주 좋아집니다.

문제289.  월급이 1000 에서 3000 사이인 사원들의 이름과 월급과 부서위치를 출력하시오

select  e.ename,  e.sal, d.loc
  from   emp   e,  dept   d
  where  e.deptno = d.deptno  and  e.sal  between  1000  and  3000 ;


문제290.  직업이 ANALYST 인 사원들의 이름과 직업과 부서위치를 출력하시오 !

select   e.ename,  e.job,  d.loc
  from   emp   e,  dept   d
  where  e.deptno = d.deptno  and  e.job='ANALYST';

문제291.  직업이 ANALYST , CLERK 인 사원들의 이름과 직업과 부서위치를 출력하시오!

select  e.ename,  e.job,  d.loc
  from   emp    e,   dept   d
  where  e.deptno = d.deptno  and  e.job   in  ('ANALYST', 'CLERK');  

문제292.   직업이 SALESMAN 이 아닌 사원들의 이름과 직업과 월급과 부서위치를
              출력하는데  월급이 높은 사원부터 출력 되게하시오 !

select   e.ename,  e.job,  e.sal,  d.loc
   from   emp   e,   dept    d
   where  e.deptno = d.deptno   and  e.job != 'SALESMAN'
   order  by   e.sal  desc; 

문제293.   부서위치, 부서위치별 토탈월급을 출력하시오 !

select  d.loc, sum(e.sal)
  from   emp  e,  dept   d
  where  e.deptno = d.deptno
  group  by  d.loc;

문제294.  부서명(dname) , 부서명별 평균월급을 출력하는데 부서명별 평균월급이
             높은것부터 출력하시오 !

select  d.dname,  avg(e.sal)
  from   emp   e,  dept   d
  where  e.deptno = d.deptno 
  group  by d.dname
  order  by  2  desc;  
 
문제295.  통신사 부가 옵션 테이블을 생성하시오 !

drop  table  telecom2;

  create  table  telecom2
  (  telecom     varchar2(10),
     price         number(10),
     t_option       number(10) );

insert   into   telecom2  values('sk', 19000, 5 );
insert   into   telecom2  values('lg', 18500, 5 );
insert   into   telecom2  values('kt', 17500, 6 );
commit;

문제296. 이름, 전공, 통신사 , 통신사 가격(price) 를 출력하시오!

select  e.ename, e.major, e.telecom, t.price
  from   emp13   e,   telecom2    t
  where  decode(lower(e.telecom),'skt', 'sk', lower(e.telecom) )  = t.telecom  ;


■ 059 여러 테이블의 데이터를 조인해서 출력하기 2(NON EQUI JOIN)

 equi join 은 조인하려는 두 테이블 사이에 공통된 컬럼이 있어서 이퀄(=) 로 조인조건을
 줄 수 있는 조인문법 

예:  where  e.deptno = d.deptno ;

 지금부터 볼려는 non equi join 은 조인하려는 두 테이블 사이에 공통된 컬럼이 없는 경우
 의 조인을 말합니다. 

예제1. 급여등급(salgrade) 테이블을 생성하세요 !

drop  table  salgrade;
 
create table salgrade
( grade   number(10),
  losal   number(10),
  hisal   number(10) );
 
insert into salgrade  values(1,700,1200);
insert into salgrade  values(2,1201,1400);
insert into salgrade  values(3,1401,2000);
insert into salgrade  values(4,2001,3000);
insert into salgrade  values(5,3001,9999);
 
commit;

select  *
  from  salgrade; 

예제2.   이름, 월급과 급여등급(grade) 을 출력하시오 !

 select  e.ename, e.sal,  s.grade
   from   emp   e,   salgrade   s
   where   e.sal   between  s.losal   and  s.hisal;

     

문제297. 급여등급이 4등급인 사원들의 이름과 월급과 급여등급을 출력하는데
            월급이 높은 사원부터 출력하시오 !

 select  e.ename, e.sal,  s.grade
   from   emp   e,   salgrade   s
   where   e.sal   between  s.losal   and  s.hisal  and   s.grade = 4
   order  by  e.sal  desc ;


문제298.  급여등급, 급여등급별 토탈월급을 출력하시오 ! 

 select   s.grade,  sum(e.sal)
  from   emp  e,  salgrade   s
  where   e.sal  between  s.losal  and  s.hisal
  group   by  s.grade; 

문제299. 위의 결과를 다시 출력하는데 급여등급별 토탈월급 쪽에 천단위를 표시하세요

 select   s.grade, to_char( sum(e.sal), '999,999') 
  from   emp  e,  salgrade   s
  where   e.sal  between  s.losal  and  s.hisal
  group   by  s.grade; 

문제300.  부서위치, 부서위치별로 속한 사원들의  이름을 가로로 출력하시오 !
             (listagg 함수 사용) 

 select   d.loc,  listagg( e.ename, ',' )  within  group  ( order  by  e.ename  asc ) 이름
     from    emp   e,  dept   d
     where  e.deptno = d.deptno 
     group  by   d.loc; 

문제301.  급여등급, 급여등급별로 속한 사원들의 이름을 가로로 출력하시오 !

 select  s.grade ,  listagg( e.ename, ',')  within  group ( order  by  e.ename )  
  from   emp   e,   salgrade   s
  where  e.sal  between  s.losal  and  s.hisal
  group  by s.grade; 

문제302.  두개의 주사위가 있다. 두개의 주사위를 동시에 던져서 하나는 짝수가 나오고
             다른 하나는 홀수가 나올 확률이 어떻게 되는가 ?
             ( 주사위를 십만번 던지세요 ~)

답글로 달아주세요 ~

Select count(*) / 100000
From( 
Select trunc( dbms_random.value(1,7) ) as 주사위1,
	   trunc( dbms_random.value(1,7) ) as 주사위2
	From dual
	Connect by level <= 100000
    )
Where mod( 주사위1, 2 ) = 0
and mod( 주사위2, 2 ) != 0;

select count(*) / 100000 
from ( select round( dbms_random.value(0.5,6.5) ) as 주사위1,
round( dbms_random.value(0.5,6.5) ) as 주사위2
from dual
connect by level <= 100000)
where (주사위1 in (1,3,5) and 주사위2 in (2,4,6) ) 
or  ( 주사위1 in (2,4,6) and 주사위2 in (1,3,5) ) ;

 짝수, 짝수  0.25
 홀수, 홀수  0.25
 짝수, 홀수  0.25
 홀수, 짝수  0.25


문제303.  직업이 SALESMAN 이고 월급이 1200 이상인 사원들의 이름과 월급과 직업과
             부서위치를 출력하시오 ! 

 select  e.ename, e.sal,  e.job,  d.loc
  from   emp    e,  dept    d
  where  e.deptno = d.deptno  
   and  e.job='SALESMAN'   
   and  e.sal >= 1200; 

문제304.  부서위치가 CHICAGO 이고 직업이 SALESMAN 인 사원들의 이름과 월급과 
            직업과 부서위치를 출력하시오 !

select   e.ename, e.sal,  e.job,  d.loc
   from   emp  e,  dept   d
   where  e.deptno = d.deptno  
     and  d.loc='CHICAGO'
     and  e.job='SALESMAN';


로그 수학문제 검사받고 식사하러 가세요 ~~  A반은 라인검사, B반은 카페에 올리세요 ~
의석이와 민석이의 생각해야할 SQL 혹시 아는 사람들은 뎃글을 달아주세요 ~

■  060 여러 테이블의 데이터를 조인해서 출력하기 3(OUTER JOIN)

 equi join 으로는 조인이 되지 않는 조인결과를 볼 때 사용하는 조인 방법 

예제1.   부서 테이블의 모든 데이터를 출력하시오 (dept 테이블)


예제2.   사원이름, 부서위치를 출력하는데 출력 안된 부서위치가 무엇인지 확인하시오 

select  e.ename, d.loc
  from  emp  e, dept  d
  where  e.deptno = d.deptno;

 사원 테이블에 40번 부서번호인 사원이 없어서 BOSTON 이 출력되지 않은것 입니다. 

 위의 조인된 결과에서 BOSTON 이 출력되게 해서 BOSTON 에 사원이 배치되지 않았구나
 라는것을 알고 싶다면 아래와 같이 SQL 을 작성해야합니다. 

select  e.ename, d.loc
  from  emp  e, dept  d
  where  e.deptno (+) = d.deptno;

위와 같은 조인 방법을 OUTER JOIN 이라고 합니다. 

문제305.  부서위치, 부서위치별 토탈월급을 출력하시오 ! (세로 출력)

select  d.loc, sum(e.sal)
  from   emp  e, dept  d
  where  e.deptno = d.deptno
  group  by  d.loc;

문제306. 위의 결과에서 BOSTON 도 출력되게 하시오 ! 

select  d.loc, sum(e.sal)
  from   emp  e, dept  d
  where  e.deptno (+) = d.deptno
  group  by  d.loc;

문제307.  위의 결과에서  토탈월급에 NULL 로 나오는 부분에 0 으로 출력되게하시오 

select  d.loc, nvl(sum(e.sal), 0 )
  from   emp  e, dept  d
  where  e.deptno (+) = d.deptno
  group  by  d.loc;

■ 061 여러 테이블의 데이터를 조인해서 출력하기 4(SELF JOIN)

  자기 자신의 테이블과 조인하는 조인 문법 입니다. 
  아래와 같은 질문들에 답을 하려면 self join 을 사용해야 합니다.

 1. BLAKE 의 관리자가 누구인가?
 2. 관리자 보다 더 많은 월급을 받는 사원들의 직업은 무엇인가 ?
 3. 관리자 보다 먼저 입사한 사원들은 누구인가 ?

 사원 테이블에 mgr 컬럼이 관리자의 사원번호 입니다. 

  select   empno, ename, mgr
   from  emp
   where  ename='BLAKE';

 7839가 사원번호인 사원은 누구인가요 ?

 select   empno, ename
   from  emp
   where   empno = 7839;

 BLAKE 의 관리자(직속상사)가 KING 이구나

 BLAKE 의 관리자가 누구인지 알아낼려면 위와 같이 쿼리를 2번 쓰거나 아니면
 시각화 하거나 아니면 self  join 을 사용하면 됩니다.

  select  사원.ename,   관리자.ename
     from   emp   사원,  emp  관리자
     where   사원.mgr  =  관리자.empno   ; 

문제308.  관리자 보다  월급이 더 많은 사원의 이름과  관리자의 이름을 출력하시오 !

  select  사원.ename,   관리자.ename
     from   emp   사원,  emp  관리자
     where   사원.mgr  =  관리자.empno   and   사원.sal   >   관리자.sal ;

문제309.   사원의 이름과 관리자의 이름을 출력하는데 사원 이름쪽에 KING 도 출력하시오

 select  사원.ename,   관리자.ename
     from   emp   사원,  emp  관리자
     where   사원.mgr  =  관리자.empno(+);

문제310.   사원 이름과 관리자의 이름을 출력하는데  관리자 보다 먼저 입사한 사원들만
              출력하시오 !

select  사원.ename,  사원.hiredate,  관리자.ename, 관리자.hiredate
     from   emp   사원,  emp  관리자
     where   사원.mgr  =  관리자.empno  and   사원.hiredate    <  관리자.hiredate ;

문제311.  아래의 수학식을 SQL 로 구현하시오 !




 select   power(2, 4)   from  dual;

문제312. 아래의  수학식을 SQL 로 구현하시오 !



 select   sqrt(4)  from  dual;

문제313.  아래의 피타고라스의 정리의 직각 삼각형의 빗변의 길이를 구하시오 !


문제314.   사원이름,  부서위치, 월급,  급여등급(grade) 을 출력하시오 !

      dept ------- emp -------  salgrade 
               ↑              ↑
           조인조건1       조인조건2 

select  e.ename,  d.loc,  e.sal,  s.grade
   from   dept   d,  emp  e,  salgrade   s 
   where  e.deptno = d.deptno   and  e.sal  between  s.losal   and  s.hisal ;
 
문제315.  위의 결과에서 월급이 3000 이상인 사원들만 출력하시오 !

select  e.ename,  d.loc,  e.sal,  s.grade
   from   dept   d,  emp  e,  salgrade   s 
   where  e.deptno = d.deptno   and  e.sal  between  s.losal   and  s.hisal 
    and   e.sal >= 3000; 

문제316.  아래의 보너스 테이블을 생성하시오 

 create  table  bonus_table
as
  select   empno,   sal * 20   as  bonus
       from   emp;

select  * from bonus_table;

문제317.  사원이름, 월급, 보너스(bonus) 를 출력하시오 ! ( emp 와 bonus_table 조인)

select  e.ename,   e.sal,  b.bonus
  from   emp  e,  bonus_table   b
  where   e.empno = b.empno; 

문제318.  DALLAS 에서 근무하는 사원들의 이름과 부서위치와 보너스(bonus) 를
             출력하시오 !

       bonus  ---------- emp ---------------- dept 
                     ↑                    ↑
                조인조건1           조인조건2

select   e.ename, d.loc,  b.bonus
  from   bonus_table  b,  emp   e,  dept  d
  where   b.empno = e.empno    and  e.deptno = d.deptno 
    and   d.loc='DALLAS';

■  062 여러 테이블의 데이터를 조인해서 출력하기 5(ON절)

 현업에서 많이 쓰는 데이터베이스의 종류?   1. 오라클
                                                         2. mySQL
                                                         3. maria  db 
                                                         4. MSSQL 
  * 조인 문법 :  1. 오라클 조인 문법
                              1.1  equi  join
                              1.2  non equi  join
                              1.3  outer  join
                              1.4  self  join

                    2. 1999 ANSI (American  National  Standard   Institute) 문법  
                              2.1  on 절을 사용한 조인
                              2.2  using 절을 사용한 조인 
                              2.3  natural  조인
                              2.4  left/right/outer 조인
                              2.5  full outer  조인 

* on 절을 사용한 조인문법 예제:

  select   e.ename,  d.loc
   from  emp  e    join    dept   d
    on  ( e.deptno = d.deptno );



 조인 조건은 on 절을 사용하고 검색조건은 where 절에 사용합니다. 

문제319.   DALLAS 에서 근무하는 사원들의 이름과 월급과 부서위치를 출력하시오 !
              ( ON 절을 사용한 조인으로 수행하세요) 

 select  e.ename,  e.sal,  d.loc
   from   emp  e   join   dept   d
   on  ( e.deptno = d.deptno )  
  where   d.loc='DALLAS'; 

문제320.  (SQL 로 수학문제 풀기)   밑변의 길이를 입력하시오 ! 높이를 입력하시오 !
            라고 물어보게하시오 !

 select sqrt(power(&높이,2)+ power(&밑변,2))
        from dual;

※ &변수명을 치환변수라고 합니다.  치환변수를 입력하면 반복적으로 자주 수행하는
   똑같은 SQL 문의 입력값을 편하게 변경할 수 있습니다. 

문제321.  위의 결과에서 컬럼명이  빗변으로 출력되게하시오 !

                빗변  
       ----------------
            13.453624

select sqrt(power(&높이,2)+ power(&밑변,2))  as  "빗변의 길이"
       from dual;

문제322.  직업이 SALESMAN 이고 월급이 1200 이상인 사원들의 이름과 부서위치와
            직업과 월급을 출력하시오 !( on 절을 사용한 조인으로 하세요) 

select  e.ename, d.loc
  from  emp  e   join   dept   d
  on  ( e.deptno = d.deptno )
  where   e.job='SALESMAN'   and  e.sal >= 1200;

문제323.  부서위치, 부서위치별 토탈월급을 출력하시오 ! (on 절을 사용한 조인으로)

select  d.loc,  sum(e.sal)
  from  emp  e   join  dept   d
  on  ( e.deptno = d.deptno )
  group  by  d.loc; 

문제324.  사원이름, 월급, 부서위치, 급여등급(grade) 을 출력하세요 !
             ( on 절을 사용한 조인으로 수행하세요 )

        dept -----------  emp ------------ salgrade  

select  e.ename,  e.sal,  d.loc,  s.grade
  from   emp  e   join    dept  d    
                                on  ( e.deptno = d.deptno )
                      join    salgrade  s
                                on  ( e.sal  between  s.losal  and  s.hisal );
  
문제325.  위의 결과에서 부서위치가 DALLAS 인 사원들만 출력하시오 !

select  e.ename,  e.sal,  d.loc,  s.grade
  from   emp  e   join    dept  d    
                                on  ( e.deptno = d.deptno )
                      join    salgrade  s
                                on  ( e.sal  between  s.losal  and  s.hisal )
 where    d.loc='DALLAS';
  
■ 063 여러 테이블의 데이터를 조인해서 출력하기 5(USING절)

  예제:   select  e.ename,  d.loc
             from   emp  e   join   dept   d
             using   (deptno); 

주의할 사항:  using 다음에 컬럼명 앞에 테이블 별칭을 사용하면 에러가 납니다. 

  select  e.ename,  d.loc
             from   emp  e   join   dept   d
             using   (e.deptno); 

■  064 여러 테이블의 데이터를 조인해서 출력하기 6(NATURAL JOIN)

예제:  select   e.ename,  d.loc
          from  emp  e   natural  join   dept   d ;

설명: 조인 조건 없이 그냥 natural join 이라고 하면 알아서 조인조건을 찾아서
       조인합니다. 

■ 065 여러 테이블의 데이터를 조인해서 출력하기 7(LEFT/RIGHT OUTER JOIN)

예제1.  오라클 조인 문법 (outer 조인)

 select  e.ename, d.loc
  from  emp  e,  dept   d
  where e.deptno (+) = d.deptno ;

예제2.  1999 ansi  문법 

 select  e.ename, d.loc
  from  emp   e  right outer join   dept   d
  on  ( e.deptno = d.deptno ) ;

문제326.   부서위치, 부서위치별 토탈월급을 출력하는데 BOSTON 도 출력되게 하시오
               (1999 ANSI 문법으로 하세요 )

 select  d.loc,  sum(e.sal)
  from   emp  e   right  outer   join  dept  d
  on  ( e.deptno = d.deptno )
  group  by  d.loc; 

■  66 여러 테이블의 데이터를 조인해서 출력하기 8(FULL OUTER JOIN)

 중요 !!!  오라클 조인문법으로 볼 수 없는 결과를 출력하는 조인 문법 입니다. 

 insert  into  emp(empno, ename, sal, deptno)  
  values(2345, 'JACK', 3400, 70 );

예제1.   오라클 조인 문법 

     select  e.ename,  d.loc
        from  emp  e,  dept   d
        where  e.deptno (+) = d.deptno (+);

예제2.  1999 ansi 조인 문법 

     select  e.ename,  d.loc
        from   emp  e  full  outer  join   dept   d
        on  ( e.deptno = d.deptno);

문제326.   치환변수를 이용해서 아래와 같이 3개의 숫자값을 입력받게 하시오 !

  밑변의 길이를 입력하시오 ~  3
  높이의 길이를 입력하시오 ~  4
  빗변의 길이를 입력하시오 ~  5

select  '직각 삼각형이 맞습니다.'   as  result
 from  (   
     SELECT SQRT(POWER(&밑변,2)+POWER(&높이,2))  빗변
        FROM DUAL
          )
 where  빗변 = &빗변; 

문제327.  (오늘의 마지막 문제)  피타고라스의 정리에 해당되지 않으면
             직각삼각형이 아닙니다. 가 출력되게하시오 

  밑변의 길이를 입력하시오 ~  3
  높이의 길이를 입력하시오 ~  4
  빗변의 길이를 입력하시오 ~  5
 
직각 삼각형이 맞습니다.                              수학 스터디 5번  
                                                            ( 머신러닝 수업에 필요한 수학내용)
  밑변의 길이를 입력하시오 ~  3                  일주일에 한번 저녘 5시 ~ 6시 
  높이의 길이를 입력하시오 ~  4                  ( 희망자에 한에서 )
  빗변의 길이를 입력하시오 ~  6                   
                                                            코딩 알고리즘 스터디 
직각 삼각형이 아닙니다.                             (제가 조장이나 발표자에게 알려주면) 
                                                            학생들에게 조장이 알려주는 방식

나머지 시간은 자유롭게 자습하세요 ~~~
6시 신호 보냈습니다. 
주말까지 수학(통계) 스터디 원하는 학생들은 뎃글로 올려주세요 ~


■  067 집합 연산자로 데이터를 위아래로 연결하기 1(UNION ALL)

 위쪽 SQL 의 결과 데이터와 아래쪽 SQL 의 결과 데이터를 하나의 결과로
 출력하는 집합 연산자

예제:  select  ename,  sal, deptno
           from  emp
          where  deptno = 10
        union   all
        select  ename, sal, deptno
         from  emp
         where  deptno = 20;

설명: 조인의 경우는 서로 다른 테이블의 결과가 양옆으로 붙어서 출력되는
       반면에  union all 과 같은 집합 연산자는 서로 다른 테이블의 결과를
       위 아래로 붙여서 출력합니다. 

문제328.  직업, 직업별 토탈월급을 출력하시오 !

select  job, sum(sal)
  from  emp
  group  by  job;

문제329.  직업, 직업별 토탈월급을 출력하는데 맨 아래에 전체 토탈월급도
             출력하시오 !

select  job, sum(sal)
  from  emp
  group  by  rollup(job);

문제330. 위의 결과를 rollup 쓰지 말고 쿼리문을 2개를 이용해서 
            union  all 로 구현해보시오 ~

select  job,  sum(sal)
  from  emp
  group  by  job
union   all
  select  to_char(null) as  job,   sum(sal)
     from  emp
     

※ union  all 과 같은 집합 연사자를 사용할 때 주의할 사항 

 1.  집합 연산자 위 아래의 쿼리문의 컬럼의 갯수가 서로 동일해야 합니다. (필수)
 2.  가급적 컬럼명이 동일해야 합니다. (권장)
 3.  집합 연산자 위 아래의 쿼리문의 컬럼의 데이터 타입이 위 아래로 서로
     동일해야 합니다. (필수)
 4.  order  by 절은 맨 아래의 쿼리문에만 사용할 수 있습니다. (필수)

문제331.  문제330번의 결과는 직업이 ABCD 순으로 출력되지 않았습니다.
             rollup 을 썼을 때 처럼 직업을 ABCD 순으로 출력하세요 !

select  job,  sum(sal)  as 토탈월급       45분까지 쉬세요 ~~
  from  emp
  group  by  job
union   all
  select   to_char(null) as  job,  sum(sal)  as 토탈월급
   from  emp
   order  by  토탈월급  asc;
    
설명: 그룹함수는 컬럼별칭을 반드시 기술해주세요 ~~ 그래서 order by 절에서
       사용할 수 있습니다. 

문제332.  부서번호, 부서번호별 토탈월급을 출력하는데 union  all 로 
             아래의 SQL 의 결과와 똑같은 결과가 나오게 출력하시오 !

 select  deptno, sum(sal)
  from  emp
  group  by  rollup(deptno);

답:
select  deptno,  sum(sal)  as  토탈월급
  from  emp
  group   by   deptno
union   all
select   to_number(null)   as   deptno, sum(sal)  as  토탈월급
  from  emp
  order  by  deptno  asc;

문제333.  입사한년도(4자리) , 입사한 년도별 평균월급을 출력하는데
             맨 아래에 전체 평균월급도 출력하시오 !

select  to_char(hiredate,'RRRR') as 입사년도, avg(sal)  as  평균월급
  from   emp
  group   by  to_char(hiredate,'RRRR')
union   all
select   to_char(null)  as  입사년도, avg(sal)  as  평균월급
  from   emp
  order   by  입사년도  asc; 

문제334.  입사한 년도, 입사한 년도별 평균월급, 입사한 년도별 토탈월급,
             입사한 년도별 최대월급, 입사한 년도별 최소월급이 출력되게하시오 !

select  to_char(hiredate,'RRRR'), avg(sal), sum(sal), max(sal), min(sal)
  from  emp
  group  by  to_char(hiredate,'RRRR');

문제335.  위의 결과에서 아래쪽에 집계 결과가 나오게 하시오 !

TO_CHAR(   AVG(SAL)   SUM(SAL)   MAX(SAL)   MIN(SAL)
-------- ---------- ---------- ---------- ----------
1981         2282.5      22825       5000        950
1983           1100       1100       1100       1100
1980            800        800        800        800
1982           2150       4300       3000       1300
집계결과:     2073       29025      5000        800

select  to_char(hiredate,'RRRR') , avg(sal), sum(sal), max(sal), min(sal)
  from  emp
  group  by  to_char(hiredate,'RRRR')
union  all
select    '집계결과'  ,  round(avg(sal)), sum(sal), max(sal), min(sal)
  from  emp;

문제336. 위의 결과를 년도가 ascending 하게 정렬되게 하시오 !

select  to_char(hiredate,'RRRR') , avg(sal), sum(sal), max(sal), min(sal)
  from  emp
  group  by  to_char(hiredate,'RRRR')
union  all
select    '집계결과'  ,  round(avg(sal)), sum(sal), max(sal), min(sal)
  from  emp
  order  by  1  asc; 

문제337.  통신사,  통신사별 평균나이, 통신사별 인원수를 출력하는데
             맨 아래쪽에 집계결과를 출력하시오 ~

select  decode(lower(telecom),'skt','sk',lower(telecom) ) as 통신사,  
         round(avg(age)), count(*)
  from   emp13
  group   by    decode(lower(telecom),'skt','sk',lower(telecom) )
 union   all
select  to_char(null)  as 통신사, avg(age), count(*)
 from  emp13;

■ 068 집합 연산자로 데이터를 위아래로 연결하기 2(UNION)

 union all 과 union 의 공통점은 둘다 두집합의 합집합을 출력하는 것입니다. 
 차이점은 union 은 교집합 데이터를 하나로 출력합니다. 

 198 페이지 

              union   all                                     union  



예제1.   select   deptno ,  sum(sal)
               from  emp
               group  by  deptno
          union
          select  to_number(null) as  deptno, sum(sal)
               from  emp; 


예제2.  select  deptno,  ename, sal                 
            from  emp
           where  deptno = 20
         union  all
         select   deptno, ename, sal
          from  emp
          where  deptno = 10;

          select  deptno,  ename, sal                 
            from  emp
           where  deptno = 20
         union  
         select   deptno, ename, sal
          from  emp
          where  deptno = 10;

 위의 2개의 SQL 의 차이점은 union 은  union all 다르게 데이터를 정렬을 합니다.
 그래서 굳이 정렬할 필요하가 없다면 union 보다는 union all 을 사용하는게 더 바람직합니다.
 검색 성능을 개선하기 위한 방법으로 union 보다는 union all 을 사용하는것을 
 더 권장합니다.

문제338.   직업, 직업별 토탈월급을 출력하는데 맨 아래에 전체 토탈월급을 출력하는
              아래의 SQL 의 결과를 union 으로 수행해보세요 !

select  job, sum(sal)
  from  emp
  group  by  rollup(job);

 답:

튜닝전:
 select  job, sum(sal)
  from  emp
  group  by  job
union 
select  to_char(null) as  job, sum(sal)
  from  emp;

튜닝후:
 select  job, sum(sal)
  from  emp
  group  by  job
union  all
select  to_char(null) as  job, sum(sal)
  from  emp;

오늘 점심시간 문제를 풀기 위한 문제1. 0 ~ 1까지의 실수를 2개를 출력하시오!

select  dbms_random.value(0,1),
        dbms_random.value(0,1)
 from  dual;




오늘 점심시간 문제를 풀기 위한 문제2. 0~1까지의 실수를 2개를 랜덤으로 
100개 출력하시오!


select  dbms_random.value(0,1),
        dbms_random.value(0,1)
 from  dual
 connect by level <= 100;

점심시간문제.  위에 100개중에 부채꼴 안에 들어가는 점의 갯수는 몇개인가 ?

 B 반은 라인 검사, A 반은 카페에 올리세요 ~

■ 069 집합 연산자로 데이터의 교집합을 출력하기(INTERSECT)

예제.  select   ename, sal, job, deptno
          from  emp
          where  deptno  in ( 10, 20 )
        intersect  
        select  ename, sal, job, deptno
         from  emp
         where  deptno  in ( 20, 30 );

문제339.   부서 테이블에서 부서번호를 출력하는데 사원 테이블에 있는 부서번호만
              출력하시오 !

 select  deptno
  from  dept
 intersect
 select  deptno
   from  emp;

문제340.   telecom2 에서 telecom 을 출력하는데 우리반 테이블에 있는
              통신사에 속한것들만 출력하시오 !

select  decode( lower(telecom),'skt', 'sk', lower(telecom) )
  from  emp13
intersect
select  telecom
  from  telecom2; 

■ 070 집합 연산자로 데이터의 차이를 출력하기(MINUS)

 두 집합간의 차이를 출력하는 집합 연산자 입니다. 

예제:  select  ename, sal, job, deptno
          from  emp
          where  deptno  in ( 10, 20 )
        minus
         select  ename, sal, job, deptno
           from  emp
          where  deptno  in ( 20, 30);

문제341.  부서 테이블의 부서번호와 사원 테이블의 부서번호를 minus 이용해서
            서로 빼서 부서 테이블에는 존재하는 부서번호인데 사원 테이블에는
            존재하지 않는 부서번호를 출력하시오 !

select  deptno
  from   dept
 minus
select  deptno
  from  emp; 

■  071 서브 쿼리 사용하기 1(단일행 서브쿼리)

예제1.  JONES 의 월급보다 더 많은 월급을 받는 사원들의 이름과 월급을 출력하시오 !

  select   ename, sal 
    from  emp
    where  sal > (  select  sal
                           from  emp
                           where  ename='JONES'  ); 

문제342.  SCOTT 과 같은 월급을 받는 사원들의 이름과 월급을 출력하시오 !

select  ename, sal
  from   emp
  where  sal =  ( select  sal 
                          from  emp
                          where  ename='SCOTT' ); 

문제343.  그러면 SCOTT 은 제외하고 출력하시오 !

select  ename, sal
  from   emp
  where  sal =  ( select  sal 
                          from  emp
                          where  ename='SCOTT' )
  and  ename !='SCOTT'; 

문제344.   SMITH 와 같은 직업을 갖는 사원들의 이름과 직업을 출력하는데
              SMITH 는 제외하고 출력하시오 !

select  ename,  job
  from   emp
  where   job  =  (select   job
                           from  emp
                           where  ename='SMITH' ) 
  and   ename != 'SMITH';

문제345.  ALLEN 보다 늦게 입사한 사원들의 이름과 입사일을 출력하시오 !


문제346.  최대월급을 받는 사원의 이름과 월급을 출력하시오 !

select ename, sal
 from emp
 where sal = ( select max(sal)
		from emp);

문제347.  서울시 물가 데이터에서 서울시에서 가장 비싼 품목의 이름과 가격과
             파는곳을 출력하시오 !

select a_name, a_price, m_name
  from  price
  where   a_price  = ( select  max(a_price)
                               from   price  );

문제348. 우리반에서 가장 나이가 어린 학생님께서 사용하는 통신사가 어딘지
            출력하시오 !

select   ename, age, telecom
 from  emp13
 where  age  = ( select  min(age)
                        from   emp13 );

문제349.  KING 에게 보고하는 사원들의 이름을 출력하시오 !
             ( KING 의 직속 부하 사원들 )

 select  ename
  from   emp
  where    mgr  =  (  select  empno
                              from  emp
                              where  ename='KING'  ) ;

문제350. 직업이 SALESMAN인 사원들의 최대월급보다 더 많은 월급을 받는 
            사원들의 이름과 월급과 직업을 사원 테이블에서 출력하시오 !

 select  ename, sal,  job
  from  emp
  where  sal >  (  select   max(sal)
                         from  emp
                         where  job='SALESMAN' );

■ 서브쿼리의 종류 3가지 

 1.  단일행 서브쿼리 : 서브쿼리에서 메인쿼리로 하나의 값이 리턴되는 경우
 2.  다중행 서브쿼리 : 서브쿼리에서 메인쿼리로 여러개의 값이 리턴되는 경우 
 3.  다중 컬럼 서브쿼리 : 서브쿼리에서 메인쿼리로 여러개의 컬럼값이 리턴되는 경우

■  072 서브 쿼리 사용하기 2(다중 행 서브쿼리)

예제. 직업이 SALESMAN 인 사원들과 같은 월급을 받는 사원들의 이름과 월급을
       출력하시오 !

select  ename, sal
  from  emp
  where  sal   in  ( select  sal
                            from  emp
                            where  job='SALESMAN' );

※ 서브쿼리에서 메인쿼리로 여러개 값이 리턴되는 다중행 서브쿼리는 
   다중행 서브쿼리 연산자를 사용해야 합니다. 

1. 단일행 서브쿼리시에 사용하는 연산자: =, !=, ^=, >, <, >=, <=
2. 다중행 서브쿼리시에 사용하는 연산자:  in, not  in , >all, <all, >any, <any

문제351.   30번 부서번호인 사원들과 직업이 같은 사원들의 이름과 월급과 직업을
              출력하시오 !

select  ename, sal, job
  from   emp
  where   job   in  ( select   job
                          from  emp
                          where  deptno = 30 );

문제352.  직업이 SALESMAN 인 사원들중에서의 최대월급보다 더 많은 월급을 받는
             사원들의 이름과 월급을 출력하시오 !

 select  ename, sal
  from  emp
  where  sal >all ( select  sal 
                          from  emp
                         where  job='SALESMAN');

문제353.   1981년도에 입사한 사원들중에서 월급이 가장 작은 사원보다 더 많은
               월급을 받는 사원들의 이름과 월급을 사원 테이블에서 출력하시오 ! 

select  ename, sal
  from    emp
  where   sal  >any ( select   sal
                              from   emp
                              where   to_char(hiredate,'RRRR') = '1981') ;

select  ename, sal
  from  emp
  where  sal >any ( select   sal
                           from  emp
                           where  hiredate  between  to_date('1981/01/01','RRRR/MM/DD')
                                                    and     to_date('1981/12/31','RRRR/MM/DD');

■  073 서브 쿼리 사용하기 3(NOT IN)

예제1. 관리자인 사원들의 이름을 출력하시오 !
         ( 직업이 MANAGER 인 사원들이 아니라 사원번호(empno) 가 관리자 번호(mgr) 
           인 사원들을 출력하시오)
         이 사원들의 사원번호는 자기 직속 부하 사원들의 관리자 번호(mgr) 입니다. 

select   ename
  from   emp
  where   empno  in (   select   mgr 
                                    from   emp  );

select  ename
  from  emp
  where  empno  = 7788  or  empno = 7902   or ......    or empno= null ; 


예제2.  관리자가 아닌 사원들의 이름을 출력하시오 !
 
select   ename
  from   emp
  where   empno not  in (   select   mgr 
                                    from   emp  );

select  ename
  from  emp
  where   empno  != 7788   and  empno != 7902  and ....  and   null  ;

문제354.  관리자인 사원들이 아까 6명 나왔으니까 관리자가 아닌 사원들 8명이
             꼭 출력되게하시오 ! 

 select   ename
   from   emp
   where   empno not  in (   select   mgr
                                         from   emp 
                                        where   mgr   is  not  null );

※ not  in  을 서브쿼리에서 사용할 때는 null 이 서브쿼리에서 메인쿼리로
  리터되지 않게 해줘야합니다. 

문제355. (복습문제)  JAMES 보다 더 많은 월급을 받는 사원들의 이름과 월급과 
             입사일을 출력하는데 최근에 입사한 사원부터 출력하시오 !

select ename, sal, hiredate
from emp
where sal > (select sal
                    from emp
                    where ename = 'JAMES')
order by 3 desc;

문제356. (복습문제) 직업, 직업별 토탈월급을 출력하는데  직업이 SALESMAN 은 
             제외하고 출력하고 직업별 토탈월급이 3000 이상인것만 출력하시오 !

select job, sum(sal)
from emp
WHERE   job != 'SALESMAN'
group by job
having  sum(sal) >=3000;

문제357.  직업과 직업별 토탈월급이 출력되게 하는데 맨 위쪽에 전체 토탈월급을
             출력하고 토탈월급들을 출력할때에 천단위 표시가 되게하시오 !

SELECT job, TO_CHAR(SUM(sal),'999,999')
   FROM emp
   GROUP BY CUBE(job);

문제358.  정사각형에서 부채꼴 안에 들어가는 빨간점의 갯수를 출력하는데
             정사각형 안에 입력할 빨간점의 갯수를 물어보게하시오 !

select count(*) "부채꼴 안의 점"
 from (
       select dbms_random.value(0,1) as x,
               dbms_random.value(0,1) as y
        from dual
 connect by level < = &점의갯수 )
 where power(x,2) + power(y,2) <= 1;

문제359.  원주율을 몬테카를로 알고리즘으로 알아내시오 ~

undefine  점의갯수

select  ( count(*) / &&점의갯수 ) * 4
 from (
       select dbms_random.value(0,1) as x,
               dbms_random.value(0,1) as y
        from dual
 connect by level < = &점의갯수 )
 where power(x,2) + power(y,2) <= 1;

설명:  && 를 앞에 2개를 사용한 이유는 점의갯수를 한번만 물어보게해서 
        값을 받아서 각각 저장하려고 앞에 2개를 사용한것입니다. 

■  074 서브 쿼리 사용하기 4(EXISTS와 NOT EXISTS)

예제.  부서 테이블에 있는 부서번호 중에서 사원 테이블에도 존재하는 부서번호의
        부서번호, 부서명, 부서위치를 출력하시오 

select  deptno, dname, loc
  from   dept   d 
  where   exists   (  select   'X'
                            from  emp   e
                            where  e.deptno = d.deptno     );

설명: exists 문을 사용했으면 무조건 메인쿼리부터 수행이 됩니다. 
        exists 문을 사용하게 되면 장점이 서브쿼리에서 조건절에 해당하는 데이터를
       검색할때 존재하기 하면 더이상 서브쿼리의 테이블을 다 스캔하지 않고 멈춥니다.

문제360.  이번에는 존재하지 않는 부서번호를 출력하시오 !

select  deptno, dname, loc
  from   dept   d 
  where  not exists   (  select   'X'
                            from  emp   e
                            where  e.deptno = d.deptno     );

문제361. (오늘의 마지막 문제)  방화 사건의 큰 원인이 무엇인지 출력하시오 !

 힌트:  unpivot 문을 사용하세요 ~~

 5시 신호 보냈습니다.

 마지막 문제 올리시고 나머지 시간은 자유롭게 자습하세요 ~
 질문은 언제든 줌 또는 직접 물어보세요 ~~~~

 6시 신호 보냈습니다. 

■  075 서브 쿼리 사용하기 5(HAVING절의 서브 쿼리)

예제1.   직업,  직업별 토탈월급을 출력하시오 !( 세로 출력 )

 select  job,  sum(sal)
  from  emp
  group   by  job; 

예제2.  위의 결과를 다시 출력하는데 SALESMAN 의 토탈월급보다 더 큰것만
          출력하시오 !

 select  job,  sum(sal)
  from  emp
  where  sum(sal) > ( select  sum(sal)
                               from  emp
                               where  job='SALESMAN' )
  group   by  job; 

※ 그룹함수로 검색조건을 주는 절은 where 절이 아니라 having 절이므로
    having 절에 작성을 해줘야 합니다. 

select  job,  sum(sal)
  from  emp
  group   by  job
  having  sum(sal) > ( select  sum(sal)
                               from  emp
                               where  job='SALESMAN' );

※  select 문에서 서브쿼리를 쓸수 있는 절

 select     서브쿼리 가능
  from     서브쿼리 가능 
  where    서브쿼리 가능
  group  by    서브쿼리 불가능
  having      서브쿼리 가능 
  order  by    서브쿼리 가능 

문제362.  직업, 직업별 인원수를 출력하는데 직업이 ANALYST 인 사원들의 
              인원수보다 더 많은것만 출력하시오 !

select  job,  count(*)
 from  emp
 group  by  job
 having  count(*) > ( select  count(*)
                        from  emp
                        where  job='ANALYST' )

■ 076 서브 쿼리 사용하기 6(FROM절의 서브 쿼리)

예제1.  사원 테이블에서 이름과 월급과 월급에 대한 순위를 출력하는데
          순위가 1등인 사원만 출력하시오 !

select  *
 from  ( 
           select   ename, sal,  rank()  over  (order by sal desc) 순위
              from  emp 
          )
 where   순위 = 1;

※ from 절의 서브쿼리를 사용하게 되면 원래 from 절의 용도는 테이블이 있어야
   자리인데 그 자리에 쿼리문이 있으므로 그 쿼리문의 결과가 메모리에 
   올라가고 그 메모리에 올라간 데이터를 마치 테이블처럼 보고 사용하는 것이다.

문제362. 서울시 물가 데이터에서  가장 비싼 품목 순위 1위부터 10위까지
            품목(a_name) 과 가격(a_price) 과 순위를 출력하시오 !

select  a_name, a_price, 순위
 from  (
            select  a_name, a_price, 
                  dense_rank()  over  (order  by  a_price desc)  순위
               from  price
          )
 where   순위 between  1 and 10; 

문제363.  (SQL 로 수학문제 풀기) 팩토리올(factorial) SQL 구현하시오 !

 
 숫자를 입력하세요 ~  5

  120

문제364.  (복습 문제) 부서번호, 이름, 월급, 순위를 출력하는데
             순위가 부서번호별로 각각 월급이 높은 사원순으로 순위를 부여하시오!

select  deptno, ename, sal,  dense_rank()  over  ( partition  by  deptno
                                                                order  by   sal  desc ) 순위
   from   emp;

문제365. 부서위치,  이름, 월급, 순위를 출력하는데 순위가 부서위치별로 각각
            월급이 높은 사원순으로 순위를 부여하시오 !

select  d.loc , e.ename, e.sal,  dense_rank()  over  ( partition  by d.loc
                                                                order  by   e.sal  desc ) 순위
   from   emp   e,  dept   d
    where   e.deptno = d.deptno ;

문제366.  위의 결과에서 부서위치별로 1등들만 출력되게하시오 !

select *
  from  (  
      select  d.loc , e.ename, e.sal,  dense_rank()  over  ( partition  by d.loc
                                                                order  by   e.sal  desc ) 순위
          from   emp   e,  dept   d
          where   e.deptno = d.deptno 
          )
 where  순위 = 1; 

■  077 서브 쿼리 사용하기 7(SELECT절의 서브 쿼리)

select   서브쿼리 가능( scalar  subquery )
 from 
 where
 group by
 having
 order  by 

예제1.  사원 테이블 전체의 토탈월급을 출력하시오 

 select  sum(sal)
  from  emp;

예제2.  사원이름, 사원 월급,  사원 테이블 전체의 토탈월급을 출력하시오 

select  ename, sal,  (  select   sum(sal)  from   emp  )  as 전체토탈
   from   emp;

문제367.   이름, 나이,  우리반 테이블 전체에서의 평균나이를 출력하시오 !

select  ename, age,  ( select  avg(age)  from   emp13 ) as 평균나이
  from   emp13;

※ 스칼라서브쿼리의 성능상의 문제점 ?

  스칼라 서브쿼리문이 전체 행수만큼 반복되어서 수행된다는게 문제점
                      ↓
   오라클에서 알아서 이 문제를 개선했습니다. 
   어떻게 개선했냐면 제일 첫번째 행에서 위의 평균나이를 구한다음 메모리에
   저장하고(캐쉬시킴) 그 다음행 부터는 메모리에 저장된 결과만 가져오고
    스칼라 서브쿼리문을 실행하지 않습니다. 

튜닝전:
select  ename, age,  ( select  avg(age)  from   emp13 ) as 평균나이
  from   emp13;

튜닝후:
select  ename, age,  avg(age)    over   ()   as  평균나이
  from  emp13;

문제368.  이름, 나이,  우리반의 평균나이를 출력,
                             우리반의 최대나이를 출력,
                             우리반의 최소나이를 출력하시오 ! 

select  ename,  age,  avg(age)  over  ()  평균나이,
                            max(age)  over  ()  최대나이,
                            min(age)  over  ()  최소나이
  from   emp13;

문제369.  부서번호,  이름, 월급,  부서번호별로 각각 월급의 평균값이 출력되게
             하시오 !

select  deptno,  ename, sal,  avg(sal)   over  ( partition  by deptno ) 
  from   emp;

문제370.  이름, 월급,  부서번호 30번의 토탈월급이 출력되게 하시오 !

 select   ename, sal,  (  select   sum(sal)
                                from  emp
                                where  deptno = 30 )  as  "30번_토탈월급"
    from   emp; 


   45분까지 쉬세요 ~~~

문제371.   이름,  직업,  월급,  직업이 SALESMAN 인 사원들의 평균월급이
              출력되게하시오 ! 

select  ename,  job,  sal,  (  select   avg(sal) 
                                       from   emp
                                       where  job='SALESMAN' )  as 평균월급
  from   emp;

문제372.  사원이름, 월급,  직업이 SALESMAN 인 사원들의 토탈월급,
                                  직업이 SALESMAN 인 사원들의 최대월급,
                                  직업이 SALESMAN 인 사원들의 최소월급을 출력하시오 !

select  ename, sal,  ( select  sum(sal)  from  emp  where  job='SALESMAN'),  
                          ( select  max(sal)  from  emp  where  job='SALESMAN'),
                          ( select  min(sal)  from  emp   where  job='SALESMAN')
  from  emp;

문제373.  위의 SQL은 emp 테이블을 4번이나 select 하고 있습니다.  그런데
             4번이나 select 하지 않고 2번만 select 해서 똑같은 결과가 출력되게
             할 수 있습니다.  튜닝해보세요 ~

힌트:  select  sum(sal), max(sal), min(sal)
           from  emp
          where  job='SALESMAN';

select  ename, sal, ( select  sum(sal), max(sal), min(sal)
                               from  emp
                               where  job='SALESMAN'  )  
   from   emp; 

※ 스칼라 서브쿼리는 딱 하나의 값만 리턴할 수 있습니다. 여러개의 값을 한번에
   리턴할 수 없습니다. 

select  ename, sal, ( select  sum(sal) ||  max(sal) || min(sal)
                               from  emp
                               where  job='SALESMAN'  )   as  토탈
   from   emp; 

힌트:  560016001250 이 결과를 문제 없이 substr 로 잘 잘라내야하는것이 
        이 SQL 작성의 핵심입니다. (오후수업때 알려주겠습니다.)

점심시간 문제.  최대공약수 출력하는 문제 : A 반은 라인검사
                                                        B 반은 카페에 올려주세요 ~~


select  ename, sal, ( select  rpad(sum(sal), 10, ' ') ||  
                                    rpad(max(sal), 10, ' ') || 
                                    rpad(min(sal), 10, ' ') 
                               from  emp
                               where  job='SALESMAN'  )   as  토탈
   from   emp; 

※ 설명: 토탈월급을 출력하는데 전체 10자리 잡고 토탈월급을 출력하고
          토탈월급이 출력된 나머지 공간에 공백을 채워넣어라 !
          최대월급을 출력하는데 전체 10자리 잡고 최대월급을 출력하고
          최대월급이 출력된 나머지 공간에 공백을 채워넣어라 !
          최소월급을 출력하는데 전체 10자리 잡고 최소월급을 출력하고
          최소월급이 출력된 나머지 공간에 공백을 채워넣어라 !
         
select   ename, sal,  substr(토탈, 1, 10)  as 토탈월급,
                           substr(토탈, 11, 10)  as  최대월급,
                           substr(토탈, 21, 10 )  as  최소월급 
from  (   select  ename, sal, ( select  rpad(sum(sal), 10, ' ') ||
                                                rpad(max(sal), 10, ' ') ||
                                               rpad(min(sal), 10, ' ')
                                           from  emp
                                        where  job='SALESMAN'  )   as  토탈
               from   emp
          )  ;


문제374.  우리반 테이블에서 이름, 나이,  통신사가 kt 인 학생들 중에서의 토탈나이,
                                                     통신사가 kt 인 학생들 중에서의 최대나이,
                                                     통신사가 kt 인 학생들 중에서의 최소나이
   를 출력하시오 !

select   ename, age,  substr(토탈, 1, 10)  as  토탈월급,
                           substr(토탈, 11, 10)  as  최대월급,
                           substr(토탈, 21, 10 )  as  최소월급 
from  (   select  ename, age, ( select  rpad(sum(age), 10, ' ') ||
                                                rpad(max(age), 10, ' ') ||
                                               rpad(min(age), 10, ' ')
                                           from  emp13
                                        where  telecom='kt' )   as  토탈
               from   emp13
          )  ;

문제375. (복습문제)  직업이 ANALYST 이고 월급이 2000 이상인 사원들의 
         이름, 월급, 입사한 년도(4자리)를 출력하는데 월급이 높은 사원부터 출력하시오!

select  ename, sal,  to_char(hiredate,'RRRR')
  from   emp
  where  job='ANALYST'  and  sal >= 2000  
  order  by  sal   desc; 

■  078 데이터 입력하기(INSERT)

* SQL 의 종류 5가지

1. Query 문 :  select 문의 6가지절
2. DML 문  :  insert, update, delete, merge
3. DDL 문  :   create, alter, drop, truncate , rename
4. DCL 문  :  grant, revoke
5. TCL  문  :  commit,  rollback, savepoint

사원 테이블에 데이터를 입력하는데 사원번호는 2812, 사원이름은 JACK,
월급은 3500, 입사일은 2021년 4월 27일, 직업은 ANALYST 로 입력하시오 !

insert  into  emp(empno, ename, sal, hiredate, job )
  values( 2812, 'JACK', 3500, to_date('2021/04/27','RRRR/MM/DD'), 'ANALYST');

select  *
  from  emp;

문제376.  사원 테이블에 아래의 데이터를 입력하시오 !

 사원번호 :  4832
 사원이름 :  jane
  월급     :  6800
 부서번호 : 20 
 
insert  into   emp(empno, ename, sal, deptno)
 values( 4832, 'jane', 6800, 20);

문제377. 아래의 데이터를 부서 테이블에 입력하시오 !

부서번호 : 50
부서명  :   transfer
부서위치 :  seoul 

insert   into   dept(deptno, dname, loc)
 values( 50, 'transfer', 'seoul' );

select * from  dept;                         

문제378.   dice(주사위) 라는 테이블을 생성하고 숫자 6개를 입력하시오 !

create   table   dice
(  dice_num    number(10) );

insert 문장 6개를 직접 만들어서 입력하세요 ~~

insert  into  dice(dice_num)  values(1);
insert  into  dice(dice_num)  values(2);
insert  into  dice(dice_num)  values(3);
insert  into  dice(dice_num)  values(4);
insert  into  dice(dice_num)  values(5);
insert  into  dice(dice_num)  values(6);

commit;

문제379.  지금 만든 dice 테이블의 숫자를 램덤으로 섞으시오 ~

 select  *
  from  dice
  order  by  dbms_random.value ;

문제380.  위의 출력된 결과에서 첫번째 행만 출력하시오 !

 select  *
  from  dice
  order  by  dbms_random.value fetch first  rows only; 

문제381. 아래의 박스라는 테이블을 만들고 박스 테이블에 빨간색공 3개와
            파란색공 2개를 입력하세요 !

create   table  box
(  ball     varchar2(10) );  

insert  into  box   values('blue');
insert  into  box   values('blue');
insert  into  box   values('red');
insert  into  box   values('red');
insert  into  box   values('red');
commit;

문제382. 아래의 주머니에서 공 2개를 램덤으로 추출하시오 !

문제383.   emp 테이블에 아래의 데이터를 입력하시오 !

 사원번호  8392
 사원이름  james
 입사일    sysdate  

insert   into   emp(empno, ename, hiredate)
  values( 8392, 'james',  sysdate );

commit;

select  * from   emp;

문제384. 오늘 입사한 사원의 이름과 입사일을 출력하시오 !

select  ename, hiredate
 from  emp
 where  hiredate = sysdate; 

설명: 2명이나 있는데 왜 출력이 안되냐면?  sysdate 는 시분초까지 입력이된다. 
       그래서 둘다 출력이 안된것입니다.

select  ename, hiredate
 from  emp
 where  hiredate = to_date('2021/04/27', 'RRRR/MM/DD');

설명:  왜 2명이 안나오고 한명만 나왔냐면 위의 조건으로 검색되는 날짜는
         2021년04월27일 00시 00분 00초에 입사한 사원만 검색이 됩니다. 

insert  into  emp(empno, ename, sal, hiredate, job )
  values( 2812, 'JACK', 3500, to_date('2021/04/27','RRRR/MM/DD'), 'ANALYST');

문제385.  그러면 오늘 입사한 2명의 사원이 전부 출력되게하시오 

튜닝전:
select  ename, hiredate
 from  emp
 where   to_char(hiredate,'RR/MM/DD') ='21/04/27';

튜닝후:
select ename, hiredate
      from emp
      where hiredate >= to_date( '21/04/27', 'RR/MM/DD')
        and  hiredate < to_date( '21/04/28', 'RR/MM/DD');
 
sysdate 로 데이터를 입력하게 되면 데이터가 검색되기 위해서는 
위와 같이 작성해줘야합니다. 

insert  into  emp(empno, ename, sal, hiredate, job )
  values( 2812, 'JACK', 3500, to_date('2021/04/27','RRRR/MM/DD'), 'ANALYST');

select  ename, hiredate
 from  emp
 where  hiredate = to_date('2021/04/27', 'RRRR/MM/DD');

* emp 테이블에 null 값을 입력하는 방법

  1. 암시적으로 입력하는 방법

  insert  into  emp(empno, ename, sal )
   values( 1234, 'aaa', 3400 );

 설명:  empno, ename, sal 을 제외하고는 나머지는 다 null 값이 입력됩니다. 

  2. 명시적으로 입력하는 방법 
            2.1   null    
            2.2    ''   (싱글 쿼테이션 마크 2개를 붙여서)
 
insert  into  emp(empno, ename, sal )
 values(3456,  null,   3200 );

insert  into  emp(empno, ename, sal )
 values(2345,  '',   3500 );

insert  into  emp(empno, ename, sal )
 values(4567, '     ',  5400 );

commit;

문제386.  이름이 null 이 아닌 사원들의 이름과 월급을 출력하시오 !
             그런데  이름이 공백으로 들어간 사원도 출력되지 않게 하시오 !

select  ename, sal
 from  emp
 where  trim(ename)  is  not  null;

■ 079 데이터 수정하기(UPDATE)

 예제:   KING 의 월급을 7500으로 변경하겠다. 

           update   emp
             set  sal = 7500
             where  ename='KING';

문제387.  부서번호가 10번인 사원들의 커미션을 9000 으로 변경하시오 !
  
 update  emp
  set  comm = 9000
  where  deptno = 10; 

  rollback;  

설명:  commit 하지 않은 데이터는 rollback 을 하면 전부 취소 됩니다. 

문제388.  우리반 테이블의 telecom 데이터를 수정하는데  skt 인 데이터를
             전부 소문자 sk 로 변경하시오 

 update  emp13
   set   telecom ='sk' 
   where   lower(telecom) ='skt';

commit;

문제389.  우리반 테이블의 telecom 데이터를 수정하는데 대문자 LG 를
            소문자 lg 로 변경하세요 ~

update  emp13
 set   telecom ='lg'
  where  lower(telecom)='lg';

 commit; 

문제390.  우리반 테이블에서 telecom 을 출력하는데 중복을 제거해서 출력하시오

select  distinct  telecom
 from  emp13;

문제391.  통신사, 통신사별 평균나이를 출력하시오 !

select  telecom, avg(age)
 from  emp13
 group  by telecom;

문제392. (오늘의 마지막 문제)  동전 2개를 동시에 던져서 하나가 앞면이 
            나오고 다른 하나가 뒷면이 나올 확률을 어떻게 되는가 ? 
             ( 동전을 10만번 던지세요 ~ )

■  update 문장 복습

update  테이블명
  set  컬럼명 = 값
  where   변경할 데이터의 조건 ;
 
문제393.   직업이 SALESMAN 인 사원들의  커미션을 8400 으로 변경하시오 !

update  emp
  set  comm = 8400
  where  job='SALESMAN'; 

문제394.  부서번호가 10번, 20번인 사원들의 직업을 ANALYST 로 변경하시오 !

update   emp
  set  job='ANALYST'
  where  deptno  in  ( 10, 20 );

■  080 데이터 삭제하기(DELETE, TRUNCATE, DROP)

예제:  delete  from   emp
         where   ename='SCOTT'; 

       select  *  from  emp; 

문제395.  직업이 SALESMAN 인 사원들을 지우시오

 delete from  emp
 where  job='SALESMAN';

문제396.  월급이 3000 이상인 사원들을 지우시오 !

delete  from  emp
 where  sal >= 3000; 

* 데이터를 복구할 수 있는 tip

 1.  타임머신을 타고 과거로 가서 과거의 emp 테이블의 모습이 어떤지 확인을 해봅니다.

  select  *
    from   emp   as  of  timestamp to_timestamp('2021/04/28:10:05:00',
                                                                'RRRR/MM/DD:HH24:MI:SS');

  
 2.  emp 테이블을 과거로 되돌릴 수 있는 상태로 변경합니다. 

  alter   table   emp   enable   row   movement; 

 3.  2021/04/28:10:05:00  이 시간으로 emp 테이블을 되돌려봅니다.

  flashback   table   emp   to  timestamp   to_timestamp('2021/04/28:10:05:00',
                                                                'RRRR/MM/DD:HH24:MI:SS');
  
 select * from  emp;

  commit; 

※ 기본적으로는 15분내에 복구해야합니다. 15분이 지나면 복구를 못할 수 있습니다.

문제397. 사원 테이블의 월급을 전부 0으로 변경하시오 !

 update emp
 set sal = 0; 

 commit; 
                                               
문제398. flashback 으로 emp 테이블을 복구하시오 !

 flashback   table   emp   to  timestamp   to_timestamp('2021/04/28:10:05:00',
                                                                'RRRR/MM/DD:HH24:MI:SS');
  
 select * from  emp;

 commit;

문제399.  월급이 3000 이상인 사원들을 지우시오 ! 

delete  from  emp
 where  sal >= 3000; 

rollback;

책 222 페이지    
※ 오라클에서 데이터를 삭제하는 방법 3가지 소개 (p222)

                                 delete       truncate          drop  
데이터
저장공간
저장구조
취소여부(rollback)
플래쉬백여부 

delete  from  emp;

* emp 테이블을 drop 하시오 !

drop  table  emp; 


* 휴지통속에 있는 내용 확인하기

select *
 from  user_recyclebin;

* 휴지통에 있는 emp 테이블을 복구하기 

flashback    table    emp    to   before   drop;

select * from  emp; 

* emp 테이블을 truncate  하기 

truncate   table   emp ;

※ 제일로 조심해야하는 명령어가 truncate 입니다. 왜냐하면 롤백도 안되고
   flashback 도 안되기 때문입니다.  만약 복구하고 싶다면 백업받은 데이터로 
   복구해야합니다. 

truncate   table   emp;

* truncate 를 사용하는 이유 ?

1. delete 보다는 속도가 빠르다.
2. 테이블 구조를 남겨놓을 수 있기 때문입니다. 

고객통화 테이블 

10월달 통화 데이터 
11월달 통화 데이터 

■ 081 데이터 저장 및 취소하기(COMMIT, ROLLBACK)

 1. commit :  지금까지 작업한 DML 작업(insert, update, delete, merge) 를 
                 데이터 베이스에 영구히 저장하겠다. 

 2.  rollback :  지금까지 작업한 DML 작업(insert, update, delete, merge)를
                   모두 취소하겠다. 

* 암시적 commit 이 수행되는 경우 

1.  정상종료했을때 (exit)
2.  DDL 문을 실행했을때 ( create, alter, drop, truncate, rename)
3.  DCL 문을 실행했을때 ( grant,  revoke )

* 암시적 rollback 이 수행되는 경우 

1. 컴퓨터가 비정상적으로 종료되었을때 

문제400.   (복습문제)  아래의 데이터를 emp 테이블에 입력하시오 !

 empno   9493
  ename   allen
   sal       3500
  deptno   30   

insert   into   emp(empno, ename, sal, deptno )
  values(  9493, 'allen', 3500, 30  );

45분까지 쉬세요 ~~

■ 치환변수를 좀더 편하게 사용할 수 있는 accept 문 

accept   p_empno   prompt  '사원번호를 입력하세요 ~' 

select  empno, ename, sal
 from  emp
 where   empno = &p_empno; 

■ 확률의 순열 
문제401.  5명중에 2명을 뽑아 첫 사람은 밥을 주고 두번째 사람은 음료를 준다
             5명중에 2명을 뽑은 경우의  수를 SQL 로 구현하시오 !

 전체 인원수를 입력하세요 !   5
 뽑을 인원수를 입력하세요 !   2

  
경우의 수는  ?   입니다. 

카페에 답글로 올려주세요 ~

힌트 :

accept  첫번째수  prompt '전체인원수를 입력하세요 ~'
accept  두번째수  prompt '뽑을 인원수를 입력하세요 ~' 

select  num1, num2
 from  ( 
       select &첫번째수 as  num1, &두번째수  as  num2
           from dual
          ) ;


accept 첫수 prompt '전체인원수 입력~'
accept 둘수 prompt '뽑을인원수 입력~'

select  round(a/b) 
 from (
      select exp(sum(ln(level))) as a
         from dual
       connect by level <= &첫수),
      (
    select exp(sum(ln(level))) as b
     from dual
     connect by level <= &첫수 - &둘수);


accept p_n prompt '전체 인원수를 입력하세요'
accept p_r prompt '뽑을 인원수를 입력하세요'

select (select exp(sum(ln(level))) 전체인원수 
                  from dual
               connect by level <= &p_n)  /
      (select exp(sum(ln(level))) 뽑을인원수
              from dual
              connect by level <= &p_n-&p_r)경우의수
  from dual;

설명: from 절의 서브쿼리와 select 절의 서브쿼리를 이용해서 문제를 해결함

■ 082 데이터 입력, 수정, 삭제 한번에 하기(MERGE)

 * SQL 의 종류?  1. Query :  SELECT 문 6가지절 
                      2. DML   :  insert, update, delete, merge
                      3. DDL    :  create, alter, drop , truncate , rename
                      4. DCL    :  grant, revoke
                      5. TCL   :  commit, rollback 

merge 는 insert, update, delete 를 한번에 수행하는 SQL

예제1. 사원 이름, 부서위치를 출력하시오 !

 select  e.ename,  d.loc
   from   emp  e,  dept  d
   where  e.deptno = d.deptno ;

예제2.   조인을 하지 않고 보기 위해 그냥 loc 컬럼을 emp 테이블에 추가한다. 

 alter   table   emp
  add  loc   varchar2(10);  

 select  ename, loc  from  emp;

예제3.  merge 문을 이용해서 loc 컬럼에  해당 사원의 부서위치로 값을 갱신하시오!

merge  into emp  e
using   dept   d
on  ( e.deptno = d.deptno )
when  matched  then
update  set   e.loc = d.loc ;

문제402.  우리반 테이블에  t_price (통신사 기본요금) 라는 컬럼을 추가하시오 ! 

 alter   table   emp13
  add   t_price   number(10,2) ;

select  ename,  telecom, t_price
 from  emp13;

문제403. telecom2를 이용해서 t_price 자리에 자기가 속한 통신사의 
             기본요금으로 값을 갱신하시오

merge  into  emp13   e
using   telecom2   t
on  ( e.telecom = t.telecom )
when  matched  then
update   set   e.t_price = t.price; 

문제404. 부서번호, 부서번호별 인원수를 출력하시오 !

 select   deptno, count(*)
  from   emp
  group  by   deptno; 

문제405.  부서테이블에  cnt 라는 컬럼을 추가하시오 !

alter   table    dept
  add   cnt   number(10);

select  * from  dept; 

문제406.  dept 테이블의 cnt 자리에 해당 부서번호의 인원수로 값을 갱신하시오 !

merge   into   dept   d
using   (  select   deptno,  count(*)  as  cnt 
                  from    emp
                 group  by  deptno  )   e
on  ( e.deptno = d.deptno )                                45분까지 쉬세요 ~~
when  matched   then
update   set   d.cnt = e.cnt ; 

select  * from  dept; 

alter  table   emp13
 rename column  이전컬럼명  to  새로운컬럼명;

문제407.  다시 깔끔하게  emp 와 dept 테이블을 다시 생성하고 데이터 다시 입력하고
             dept 테이블에  sumsal 이라는 컬럼을 추가하시오 !

alter   table   dept
  add   sumsal    number(10);

select  *
  from dept; 

문제408.  부서번호,  부서번호별 토탈월급을 출력하시오 ! ( 세로 출력 )

select  deptno, sum(sal)
  from   emp
  group  by  deptno ;

문제409.  dept 테이블에 추가한 sumsal 컬럼에 해당 부서번호의 토탈월급으로
             값을 갱신하시오 !

merge  into   dept    d
using   (  select  deptno,  sum(sal)  as  토탈월급
             from   emp 
             group  by  deptno )    e
on  ( e.deptno = d.deptno )
when  matched   then
update   set    d.sumsal = e.토탈월급;

5교시 신호 보냈습니다. 

■  083 락(LOCK) 이해하기

 하나의 데이터 베이스에 여러 유져들이 접속해서 같은 테이블을 서로 갱신하거나
 지우는 작업을 하게 되는 환경에서 항상 일관된 데이터를 검색하기 위해서 
 필요한 오라클 기능

            A   session                                        B  session 

1.   update   emp
       set  sal = 9000
     where  ename='SCOTT';                       2.   update   emp
                                                                   set  sal = 0
                                                                 where ename='SCOTT';

3. commit; 

4.  select  ename, sal
         from  emp
         where ename='SCOTT';                    5. commit; 


설명: 항상 일관된 데이터를 보기위해서 update 를 했으면 commit 하기전까지는
       그 행을 잠궈(lock) 버립니다. 
       만약에 lock 이 없어서 잠궈버리지 못한다면 누구든지 서로 데이터를 막 갱신을
       해서 데이터의 일관성이 없어집니다. 
       만약 내가 어떤 데이터를 update 했는데  lock 에 걸려서 아무것도 못하고 있다면
       누군가 먼저 내가 갱신하려는 행을 먼저 갱신했고 아직 commit 을 하지 않은상태
        라고 알고 있으면 됩니다. 

 오라클, mySQL, maria db, posgre SQL,  구글의 빅쿼리


문제410. (복습문제)  직업이 SALESMAN 인 사원들중에서 최대월급을 받는 사원의
            이름과 월급을 출력하시오 ! 

select  ename, sal
 from  (
          select  ename, sal,  dense_rank()  over  ( order  by  sal  desc) 순위
              from   emp
             where  job='SALESMAN'
          )
 where  순위 = 1;

select  ename, sal
  from  emp
  where  sal = ( select  max(sal)
                       from  emp
                      where job='SALESMAN' )
  and  job='SALESMAN'; 

문제411. (복습문제)   직업, 직업별 인원수를 출력하는데  직업별 인원수가 3명이상인
            것만 출력하시오 !

■  084 SELECT FOR UPDATE절 이해하기

 Lock 은 update 문을 수행할때 필요한것인데  select 할 때도 lock을 걸 수 있는데
 그 문법이 바로 select  for  update 절 입니다.

 내가 검색을 하고 있는 동안에 아무도 내가 검색하고 있는 테이블의 데이터를 
 갱신하지 못하게 잠궈버리는 것입니다.

 전국의 GS 편의점 (24시간) 에서 밤12시에 오늘 총 매출을 구해서 집계를 하고 
 싶은데  내가 집계하려고 SELECT 하고 있는 데이터를 누구도 갱신하지 못하게
 막고 싶을때 사용합니다. 

      도스창 A 세션                                 도스창 B 세션
1.  select  ename, sal
     from  emp
     where   ename='ALLEN'
     for  update ;                             2.   update    emp
                                                         set  sal = 0
                                                         where ename='ALLEN';

3. commit;  

■ 085 서브 쿼리를 사용하여 데이터 입력하기

 그냥 insert 문은 데이터를 1개씩만 입력할 수 있습니다. 
서브쿼리문을 사용한  입력문은 데이터를 한번에 여러개를 입력할 수 있습니다. 

예제1.  그냥 insert 문 

insert   into   emp(empno, ename, sal )
  values( 1236, 'JONES', 3400);


예제2.  서브쿼리문을 사용한 insert   문 

insert   into  emp13(ename, age)
 select  ename,  sal
   from  emp;

예제3.   아래의 테이블을 생성하고 emp 테이블에서 직업이 SALESMAN 인 
          사원들의 사원번호, 이름, 직업과 월급을 입력하시오 !

create  table   emp800
(empno    number(10),
 ename    varchar2(10),
 job         varchar2(10),
 sal         number(10) );

insert   into  emp800(empno, ename, job, sal)
 select  empno, ename, job, sal
   from  emp
   where  job='SALESMAN';


문제412.   아래의 테이블을 만들고 dept 테이블의 모든 데이터를 입력하시오 !

create   table  dept_backup
( deptno   number(10),
  dname   varchar2(10),
  loc        varchar2(10) );

insert   into  dept_backup(deptno, dname, loc)
select  deptno, dname, loc
 from dept; 

■ 조합(combination) 

 서로 다른 n 개중 r 개를 선택하는 경우의 수 (순서가 x ) 




문제413.  (확률의 조합문제) 마지막 문제. 3명중 2명을 뽑아서 밥을 주려고 한다 
            3명중 2명을 뽑을 경우의 수는 ?  

순열 문제 못했던 학생들은 꼭 올리세요 ~~
5시신호 보냈습니다.   
6시신호 보냈습니다. 

발표자 한명이 일주일 한번에 선생님께 직접 배우고
조원들에게 알려주면서 스터디 방식입니다. 

5시이후에 B반은 조를 구성하고  조별로 만나서 연락처를 주고 받고
조별 카톡방 만들고 조장을 한명 뽑아서 의석이에 알려줍니다.

B-1조, B-2조, B-3조, ....

자유롭게 자습하세요 ~~~~  A반은 내일 나누겠습니다. 



오늘의 점심시간 문제 :  A 에서 B 로 가는 최단거리의 경우의 수는 ? 

■  086 서브 쿼리를 사용하여 데이터 수정하기

 * SQL 의 종류
  1. Query  : SELECT 문의 6가지절 
  2. DML 문 : insert, update, delete, merge
  3. DDL 문 : create, alter , drop, truncate, rename
  4. DCL 문 : grant, revoke
  5. TCL 문 :  commit, rollback, savepoint

예제1.  직업이 SALESMAN 인 사원들의 월급을 3000 으로 변경하시오

update   emp
  set  sal = 3000
  where  job='SALESMAN';

예제2. JONES 보다 더 많은 월급을 받는 사원들의 커미션을 4000 으로 변경하시오

update   emp
  set  comm = 4000
  where   sal >  ( select  sal
                         from  emp
                         where  ename='JONES');

rollback; 

문제414.  ALLEN 보다 늦게 입사한 사원들의 커미션을 7000으로 수정하시오!

 update  emp
  set  comm = 7000
  where  hiredate > ( select  hiredate
                              from  emp
                              where  ename='ALLEN');

문제415.  SCOTT 의 월급을 KING 의 월급으로 변경하시오 !

update  emp
  set  sal = ( select  sal
                    from   emp
                    where  ename='KING')
  where  ename='SCOTT';

문제416.  ALLEN 의 직업을 JONES 의 직업으로 변경하시오 !

update  emp
  set  job = ( select  job
                    from  emp
                    where  ename='JONES')
  where   ename='ALLEN';

문제417.  KING 과 같은 부서번호에서 근무하는 사원들의  직업을 MARTIN 의
             직업으로 변경하시오 ! (KING 은 변경되지 않게 하시오 !) 

update  emp
   set   job =  (select  job
                      from  emp
                      where  ename='MARTIN')
  where   deptno  =  (select  deptno
                               from  emp
                               where ename='KING')
   and   ename !='KING';

rollback;

문제418.   이름, 부서위치를 출력하시오 !

 select e.ename, d.loc
   from  emp  e, dept  d
   where  e.deptno = d.deptno;

문제419.  사원 테이블에  부서위치(loc) 컬럼을 추가하시오 !

1. 컬럼 삭제 명령어 
alter  table  emp
 drop  column  loc; 

2. 컬럼 추가 명령어 
alter   table   emp
  add   loc   varchar2(10);

문제420.  merge 문으로  지금 추가한 loc 컬럼에 해당 사원의 부서위치로 
             값을 갱신하시오 !

merge   into   emp   e
using   dept   d 
on  ( e.deptno = d.deptno)
when  matched  then
update  set   e.loc = d.loc; 

* loc  컬럼을 삭제하고 다시 새롭게 추가합니다.

alter   table   emp
  drop  column   loc;

alter  table  emp
 add   loc    varchar2(10);

예제3.  update 문의 서브쿼리를 이용해서 emp 테이블의 loc 를 해당 사원의
          부서위치로 갱신하는 방법 

select  e.ename,  e.loc  as  emp_loc,  d.loc  as  dept_loc
  from  emp   e,  dept   d
  where  e.deptno = d.deptno ;

update  (  select  e.ename,  e.loc  as  emp_loc,  d.loc  as  dept_loc
                 from  emp   e,  dept   d
                where  e.deptno = d.deptno
            )
set  emp_loc = dept_loc;

* dept 테이블의 deptno 에 primary key 를 걸어서  dept 테이블을 대표하는
  컬럼이 deptno 라는 것이 보장되게하시오 !

alter   table  dept
  add   constraint  dept_deptno_pk  primary  key(deptno);

update  (  select  e.ename,  e.loc  as  emp_loc,  d.loc  as  dept_loc
                 from  emp   e,  dept   d
                where  e.deptno = d.deptno
            )
set  emp_loc = dept_loc;

설명:  dept 테이블에 deptno 에 primary key 제약이 걸려있어야 위의 update 문
        이 가능해 집니다.  회사에서는 다 deptno 같은 컬럼에 primary key 제약이
        걸려있으므로 위의 update 문이 수행될 것 입니다. 

문제421.  사원 테이블에 dname 컬럼을 추가하고  부서 테이블의 dname 컬럼의
             데이터를 사원 테이블에 갱신하시오 !
             즉 자기가 속한 부서명(dname) 의 데이터로 해당 사원의 dname 이
             갱신되게 하시오 !

alter   table    emp
  add   dname   varchar2(10);

튜닝전:    20분

튜닝후:    30초
update    (    select  e.ename, e.dname  as  emp_dname,  
                                  d.dname  as  dept_dname
                 from   emp   e,  dept   d
                where  e.deptno = d.deptno  )
set     emp_dname =  dept_dname;

문제422.  우리반 테이블에 통신사 price 컬럼을 추가하고 telecom2 의 price 컬럼
             의 데이터로 값을 갱신하시오. 해당 통신사의 price 로 값을 갱신하세요.

alter   table    emp13
  add   price     number(10);

alter   table  telecom2
  add   constraint  telecom2_telecom_pk  primary  key(telecom);

update  (  select   e.ename,  e.price  as  emp_price,
                                      t.price  as  telecom_price
                  from    emp13   e,  telecom2   t
                  where   e.telecom = t.telecom  )
 set   emp_price = telecom_price;

■ 087 서브 쿼리를 사용하여 데이터 삭제하기

예제1.  직업이 SALESMAN 인 사원들을 삭제하시오 !


예제2.   SCOTT 과 같은 직업을 갖는 사원들을 삭제하는데 SCOTT 은 제외하시오!

delete   from   emp
  where   job  =  (select  job
                           from  emp
                           where  ename='SCOTT' )
  and   ename != 'SCOTT';

문제423.  ALLEN 보다 늦게 입사한 사원들을 모두 지우시오 !

delete  from  emp
  where   hiredate >  ( select   hiredate
                                  from   emp
                                  where  ename='ALLEN' );

■ 088 서브 쿼리를 사용하여 데이터 합치기

 merge 문 + subquery 

예제1. 부서위치, 부서위치별 토탈월급을 출력하시오 ! (세로 출력) 

select  d.loc,  sum(e.sal)
  from  emp  e,  dept  d
  where  e.deptno = d.deptno
  group   by  d.loc; 

예제2.  부서번호, 부서번호별 토탈월급을 출력하시오 ! (세로 출력)

select  deptno, sum(sal)
   from   emp
   group   by  deptno; 

예제3. dept 테이블에  sumsal 컬럼을 추가하시오 !

alter   table   dept
 add  sumsal    number(10) ;

예제4.  dept 테이블에 sumsal 컬럼에 해당 부서번호의 토탈월급으로 값을 갱신
          하시오 !

merge  into  dept    d
using   ( select  deptno, sum(sal) as  토탈월급
               from   emp
               group  by  deptno )    e
on  (  e.deptno = d.deptno )
when  matched   then
update   set   d.sumsal = e.토탈월급; 

문제424.  다시 rollback 을 하고 값을 갱신하는데 부서번호 40번은 0 으로 
             갱신되게 하시오 !

merge  into  dept    d
using   ( select  deptno, sum(sal) as  토탈월급
               from   emp
               group  by  deptno )    e
on  (  e.deptno (+)= d.deptno )
when  matched   then
update   set   d.sumsal = nvl( e.토탈월급,0 ); 

문제425.  telecom2 에 cnt 라는 컬럼을 추가하고 우리반 테이블의 해당 통신사의
             학생수로 값을 갱신하시오 !

alter   table   telecom2
  add   cnt   number(10);

merge   into   telecom2   t
 using  ( select  telecom,  count(*)  as  인원수
                from  emp13
                group  by telecom)  e
on ( e.telecom = t.telecom )
when  matched  then
update  set   t.cnt = e.인원수;

점심시간 문제 검사받겠습니다 ~~  B반은 카페에 올리고 A반은 라인검사합니다.
문제 푸시고 다 된 라인은 손을 들어주세요 ~~

4시에 높으신 분이 오시므로 우리가 지켜야할 3가지 사항 !

 1. 방역수칙을 잘 지키는지 확인 ! ( 자리 띄어 앉기)
 2. 쉬는 시간을 잘 지키는지 (매 20분 ~ 30분)

■ 089 계층형 질의문으로 서열을 주고 데이터 출력하기 1

계층형 질의문은 서열이 있는 데이터에서 서열을 출력하는 SQL 문법

예제:  사원 이름, 월급, 직업, 사원들간의 서열(level) 을 출력하시오 !

select   level, empno, ename, mgr
 from   emp
 start  with  ename='KING'
 connect  by  prior   empno = mgr ;

문제426.  CLARK 을 시작지점으로 두고 서열 순서를 출력하시오 !
             사원번호, 이름과 서열, 월급을 출력하시오 !

select  empno, ename, level, sal
  from  emp
  start  with   ename='CLARK'
  connect   by   prior   empno = mgr;

문제427.  직업이 SALESMAN 인 사원들중에서의 서열을 출력하시오 !
              이름, 서열, 직업, 월급을 출력하시오 !

select  *
 from  (
           select  ename, level, job, sal
              from  emp 
              start  with  ename='KING'
              connect  by   prior   empno = mgr
          )
 where  job='SALESMAN';


 select  ename, level, job, sal
       from  emp 
       where  job='SALESMAN'
       start  with  ename='KING'
       connect  by   prior   empno = mgr;


문제428. 월급이 2000 이상인 사원들의 사원이름, 서열, 직업, 월급을 출력하시오!
            ( 서열은 사원 테이블 전체에서의 서열입니다.)

 select  ename, level, job, sal
       from  emp 
       where  sal >= 2000 
       start  with  ename='KING'
       connect  by   prior   empno = mgr;

문제429. 위의 결과를 좀더 시각화 해서 서열이 명확히 보이게 하시오 !

 select  rpad('  ', level*3) || ename  as  employee , level, job, sal
       from  emp 
       where  sal >= 2000 
       start  with  ename='KING'
       connect  by   prior   empno = mgr;

■ 090 계층형 질의문으로 서열을 주고 데이터 출력하기 2

예제1.  사원 테이블 전체에 대해서 서열을 출력하는 사원이름, level, 월급과 직업
          을 출력하시오 !

select  ename, level, sal,  job
 from   emp
 start  with  ename='KING'
 connect  by   prior   empno = mgr; 

예제2. 위의 결과에서 BLAKE 는 제외하고 출력하시오 !

select  ename, level, sal,  job
 from   emp
 where  ename !='BLAKE'
 start  with  ename='KING'
 connect  by   prior   empno = mgr; 

30분까지 쉬세요 ~~  30분에는 교실에 오세요 ~ 35분에 시작할께요. 

예제3.  이번에는 BLAKE 뿐만 아니라 BLAKE 의 팀원들 전부 출력되지 않게 하시오!

select  ename, level, sal,  job
 from   emp
 start  with  ename='KING'
 connect  by   prior   empno = mgr  and  ename !='BLAKE'; 

■ 091 계층형 질의문으로 서열을 주고 데이터 출력하기 3

  서열을 나타내는 계층형 질의문에서 ORDER BY 절을 사용하는 방법 

예제1.  사원이름, 서열, 월급을 출력하는데 월급이 높은 사원부터 출력하시오 !
          ( 서열에 대한 시각화된 모습이 흐트러지지 않는 범위내에서)

 select  rpad('  ', level*3) || ename  as  employee , level, job, sal
       from  emp 
       start  with  ename='KING'
       connect  by   prior   empno = mgr
       order  siblings  by  sal  desc;

※ 계층형 질의문에서 order by 절을 사용할 때는 siblings 는 필수 입니다. 

문제430. 이름, 서열, 입사일, 직업을 출력하는데  먼저 입사한 사원순으로
            출력되게 하시오 ! 단 서열에 대한 시각화된 규칙이 흐트러지지 않게 
             하시오 !  

 select  rpad('  ', level*3) || ename as  employee , level,  hiredate,  job
    from  emp
    start  with  ename='KING'
    connect  by   prior   empno = mgr
    order  siblings   by    hiredate  asc; 

■ 092 계층형 질의문으로 서열을 주고 데이터 출력하기 4

 계층형 질의문과 짝꿍인 함수인 sys_connect_by 함수를 알아보겠습니다.

예제: select  ename, sys_connect_by_path(ename,'/') as  path
         from  emp
         start  with  ename='KING'
         connect  by  prior   empno = mgr ;

설명:  사원 테이블 전체에서 자기의 정확한 서열의 위치를 가로로 출력하고 
         싶을때 sys_connect_by_path 함수를 이용합니다. 

문제431. 위의 결과에서 아래와 같이 이름 맨 앞에 있는  / 를 잘라내시오 !

ENAME                PATH
-------------------- -------------------------
KING                   KING
JONES                 KING/JONES
SCOTT                 KING/JONES/SCOTT
ADAMS               KING/JONES/SCOTT/ADAMS
FORD                  KING/JONES/FORD
SMITH                 KING/JONES/FORD/SMITH
BLAKE                 KING/BLAKE
ALLEN                 KING/BLAKE/ALLEN
WARD                 KING/BLAKE/WARD
   :                         :

select  ename, ltrim(sys_connect_by_path(ename,'/'), '/')  as  path
         from  emp
         start  with  ename='KING'
         connect  by  prior   empno = mgr ;

■  093 일반 테이블 생성하기(CREATE TABLE)

* SQL 의 종류 5가지

1. Query  :  select 문의 6가지절
2. DML    :  insert, update, delete, merge
3. DDL    :  create, alter , drop , truncate , rename
4. DCL    :  grant, revoke
5. TCL    :  commit, rollback, savepoint 

예제.  사원번호, 이름, 월급, 입사일을 저장하는 테이블을 생성하시오

create   table   emp93
(empno    number(10),
 ename    varchar2(10),
 sal          number(10,2),
 hiredate   date  );

문제432.  위의 emp93 테이블에 아래의 데이터를 입력하시오 

empno   3829
ename    jack
sal       3000
hiredate   2021/04/29

insert   into  emp93(empno, ename, sal, hiredate)
 values( 3829, 'jack', 3000, to_date('2021/04/29', 'RRRR/MM/DD')  ); 

 30분까지 쉬시고 35분에 시작하겠습니다. 

책 245 페이지 테이블 생성시 사용할 수 있는 주요 데이터 유형 소개 

           char                           vs             varchar2
          문자형                                        문자형 
          고정형                                        가변형 
          2000                                           4000

                                       
                     varchar2 와 char 의 차이점은 varchar2 는 데이터를 입력하고
                     남은 공간을 회수해버리면서 저장공간 낭비가 생기지 않게합니다

예제1.  char(10) 과 varchar2(10) 을 사용했을때 조인문장의 결과

drop table emp700;
drop  table dept700;

create   table  emp700
(ename   varchar2(10),
 deptno   varchar2(10) );

insert   into  emp700  values('scott', '10');
insert   into  emp700  values('allen', '20');
commit;

create  table  dept700
(deptno   char(10),
 loc        varchar2(10) );

insert   into  dept700  values( '10', 'dallas');
insert   into  dept700  values( '20', 'chicago');
commit;
select  *
 from  emp700
 where deptno ='10';


■ long 과  clob 의 차이 

   long과 clob  아주 큰 텍스트 데이터를 입력할 때 사용하는 데이터 유형

   long 은 최대 2gb 까지 저장
   clob 은 최대 4gb 까지 저장 

예제1.     create   table  resume
            (  ename      varchar2(20),
               self_intro     long  );

insert    into    resume   
   values('김인호',  '어렸을때 부터 우리집은 가난했었고 어머니는 짜장면이
                         싫다고 하셨습니다. 야히 야히야 ' );

텍스트 데이터 분석:  이 텍스트에는 긍정적 단어가 많은지 부정적인 단어가 
많은지 쿼리 하나로 확인이 가능합니다.

영화 겨울왕국에는 엘사가 많이 나오는지 안나가 많이 나오는지 SQL 하나로
알아낼수 있습니다. 

문제433.  스티븐 잡스 연설문에 가장 많이 나오는 영어 단어는 무엇인가 ?

CREATE TABLE SPEECH
( SPEECH_TEXT  VARCHAR2(1000) );

SELECT REGEXP_SUBSTR('I never graduated from college', '[^ ]+', 1, 2) word
  FROM dual;

설명:  regexp_substr 함수는 substr 함수를 좀더 업그레이드한 함수인데
        텍스트 데이터 전처리를 할때 아주 유용한 함수 입니다. 

substr 보다 좀더 자세하게 텍스트 데이터를 잘라낼 수 있습니다.

예제127-4.txt 를 가져오세요 ~

SELECT REGEXP_SUBSTR(lower(speech_text), '[^ ]+', 1, a) word
  FROM speech,  ( SELECT level a
                              FROM dual
                             CONNECT BY level <= 52);

설명:  스티브잡스 연설문을 어절별로 잘라서 출력하는 SQL 
하나의 행에 있는 문장하나에 들어있는 어절(단어)이 52개를 안넘어가서
숫자 1부터 52까지를 REGEXP_SUBSTR 에 줘서 어절을 잘라냅니다. 
총 143개의 문장을 하나씩 로드하면서 어절별로 잘라내는 SQL문 

예제1.  위의 결과에서 null 을 출력되지 않게 하시오 !

select *
 from  (  
   SELECT REGEXP_SUBSTR(lower(speech_text), '[^ ]+', 1, a) word
      FROM speech,  ( SELECT level a
                              FROM dual
                              CONNECT BY level <= 52)
       )
 where   word  is  not  null;  

예제2.  어절, 어절별 건수를 출력하시오 !

select  word,  count(*)
 from  (  
   SELECT REGEXP_SUBSTR(lower(speech_text), '[^ ]+', 1, a) word
      FROM speech,  ( SELECT level a
                              FROM dual
                              CONNECT BY level <= 52)
       )
 where   word  is  not  null
  group  by  word;

문제434. (오늘의 마지막 문제)  스티브 잡스 연설문에서 가장 많이 나오는
            어절(단어)를 1위부터 10까지 출력하시오 !

5시 신호 보냈습니다.
6시 신호 보냈습니다.
A 반도 수학을 코딩으로 하는 스터디를 나누고 조원들끼리 서로 인사하시고
조장을 뽑아서 진욱이에게 애기해주세요

방식:  발표자가  일주일에 한번씩 5시에 선생님께 와서 30분 정도 머신러닝에
         필요한 수학을 배우고 다른날 5시에 조원들에게 알려주는 방식 (30~40분)

 나머지 시간은 자유롭게 자습하세요 ~~

■  093 일반 테이블 생성하기(CREATE TABLE)

* 데이터 분석 연습

 1. 데이터로 부터 정보를 추출한다. ( EDA )
 2. 데이터로 부터 미래를 예측한다. (머신러닝)

예제1.  스티브 잡스 연설문에서 가장 많이 나오는 어절(단어) 가 무엇인가?


예제2. 우리나라 전국 대학교에서 대학 등록금이 가장 비싼 학교가 어디인가 ?

   1. 데이터를 수집  :  공공 데이터 포털 
            ↓
   2. 데이터를 저장
            ↓
   3. 데이터를 탐색(분석)
            ↓
   4. 결과 레포팅 


테이블 생성 예제:   대학등록금 데이터를 저장하기 위한 테이블 생성 

drop table univ;

create table univ
(univ_hj varchar2(20),
 univ_sj varchar2(20),
 univ_name varchar2(60),
 univ_loc varchar2(20),
 stud_cnt number(10),
 univ_infee number(10,2),
 univ_dfee number(10,2));


select univ_name, univ_dfee 
from univ
order by univ_dfee desc fetch first 1 rows only;

문제435.  입학금이 가장 비싼 학교는 어디인가 ?

select univ_name, univ_infee
from univ
order by 2 desc fetch first 1 rows only;

문제436.   우리나라에서 등록금이 가장 비싼 학교 1위 ~ 10위까지 학교이름과
              등록금과 순위를 출력하시오 !

 추해정 학생

select   univ_name,univ_dfee, rank()  over  (order by univ_dfee desc) 순위
   from univ
   order by univ_dfee desc fetch first 10 rows only;

문제437.  자신이 다니는 학교의 등록금은 전국 대학교 등록금 순위가 어떻게 
             되는가 ? 

select  *
 from  (  
       select   univ_name,univ_dfee, dense_rank()  over  (order by univ_dfee desc) 순위
          from univ
           )
  where   univ_name ='서울시립대';

45분까지 쉬세요 ~~

문제438.  경찰청_졸음운전 교통사고 현황.csv 를 내려받아 테이블로 구성하고
            졸음운전으로 사망자가 가장 많았던 연도, 사망자, 사망자 순위를 출력하시오!

 테이블명 :   car_sleep_acc 

create   table   car_sleep_acc
( acc_year      varchar2(20),
  road_type    varchar2(20),
  acc_cnt        number(10),
  dead_cnt      number(10),
  hurt_cnt       number(10) );

select a.*, dense_rank()  over ( order by dead_cnt  desc) 순위 
   from car_sleep_acc  a;
           
문제439.  대검찰청 범죄 발생지 현황.csv 를 내려받아 테이블로 구성하고 
             사기가 가장 많이 일어나는  지역이 어디인지 출력하시오 !

테이블명:  crime_loc_type 


create  table  crime7_table
as
select *
 from  crime7
 unpivot  (  cnt  for  loc  in  (
a2008년,서울특별시종로,서울특별시중구,서울특별시용산,서울특별시성동,서울특별시광진,서울특별시동대문,서울특별시중랑,서울특별시성북,서울특별시강북,서울특별시도봉,서울특별시노원,서울특별시은평,서울특별시서대문,서울특별시마포,서울특별시양천,서울특별시강서,서울특별시구로,서울특별시금천,서울특별시영등포,서울특별시동작,서울특별시관악,서울특별시서초,서울특별시강남,서울특별시송파,서울특별시강동,부산광역시중구,부산광역시서구,부산광역시동구,부산광역시영도,부산광역시부산진,부산광역시동래,부산광역시남구,부산광역시북구,부산광역시해운대,부산광역시사하,부산광역시금정,부산광역시강서,부산광역시연재,부산광역시수영,부산광역시사상,부산광역시기장,대구광역시중구,대구광역시동구,대구광역시서구,대구광역시남구,대구광역시북구,대구광역시수성,대구광역시달서,대구광역시달성,인천광역시중구,인천광역시동구,인천광역시서구,인천광역시남구,인천광역시연수,인천광역시남동,인천광역시부평,인천광역시계양,인천광역시강화,인천광역시웅진,광주광역시동구,광주광역시서구,광주광역시남구,광주광역시북구,광주광역시광산,대전광역시중구,대전광역시동구,대전광역시서구,대전광역시유성,대전광역시대덕,울산광역시중구,울산광역시동구,울산광역시남구,울산광역시북구,울산광역시울주,부천,수원,성남,전주,안양,청주,마산,창원,광명,포항,안산,진주,고양,제주,목포,의정부,익산,군산,구미,천안,여수,춘천,원주,평택,경주,김해,순천,군포,남양주,강릉,충주,안동,경산,아산,거제,김천,정읍,용인,시흥,파주,양산,이천,구리,서산,제천,논산,기타도시,도시이외
)
);

45분까지 쉬세요 ~~

drop  table crime_loc_type2;

create  table  crime_loc_type2
as
select *
 from  crime_loc_type
 unpivot  (  cnt  for  loc  in  (
서울특별시종로,서울특별시중구,서울특별시용산,서울특별시성동,서울특별시광진,서울특별시동대문,서울특별시중랑,서울특별시성북,서울특별시강북,서울특별시도봉,서울특별시노원,서울특별시은평,서울특별시서대문,서울특별시마포,서울특별시양천,서울특별시강서,서울특별시구로,서울특별시금천,서울특별시영등포,서울특별시동작,서울특별시관악,서울특별시서초,서울특별시강남,서울특별시송파,서울특별시강동,부산광역시중구,부산광역시서구,부산광역시동구,부산광역시영도,부산광역시부산진,부산광역시동래,부산광역시남구,부산광역시북구,부산광역시해운대,부산광역시사하,부산광역시금정,부산광역시강서,부산광역시연재,부산광역시수영,부산광역시사상,부산광역시기장,대구광역시중구,대구광역시동구,대구광역시서구,대구광역시남구,대구광역시북구,대구광역시수성,대구광역시달서,대구광역시달성,인천광역시중구,인천광역시동구,인천광역시서구,인천광역시남구,인천광역시연수,인천광역시남동,인천광역시부평,인천광역시계양,인천광역시강화,인천광역시웅진,광주광역시동구,광주광역시서구,광주광역시남구,광주광역시북구,광주광역시광산,대전광역시중구,대전광역시동구,대전광역시서구,대전광역시유성,대전광역시대덕,울산광역시중구,울산광역시동구,울산광역시남구,울산광역시북구,울산광역시울주,부천,수원,성남,전주,안양,청주,마산,창원,광명,포항,안산,진주,고양,제주,목포,의정부,익산,군산,구미,천안,여수,춘천,원주,평택,경주,김해,순천,군포,남양주,강릉,충주,안동,경산,아산,거제,김천,정읍,용인,시흥,파주,양산,이천,구리,서산,제천,논산,기타도시,도시이외
)
);

select a.*, dense_rank()  over (order by to_number(cnt) desc) 순위
from crime_loc_type2  a
where  a2008년 like '%사기%';

■ 094 임시 테이블 생성하기(CREATE TEMPORAY TABLE)

 데이터를 영구히 저장하는게 아니라 지금 잠깐 테스트위해서 볼 데이터이고 금방
  삭제할 데이터이면 그 데이터를 임시 테이블에 저장하는것이 바람직 합니다. 

예제:  create   global  temporary   table  emp56
        ( empno     number(10),
          ename     varchar2(20),
          sal           number(10) )
         on commit  delete  rows ; 

insert   into   emp56   values( 1234, 'scott', 3500 );

select * from  emp56;

commit;

select * from emp56;

문제440.  on commit delete rows  옵션을 사용해서  dept700 이라는 임시 테이블을
            생성하는데 dept 테이블의 구조와 똑같이 만드시오 !

drop  table  dept700;

create   global   temporary   table   dept700
  (   DEPTNO                                             NUMBER(10),
     DNAME                                              VARCHAR2(14),
     LOC                                                VARCHAR2(13)  )
  on  commit   delete   rows ;

문제441.   dept  테이블의 모든 데이터를 dept700 으로 입력하시오!

insert   into   dept700
select  *
  from  dept; 

select * from dept700; 
commit;
select * from  dept700;

점심시간 문제 검사 받겠습니다.   A 반은 카페에 올리고  B 반은 라인검사입니다. 

* 임시 테이블 옵션 2가지 

 1.  on  commit   delete   rows :   데이터를 commit 할때 까지만 유지
                                             commit 이후에는 사라짐
 2.  on  commit   preserve  rows :  데이터를 세션이 종료되기전까지만 유지
                                              접속이 해제되면 데이터가 사라짐 

예제:  create   global  temporary  table   emp34
        ( empno     number(10),
          ename     varchar2(10),
          sal           number(10) )
        on  commit   preserve  rows ;

 insert   into   emp34(empno, ename, sal)
   select  empno, ename, sal
    from  emp;

■ 095 복잡한 쿼리를 단순하게 하기 1(VIEW)

* 오라클 database  object 5가지

1. table  :    행과 열로 이루어져있으며 데이터를 저장하는 기본 저장 영역 
2. view   :    테이블과 비슷하지만 데이터를 저장하고 있지는 않고 
                 select 문으로 데이터를 검색하는 결과를 출력하는 db object
3. index  :    대용량 데이터 베이스 환경에서 데이터 검색을 빠르게 해주는
                 db object 
4. sequence  :  번호를 생성하는 db object
5. synonym  :   테이블에 대한 다른이름을 지정하는 db object 

예제1:   사원번호, 이름과 월급을 가지고 view 를 생성하시오 !

create  view   emp57
as
  select  empno, ename, sal
    from  emp;

select * from  emp57; 

설명:  emp57 view 는  emp 테이블을 다 보는게 아니라 empno, ename, sal
        만 바로보겠금하는 db object 

 * 뷰의 장점 2가지 :   1.  데이터 보안상의 이유
                             2. 복잡한 쿼리를 간단하게 할 수 있음

예제2.  emp57의  사원이름 scott 의 월급을 0 로 변경하시오 !

update  emp57
  set  sal = 0
  where  ename='SCOTT';

 select  ename, sal
  from  emp57
  where ename='SCOTT';

 select ename, sal
  from  emp
  where ename='SCOTT';

※ 중요 :  view 는 데이터를 저장하지 않습니다. 그냥 view 를 구성한 테이블을
             바로보는것일 뿐 입니다. 

문제442.  직업이 SALESMAN 인 사원들의  사원이름과 월급과 직업과 부서번호를
             출력하는 VIEW 를 emp442 라는 이름을 생성하세요 !

create  view   emp442
as
  select  ename, sal, job, deptno
   from   emp
   where  job='SALESMAN';

update  emp
 set  sal = 0
 where ename='MARTIN';

select  ename, sal  from  emp  where ename='MARTIN';
select  ename, sal  from  emp442  where ename='MARTIN';

* 복잡한 쿼리를 간단하게 하고 싶을때 VIEW 를 사용하는 방법

예제1.   부서번호, 이름, 월급, 순위를 출력하는데 순위가 부서번호별로 각각
           월급이 높은 사원순으로 순위를 부여하시오 !

양남휘 학생이 SQL을 채팅창에 올려주세요 !

Select deptno, ename, sal, rank() over (partition by deptno
                                                   Order by sal desc) 순위
From emp;

문제443. 위의 결과에서 1등들만 출력하시오 !

select   *
 from  (  
   select deptno, ename, sal, rank() over (partition by deptno
                                                   Order by sal desc) 순위
       from emp
         )
  where  순위 =1; 

문제444.  위의 결과에서 from 절의 서브쿼리에 해당하는 부분을 view 로 생성
             하고 view 로 문제443번 결과를 출력하시오 !

create  view   emp444
as
  select deptno, ename, sal, rank() over (partition by deptno
                                                   Order by sal desc) 순위
       from emp; 

select * 
  from  emp444
  where  순위 = 1; 

문제445.   사원이름, 부서위치를 출력하는 view 를 생성하시오 !
             ( view 이름은 emp445 ) 

 create   view   emp445
  as
   select   e.ename,  d.loc
     from  emp  e,  dept  d
     where  e.deptno = d.deptno ;

문제446.  위의 view 를 이용해서  부서위치가 DALLAS 인 사원들의 사원이름과
             부서위치를 출력하시오 !

 select  *
  from  emp445
  where loc='DALLAS';

문제447.  JONES 보다 더 많은 월급을 받는 사원들의 이름과 월급을 출력하는
            VIEW 를 생성하시오 ! (view 이름은 emp447 )

create   view  emp447
as
  select   ename, sal
   from  emp
   where  sal > ( select  sal
                         from  emp
                         where  ename='JONES');

select * from emp447;

문제448.  스티브잡스 연설문에서 어절만 잘라서 구성하는 아래의 쿼리문을
              view 로 생성하시오 !

create  view  stev_text
as
SELECT REGEXP_SUBSTR(lower(speech_text), '[^ ]+', 1, a) word
  FROM speech,  ( SELECT level a
                   FROM dual
                   CONNECT BY level <= 52);

select  word, count(*)
 from stev_text
 where word is not null
 group  by word
 order  by  2  desc; 

* 데이터 분석중에 텍스트 마이닝중에 감정분석이 있습니다.
  새로운 제품이 나왔을때 그 제품에 대한 소비자의 반응을 확인 할 수 있습니다.
  
문제449.  스티브 잡스 연설문에는 긍정단어가 많은지 부정단어가 많은지
             알아내시오 !

1. 긍정단어 사전을 저장하는 테이블 생성 (예제128)

positive-words.txt
negative-words.txt

CREATE TABLE POSITIVE ( P_TEXT  VARCHAR2(2000) );

CREATE TABLE NEGATIVE ( N_TEXT  VARCHAR2(2000) );

2.  스티브 잡스 연설문에는 긍정단어를 몇번 사용했는가 ?

select  count(word)
 from   stev_text   s
 where   exists  (  select   'X'
                            from   positive    p
                            where  p.p_text = s.word );

3.  스티브 잡스 연설문에는 부정단어가 몇번 사용되었는가 ?

select  count(word)
 from   stev_text   s
 where   exists  (  select   'X'
                            from   negative   n
                            where  n.n_text = s.word );

■ 096 복잡한 쿼리를 단순하게 하기 2(VIEW)

예제1.  직업, 직업별 토탈월급을 출력하시오 !( 세로 출력 )

select  job, sum(sal)
 from  emp
 group  by  job; 

예제2.  위의 결과를 view 로 생성하시오 ! view 이름은  job_sumsal 로 하세요 !

create  view  job_sumsal
as
select  job, sum(sal) as 토탈월급
 from  emp
 group  by  job; 

설명: view 를 생성할때 그룹함수를 사용하게 되면 반드시 컬럼별칭을 지정해줘야
       합니다. 

문제450.  통신사, 통신사별 인원수를 출력하는 view 를 telecom_cnt 라는 이름으로
             생성하시오 !

create  view  telecom_cnt
as
select  telecom,  count(*)  as  인원수
  from   emp13
  group  by  telecom;

문제451.  위의 view 를 가지고 통신사, 인원수, 순위를 출력하는데 순위가
              인원수가 높은것부터 출력되게 하시오 !

select   telecom, 인원수,  dense_rank()  over ( order   by  인원수  desc) 순위
  from  telecom_cnt ;

문제452.  아래의 작업을 수행하고  이름, 사원테이블의 loc , 부서테이블의 loc
             를 출력하는 view 를  emp452 라는 이름으로 생성하시오 !

alter  table  dept
  add   constraint  dept_deptno_pk  primary  key(deptno);

alter  table   emp
  add   loc    varchar2(10);

create   view   emp452
as
 select  e.ename,  e.loc  as  emp_loc,  d.loc  as  dept_loc
   from  emp  e, dept  d
   where  e.deptno = d.deptno;

select * from emp452;

문제453.  emp452 뷰를 update 하는데  dept_loc 로 emp_loc 를 갱신하시오 !

update  emp452
 set  emp_loc=dept_loc;

■  097 데이터 검색 속도를 높이기(INDEX)

대용량 데이터가 저장되어져 있는 테이블에 데이터 검색속도를 높이기 위한
database object 

예제1.   월급이 1250 인 사원의 이름과 월급을 출력하시오 !

select  ename, sal
  from  emp
  where  sal = 1250;

설명: 월급이 1250 인 사원의 데이터를 검색하기 위해서 emp 테이블을 처음부터
       끝까지 모두 스캔하는 full  table  scan 방식을 사용합니다. 

지금은 emp 테이블이 14건 밖에 없으므로 위의 데이터가 금방 조회되었지만
만약에 몇천만건 되었다면 오래걸려서 결과가 나옵니다. 

emp 테이블의 sal 에 대한 인덱스(목차)를 생성해서 검색속도를 높이겠습니다. 

* emp 테이블의 sal 에 인덱스를 생성하는 스크립트

create   index  emp_sal
 on   emp(sal);



* 인덱스의 구조

1.  데이터가 ascending 하게 정렬이 되어있다.
2.  페이지 번호(해당 테이블의 물리적 주소) 가 있습니다.

* emp 테이블의 sal 을 위해 생성한 emp_sal 인덱스의 구조를 봅니다.

select   sal
  from  emp
  where  sal >= 0;

설명:  order by 절을 사용하지 않았는데 월급이 정렬이 되어서 보입니다. 
        왜냐하면 테이블에서 데이터를 가져온게 아니라 인덱스에서 데이터를
        가져왔기 때문입니다. 

select   sal, rowid
  from  emp
  where  sal >= 0;

select  rowid, empno, ename, sal
 from  emp; 

* 인덱스를 통해서 데이터를 검색하는 원리 

select  ename, sal
  from  emp
  where   sal = 1250;
             ↑
    emp 테이블의 sal 을 위한 인덱스가 있다면 ?

  emp_sal 의 인덱스의 구조                          emp 테이블  

 select  sal,  rowid                                select  rowid,  empno, ename, sal
  from  emp                                          from  emp; 
  where  sal >= 0;  


select  ename, sal
  from  emp
  where   sal = 1250;

먼저 emp_sal 인덱스(목차)를 조회해서  월급이 1250 인 사원의 rowid 를 알아낸다
그 rowid 로 테이블(책본문)을 엑세스합니다. 

문제454.  이름이 JAMES 인 사원의 이름과 월급과 부서번호를 출력하시오 !

select  ename, sal, deptno
 from   emp
 where ename='JAMES';

문제455.  위의 SQL이 Full table scan 을 해서 검색속도가 느려졌다면
             인덱스를 생성해야하는데  emp 테이블에 ename 에 인덱스를 
              생성하시오 !

create  index  emp_ename
  on  emp(ename);

* 인덱스 구조 

1. 데이터(컬럼)가 ascending 하게 정렬
2. 인덱스의 페이지 번호(테이블의 행의 주소)가 구성이 되어있다.

* emp_ename 인덱스의 구조를 살펴봅니다.   45분까지 쉬세요 ~~~

select  ename,  rowid
  from   emp
  where   ename >   '  '  ;

문제456. (오늘의 마지막 문제)  치킨집 폐업이 가장 많았던 연도가 언제인가 ?

카페에 올려놓은 폐업건수.csv 를 내려받아 테이블 생성하고 SQL을 작성해서
SQL을 올리고 검사받으세요 

5시 신호 보냈습니다. ~~
6시 신호 보냈습니다. ~~

마지막 문제 올리고 자유롭게 자습하세요 ~~~

B반 조장들은 조원들에게 알려줄 스터디 내용을 5시에 배우세요 ~~



■ 097 데이터 검색 속도를 높이기(INDEX)

 * database object(객체)  5가지

 1.  table : 행과 열로 이루어진 데이터를 저장하는 기본 저장소 
 2.  view  :  복잡한 쿼리문을 간단하게 작성하게 해주는 기능
 3.  index :  대용량 데이터가 저장되어있는 환경에서 검색속도를 높이는 기능 
 4. sequence :  번호 생성기 
 5. synonym  :   동의어 

■  index  생성 문장

 select  ename, sal
   from  emp
   where  ename='SCOTT';

create  index  emp_ename
  on   emp(ename);

■ emp_ename 인덱스의 구조

  책의 목차(인덱스)를 생각하면 됩니다.

   목차내용 +  페이지번호 
      ↓               ↓
    컬럼명         rowid ( 해당로우의 물리적 주소) 

  select  ename,  rowid
    from   emp
    where  ename > '  ';

select  ename, sal
  from  emp
  where ename='SCOTT';  

문제457.  emp 테이블의 sal 에 인덱스를 생성하시오 !

create   index  emp_sal
  on   emp(sal);




문제458.  emp_sal 인덱스의 구조를 확인하시오 ! ( 컬럼명과 rowid )

 select  sal, rowid
  from  emp
  where   sal >= 0;

문제459.  아래의 SQL 을 튜닝하시오 !   
             (order by 절은 성능을 느리게하는 원인이 됩니다)

튜닝전:    select   ename, sal
                from   emp
                order   by   sal   asc;

튜닝후:    select  ename, sal
                from  emp
               where  sal >= 0 ;

문제460.  아래의 SQL을 튜닝하시오 !

튜닝전:  select  ename, sal
              from   emp
              where  job='SALESMAN'
              order  by  sal  asc;

튜닝후:   select  ename, sal
             from  emp 
             where  job='SALESMAN'  and  sal >= 0;

문제461.  아래의 SQL 을 튜닝하시오 !

튜닝전:   select  ename, sal
               from  emp
               order  by  sal  desc;

튜닝후:    select  /*+  index_desc(emp  emp_sal) */  ename, sal
                from  emp
                where  sal >= 0; 

문제462. 아래의 SQL 을 튜닝하시오  ! ( 인덱스를 이용해서 정렬작업을 피하세요 !! )

튜닝전 :  select  ename, sal,  deptno
              from  emp
              where  deptno = 20 
              order  by  sal  desc;

튜닝후 :  select  /*+ index_desc(emp  emp_sal)  */ ename, sal, deptno
               from  emp
               where  deptno = 20  and  sal >= 0;

문제463.  사원 테이블에 입사일에 인덱스를 생성하세요.

create   index  emp_hiredate
  on  emp(hiredate); 

문제464. 아래의 SQL을 튜닝하시오 !

튜닝전 :  select  ename, hiredate
               from  emp
               order  by   hiredate  desc;

튜닝후 :  select  /*+ index_desc( emp  emp_hiredate) */  ename, hiredate
               from  emp
               where   hiredate  < to_date('9999/12/31', 'RRRR/MM/DD');

문제465.  아래의 SQL 튜닝하시오 !

튜닝전 :   select  ename, sal, job
                   from  emp
                   where  job='SALESMAN'
                   order  by  ename  asc ;

튜닝후:   select  /*+ index_asc(emp  emp_ename)  */  ename, sal, job
                 from  emp
                 where   job='SALESMAN'  and  ename >'  '; 

문제466. 아래의 SQL 을 튜닝하시오 !  ( 그룹함수도 내부적으로 정렬작업을 일으키므로
                                                   그룹함수 쓰지 말고 인덱스만 이용해서 결과를
                                                   출력하세요 ! ) 

튜닝전:   select   max(sal)
                from  emp;  

튜닝후:   select  /*+ index_desc( emp  emp_sal)  */  sal
                from   emp
                where  sal >= 0  and  rownum = 1; 

문제467. 아래의 SQL 을 튜닝하시오 !

튜닝전 :   select  ename, sal
                from  emp
                where  sal =  (select  max(sal)
                                      from   emp  );

튜닝후 :   select  /*+ index_desc(emp  emp_sal)  */ ename, sal
               from  emp
               where  sal >= 0  and  rownum = 1;

문제468.  아래의 SQL 을 튜닝하시오 !

튜닝전 :   select   ename, hiredate
                  from  emp
                  where  hiredate = (select  min(hiredate)
                                             from  emp );

튜닝후 :   select  /*+ index_asc( emp  emp_hiredate)  */  ename, hiredate
                 from   emp
                 where    hiredate < to_date('9999/12/31', 'RRRR/MM/DD')
                   and   rownum = 1; 

※ where 절에 인덱스 컬럼을 가공하면 안된다 !  가공하게 되면 인덱스 스캔을 하지
   못하고 full  table  scan 을 하게 됩니다. 

튜닝전 :  select  ename, sal
               from  emp
               where  sal * 12 = 36000;


위의 SQL의 실행계획만 확인하는 방법:

explain  plan  for 
select  ename, sal
               from  emp
               where  sal * 12 = 36000;

select * from table(dbms_xplan.display);

튜닝전 :   select  ename, sal
                 from  emp
                 where  sal * 12 = 36000;  

튜닝후 :  select  ename, sal
                  from  emp
                  where   sal = 36000 / 12;

explain  plan  for 
select  ename, sal
                  from  emp
                  where   sal = 36000 / 12;

select * from  table(dbms_xplan.display);

문제469.  직업에 인덱스를 생성하시오 !

create  index  emp_job
  on   emp(job);

문제470.  아래의 SQL 을 튜닝하시오 !

튜닝전 :   select    ename, job
               from  emp
               where   substr(job,1,5)='SALES'; 

튜닝후:    select  ename, job
               from  emp
               where   job    like   'SALES%';

explain  plan  for 
 select  ename, job
               from  emp
               where   job    like   'SALES%';

select * from table(dbms_xplan.display);

문제471. 아래의 SQL 을 튜닝하시오 !

튜닝전:   select  ename, hiredate
               from  emp
               where  to_char(hiredate,'RRRR') = '1981';

튜닝후:   select  ename, hiredate
               from  emp
               where   hiredate  >= to_date('1981/01/01','RRRR/MM/DD')
                          hiredate  <  to_date('1981/12/31','RRRR/MM/DD') + 1;

문제472.  아래의 SQL을 튜닝하시오 !

insert   into  emp(empno, ename, sal)
 values(9283, 'JACK   ', 3500 );

튜닝전:   select   ename, sal, job
                from   emp
               where  rtrim(ename)='JACK';

explain  plan  for 
select   ename, sal, job
                from   emp
               where  rtrim(ename)='JACK';

select * from table(dbms_xplan.display);

* 사원 테이블에 걸려있는 인덱스들을 확인하시오 !

SELECT  index_name
  from  user_indexes
  where  table_name='EMP';


튜닝전 :  select  ename, sal, job
               from  emp
               where  rtrim(ename)='JACK';

튜닝후:  
  
explain  plan  for 
SELECT  ename, sal, job
             from  emp
             where  rtrim(ename)='JACK';

select * from table(dbms_xplan.display);

튜닝방법:   create   index   emp_ename_fun
                on   emp( rtrim(ename) ) ; 

explain   plan  for 
SELECT  ename, sal, job
             from  emp
             where  rtrim(ename)='JACK';

select * from  table(dbms_xplan.display);

설명: 어쩔 수 없이 인덱스 컬럼을 함수를 통해서 가공해야하는 SQL의 검색성능을 
        높이기 위해서는 함수기반 인덱스를 생성하면 됩니다. 

drop index  emp_ename_fun;

explain  plan for  
select ename, sal, job
from (
    select ename, sal, job, instr(ename, 'JACK') as x
    from emp)
where x = 1 and sal >= 0;

select * from table(dbms_xplan.display);

문제473.  우리반 테이블에 통신사를  sk 인 학생한명의 데이터를 skt 로 변경
             하세요 ! 

update  emp13
 set  telecom='skt'
 where  ename='erin';

commit;

문제474.  통신사가 sk 인 학생들의 이름과 통신사를 빠르게 출력하기 위해서
             우리반 테이블에 통신사(telecom) 컬럼에 인덱스를 생성하시오 !

create   index   emp13_telecom
 on  emp13(telecom);

문제475. 통신사가 sk 인 학생들의 이름과 통신사를 출력하는데 실행계획이 
            full table scan 이 되지 않도록 하시오 !

explain  plan  for 
select  ename, telecom
  from  emp13
  where  telecom  like 'sk%';

select * from table(dbms_xplan.display);

※ 설명: wild card 가  뒤에 있으면 인덱스 엑세스를 할 수 있습니다. 

문제476. 위의 SQL 을 like 를 이용하지 말고 다른 방법으로 작성하시오 !

explain  plan  for
select  ename, telecom
  from  emp13
  where   decode(telecom,'skt', 'sk', telecom)='sk';

select * from table(dbms_xplan.display);

문제477. 위의 SQL 을 튜닝하시오 !

create  index  emp13_telecom_fun
on   emp13( decode(telecom,'skt', 'sk', telecom) );

explain  plan  for
select  ename, telecom
  from  emp13
  where   decode(telecom,'skt', 'sk', telecom)='sk';

select  * from  table(dbms_xplan.display);

문제478.  사원 테이블에 걸려있는 인덱스들을 삭제하시오 !

select   index_name
  from  user_indexes
  where  table_name='EMP'; 

drop   index   emp_ename;
drop   index   emp_hiredate;
drop   index   emp_job; 

문제479.  우리반 테이블에 걸려있는 인덱스들을 전부 삭제하시오 !

select  index_name
 from  user_indexes
 where  table_name='EMP13';

drop  index   emp13_telecom;
drop  index   emp13_telecom_fun;

※ 인덱스를 생성할 때 주의 사항 !

 1.  자주 검색하는 꼭 필요한 컬럼에만 인덱스를 생성하세요 !
     ( 목차가 너무 많으면 책이 두꺼워지고 책값이 비싸집니다)
 
 2.  인덱스가 많아지게 되면 데이터 입력 또는 수정시 입력 또는 수정되는 성능이
     느려지게 됩니다. 

■  098 절대로 중복되지 않는 번호 만들기(SEQUENE)

  테이블에 특정 컬럼에 번호를 반드시 중복되지 않고 순서데로 입력해야하는 경우에
  시퀀스를 사용하면 효율적으로 입력할 수 있습니다. 

예:   사원 테이블의 사원번호는 중복되면 안됩니다.
       거래목록 테이블에 거래번호는 중복이 되면 안됩니다. 

create   sequence  seq1
 start  with  1
 increment  by  1
 maxvalue  100;

* 시퀀스의 번호를 생성하기                  45분까지 쉬세요 ~~~

select  seq1.nextval
  from  dual; 

drop   sequence  seq1;

예제2.  시작숫자를 1번으로 하고 증가치를 1로 하고 최대값을 1000 으로 하는
          시퀀스를 seq2 라는 이름으로 생성하시오 !

create   sequence  seq2
start  with  1
increment  by  1 
maxvalue  1000; 

예제3.  주식매매에 대한 데이터를 입력하는 테이블을 생성하시오 !

create  table   stock
( stock_id       number(10),
  stock_type    varchar2(20),
  stock_time    date );

insert   into   stock   values( seq2.nextval,  '매도',  sysdate );
insert   into   stock   values( seq2.nextval,  '매수',  sysdate );
commit;

select * from  stock ;

문제480.  dept 테이블에 deptno 에 데이터를 입력하는 시퀀스를 생성하는데
            지금 40번까지 들어있으니까 50번부터 입력되게하고 10씩 증가하겠금
            하는 시퀀스를 생성하고 dept 테이블에 입력해보시오 !

create   sequence   seq_deptno
 start  with  50
 increment   by  10
 maxvalue  10000; 

insert  into  dept  values( seq_deptno.nextval,  'hr', 'seoul' );

select * 
 from dept; 

* db object  5가지 

1. table
2. view
3. index
4. sequence
5. synonym :  동의어  ( 핸드폰 기계는 하나인데 번호가 2개인 경우 )

emp 테이블은 1개인데 emp 테이블을 쿼리하는 다른 이름이 또 있는 경우 

create   synonym   hr_table
for   emp;

select  * from  hr_table; 

문제481.  emp 테이블의 데이터를 수정하는데 SCOTT 과 KING 의 월급을 0 로
            변경하시오 ! 

update   emp
 set  sal = 0
 where  ename  in  ( 'SCOTT', 'KING');

문제482.  emp 테이블도 조회해보고 hr_table 도 조회해서 둘다 똑같이 변경이 
            되었는지 확인하시오 !

select * from   emp;

select  * from  hr_table;

■ 099 실수로 지운 데이터 복구하기 1(FLASHBACK QUERY)

과거의 데이터를 타임머신을 타고 가서 확인을 할 수 있는데
그 기능이 바로 flashback  query 입니다. 

예제:   delete   from   emp;
         commit; 
         select * from  emp; 

        1. 현재 시간을 확인하는 방법 

         select   systimestamp  from  dual ;

         21/05/03 15:10:51

   2.  현재 시간에서 10분전에 emp 테이블의 상태를 확인합니다. 

   select  *
     from   emp
    as  of   timestamp  to_timestamp( '21/05/03 15:00:51', 'RR/MM/DD HH24:MI:SS');


문제482. 21/05/03 15:00:51 경에 직업이 SALESMAN인 사원들의 이름과 월급과 
           직업이 어떻게 되었는지 확인하시오 !

select  ename, sal, job
 from   emp  
 as  of  timestamp  to_timestamp('21/05/03 15:00:51','RR/MM/DD HH24:MI:SS')
 where   job='SALESMAN';

설명: 위와 같이 볼수 있는 골든 타임의 기본값이 15분 입니다. 
       15분인지 확인해보겠습니다.

 select  value
  from v$parameter
  where  name  like  '%undo_retention%';

지금은 여러분들 혼자 여러분들 db 를 사용하고 있기 때문에 15분이 지나도 데이터를
볼 수 있지만 만약 여러명이 같이 사용한다면 15분이 지나면 데이터가 사라질 수 도 
있습니다. 

문제483.  emp 테이블을 21/05/03 15:00:51 으로 복구하시오 !

■ 100 실수로 지운 데이터 복구하기 2(FLASHBACK TABLE)

예제1.  emp 테이블을 21/05/03 15:00:51 으로 복구하시오 !

1. emp 테이블을 플래쉬백 가능한 상태로 만듭니다.
 
alter   table   emp   enable   row   movement ;  

2. flashback   table   emp  to  timestamp   
   to_timestamp('21/05/03 15:00:51', 'RR/MM/DD HH24:MI:SS');

3. select * from  emp;

4. commit; 

설명:  flashback 을 한것은 다시 insert 를 해준것 입니다. 그러므로 commit 을
        반드시 해주셔야 합니다. 

문제484.  아래의 작업을 수행하고 dept 테이블을 복구하시오 !

delete  from  dept;
commit;

■  101 실수로 지운 데이터 복구하기 3(FLASHBACK DROP)

 * 오라클에서 데이터를 지우는 방법 3가지 

  1.  delete  : flashback 으로 복구 할 수 있습니다. 
                  flashback  query,  flashback  table 로 복구 할 수 있습니다.
  2.  truncate  :  flashback 으로 복구 할 수 없습니다.
  3.  drop    :  flashback  drop 으로 복구 할 수 있습니다.

예제1.   create   index   emp_sal    on   emp(sal);

           drop   table  emp ;

          휴지통속에 있는 emp 테이블을 확인하는 방법

          select object_name, original_name, droptime
            from  user_recyclebin;

          휴지통속에 있는 emp 테이블을 밖으로 복원하는 명령어 

          flashback   table   emp   to  before   drop;

         emp 테이블에 걸려있는 인덱스 이름 확인하기

          select  index_name  
            from  user_indexes
           where  table_name='EMP';

       설명:  테이블이 휴지통속에 들어갔다 나왔더니 이름이 이상해져버렸습니다.
       그래서 이름을 원래 이름으로 변경해줘야하는 작업을 해줘야합니다.

       alter   index   "BIN$MOP9xOGNT0O+1OFbc4Cs9A==$0"
       rename   to   emp_sal;

       select   index_name 
         from  user_indexes
         where  table_name='EMP';
       
문제485.  우리반 테이블을 DROP 시키시오 !

SQL> drop  table  emp13;

테이블이 삭제되었습니다.

문제486.  휴지통속에서 emp13 테이블을 복원하세요 ! 

flashback   table   emp13   to  before   drop;

설명:  이 경우는 따로 commit 안해도 됩니다. 

■  102 실수로 지운 데이터 복구하기 4(FLASHBACK VERSION QUERY)

 특정 테이블의 데이터가 그동안 어떻게 변경되어왔는지 그 이력정보를 확인하는 기능
                                               ↓
                                insert, update, delete 

예제1.  KING 의 직업을 ANALYST 로 변경하세요 !

 update  emp
  set  job='ANALYST'
 where  ename='KING';
 
 commit; 

예제2.  KING 의 월급을 0 으로 변경하시오 !

 update  emp
  set  sal = 0
  where  ename='KING';

 commit;

예제3.  KING 의 데이터를 지우시오 !

delete  from  emp
  where  ename='KING';

commit;

예제4.  그동안 emp 테이블의 KING 의 데이터가 어떻게 변경이 되어왔는지
          그 이력정보를 확인하시오 ! 책 262  페이지 

select  systimestamp from dual; 

21/05/03 16:16:30

select  ename, sal, job, versions_operation
  from   emp  
  versions   between  timestamp 
               to_timestamp('21/05/03 16:10:30', 'RR/MM/DD HH24:MI:SS')  
               and  maxvalue
   where  ename='KING'
   order  by  versions_starttime  nulls  first; 

설명:  U 가 update 문,  D 가 delete 입니다. 

문제487.  KING 의 데이터를 원래의 데이터로 복구시키시오 !  
            ( emp 테이블을 원래의 데이터로 되돌리시오 )

alter  table  emp  enable   row   movement;

flashback  table  emp  to  timestamp 
  to_timestamp('21/05/03 16:10:30', 'RR/MM/DD HH24:MI:SS');  

select  ename, sal, job
 from  emp
 where ename='KING';

commit; 


■  103 실수로 지운 데이터 복구하기 5(FLASHBACK TRANSACTION QUERY)

  그동안 특정테이블에 어떠한 작업들이 일어났는지 그 DML문을 다시 거꾸로
  되돌리는 DML 문장이 출력되는 쿼리문 입니다. 

45분까지 쉬세요 ~~

문제488.  (오늘의 마지막 문제)   전국에서 교통사고가 가장 많이 일어나는 지역은
            어디인가?

5시 신호보냈습니다. 
6시 신호보냈습니다. 

■  104 데이터의 품질 높이기 1(PRIMARY KEY)

 제약(constraint) 이 필요한 이유 ?

 데이터 분석을 할때 데이터 정제 작업에 거의 80% 이상을 사용한다. 
 데이터 정제 작업이 상당한 노가가여서 인내를 가지 작업을 해야하는데
 이 작업이 코딩을 잘하면 쉽고 재밌게 할 수 있다. 

 근본적으로 데이터를 처음에 입력 받을때 부터 잘 정제해서 입력받으면
 나중에 정제 작업의 시간을 줄일 수가 있다. 

 예: 우리반 테이블 텔레콤 데이터중에서 skt,  SK,  sk  이렇게 입력되어있는
     데이터를 가지고 통신사별 집계결과를 출력할 때 SQL 이 복잡해져버릴 수 밖에
     없었습니다. 

* 제약의 종류 5가지 

 1. primary key -->  중복된 데이터와 null 값이 입력되지 못하게 하는 제약
 2. unique       -->  중복된 데이터를 입력하지 못하게 하는 제약
 3.  not  null   -->   null 값을 입력하지 못하게 하는 제약 
 4.  check      -->  사용자가 정의한 데이터만 허용하겠금 하는 제약
 5. foreign  key --> 참조하는 컬럼에 거는 제약

■ primary  key 제약 생성 예제 

 " 중복된 데이터와 null 값을 입력하지 못하게 하는 제약 "

예제1.  테이블 생성시 제약을 걸면서 생성하는 방법 

         create   table    emp20
         (  empno    number(10)   constraint   emp20_empno_pk  primary  key,
            ename    varchar2(20) );

문제489.  아래의 테이블을 생성하고  deptno 에 primary key 제약을 걸어서 생성하시오

  테이블명:  dept900
  컬럼명  :   deptno
                loc
                dname 

create  table  dept900
(  deptno     number(10)    constraint   dept900_deptno_pk  primary  key,
   loc          varchar2(20),
   dname     varchar2(20) ) ;

문제490.  dept900 테이블에 어떠한 제약이 있는지 확인하시오 !

select   table_name, constraint_name, constraint_type
  from   user_constraints
  where  table_name='DEPT900';

문제491.  dept 테이블의 deptno, loc, dname 의 모든 데이터를 dept900 테이블에
            입력하시오 !

 insert  into  dept900(deptno, loc,  dname)
 select  deptno, loc, dname
   from  dept; 

문제492.  dept900 테이블에 아래의 데이터를 입력하시오 !

 deptno :  60
 dname :   hr
 loc      :  seoul

insert   into  dept900 (deptno, dname, loc)
  values( 60, 'hr', 'seoul');

문제493.  아래의 데이터를 dept900 테이블에 입력해보시오 !

 deptno : 10
 dname  :  aaaa
  loc      :  bbbb   

insert  into  dept900(deptno, dname, loc)
  values( 10, 'aaaa', 'bbbb');

45분까지 쉬세요 ~

drop  table  dept800;

create  table  dept800
( deptno    number(10)   primary  key,
  loc    varchar2(10),
 dname  varchar2(10) );

select  table_name, constraint_name, constraint_type
  from  user_constraints
  where  table_name='DEPT800';

 update  (  select   e.ename,  e.loc  as  emp_loc,  d.loc  as dept_loc
                 from  emp  e, dept  d
                where  e.deptno = d.deptno)
 set   emp_loc = dept_loc;

* 제약을 거는 방법 2가지

1. table 을 생성할 때 제약을 거는 방법
2.  만들어진 테이블에 제약을 거는 방법 

예제:
1. emp 테이블과 dept 테이블을 다시 생성하는 스크립트를 수행하세요 ~

2. dept 테이블에 deptno 에 primary key 제약을 걸어봅니다. 

 alter  table  dept
     add   constraint  dept_deptno_pk   primary   key(deptno);

 select   table_name, constraint_name, constraint_type
   from  user_constraints
   where  table_name='DEPT';

문제494. 사원 테이블에  사원번호에 Primary key 제약을 거시오 !

alter  table   emp
   add   constraint   emp_empno_pk   primary   key(empno);

select   table_name,  constraint_name,  constraint_type
   from   user_constraints
   where  table_name='EMP';
 
■  105 데이터의 품질 높이기 2(UNIQUE)

 중복된 데이터를 허용하지 않게 하는 제약

예제1.   1.  테이블 생성할 때 제약을 걸면서 생성하는 방법

 create  table   dept701
  (  deptno     number(10),
     loc          varchar2(20)   constraint   dept701_loc_un  unique,
     dname     varchar2(20) );

 insert   into  dept701 (deptno, loc, dname)
  select  deptno, loc, dname
   from  dept; 

 commit;

insert   into  dept701(deptno, loc, dname)
  values(10, 'aaaa', 'bbbb') ;

insert  into  dept701(deptno, loc, dname)
 values(20, 'DALLAS', 'cccc') ;

2.  만들어진 테이블에 제약을 거는 방법 

dept  테이블에 loc 에 unique 제약을 건다. 

alter   table   dept
  add    constraint   dept_loc_un  unique(loc);

문제495.   우리반 테이블에 이름에 unique 제약을 거시오 !


* 제약을 삭제하는 방법
 
 select  constraint_name
   from   user_constraints
   where  table_name='EMP13';

 alter   table   emp13
  drop   constraint   emp13_ename_un; 

 select  constraint_name
   from   user_constraints
   where  table_name='EMP13';

문제496.  emp 테이블에 empno 에 걸린 primary  key 제약을 삭제하시오 !

 select   table_name, constraint_name,  constraint_type
   from   user_constraints
   where  table_name='EMP';

 alter   table   emp
   drop  constraint   emp_empno_pk; 

 select   table_name, constraint_name,  constraint_type
   from   user_constraints
   where  table_name='EMP';

■  106 데이터의 품질 높이기 3(NOT NULL)

  null 값을 입력하지 못하게 하는 제약 

  null 값 데이터 --->  결측치 

   데이터 분석시 데이터 전처리시에 반드시 확인해야하는 2가지 사항 ? 

   1.  결측치
   2.  이상치 

예제:    create   table    emp407
           (  empno      number(10)   constraint  emp407_empno_nn   not  null,
              ename      varchar2(10) ); 

문제497.  emp497 테이블에 empno 에 null 값이 입력되지 않는것을 확인하시오 !


* 만들어진 테이블에 not  null 제약 걸기 

 dept 테이블에  dname 에 not  null 제약을 거시오 !

 alter    table  dept 
   modify   dname  constraint   dept_dname_nn  not  null; 

select   table_name,  constraint_name,  constraint_type
  from   user_constraints
  where  table_name='DEPT';

문제498.  우리반 테이블에  이메일 컬럼에 NOT NULL 제약을 거시오 !

 alter   table   emp13
  modify   email   constraint   emp13_email_nn   not  null; 

설명:  5가지 제약중에 primary key, unique, foreign key , check 는 add 로 
        제약을 추가하고 not null 제약만 modify 로 제약을 추가합니다. 

문제499.  eryn 의 이메일을 null 값으로 변경하시오 !

update  emp13
  set  email = null
  where ename='eryn'; 

문제500.  우리반 테이블에 이메일 컬럼에 걸린 not  null 제약을 삭제하시오 !

alter   table   emp13
  drop   constraint   emp13_email_nn;  

■  107 데이터의 품질 높이기 4(CHECK)

  제약을 거는 사용자가 허용한 데이터만 입력 또는 수정되겠금 하는 제약 

예제1.  emp 테이블에 deptno 에는 부서번호가 10, 20, 30번만 허용하겠금 제약을 
          거시오 !

 alter   table   emp
   add    constraint   emp_deptno_ck   check ( deptno in (10,20,30)  ); 

문제501.  우리반 테이블에 통신사(telecom) 에 체크제약을 거는데 통신사가 sk, lg, kt,
             cj  통신사만 입력 또는 수정되겠금 체크제약을 거시오 !

update   emp13
 set  telecom='sk'
 where ename='erin';

alter  table   emp13
   add   constraint   emp13_telecom_ck  check( telecom in ('sk', 'lg', 'kt','cj')  );



 점심시간 검사 : B 반은 라인검사, A반은 카페에 올려서 검사받으세요 ~~

문제502.  우리반 테이블에  이메일에 check 제약을 거는데  이메일을 입력하거나 
             수정할때  @ 이 없으면 입력 또는 수정되지 않도록 check 제약을 
             거세요 ~

alter  table  emp13
  add   constraint    emp13_email_ck   check( email  like  '%@%'  );

문제503.  sam 의 이메일을  아무거나 @ 없이 수정해보시오 !

update  emp13
  set  email='aaaaa'
  where  ename='sam';

문제504.  우리반 테이블의 이메일에 걸려있는 check 제약을 삭제하시오 !

alter   table   emp13
  drop    constraint  emp13_email_ck;  

문제505. 우리반 테이블의 이메일에 check 제약을 거는데 @ 과  . 이 없으면
            이메일이 입력 또는 수정되지 않도록 하시오 !

 eafaaf@daum.net 

alter  table   emp13
  add   constraint   emp13_email_ck   check( email   like  '%@%.%'  );

update  emp13
 set  email='aaaa@daumnet'
 where ename='sam';

■  108 데이터의 품질 높이기 5(FOREIGN KEY)

  참조 하는 컬럼에 거는 제약 

1.  emp 와 dept 테이블의 데이터를 재구성합니다. 

2.  dept 테이블의 deptno 에 primary  key 제약을 겁니다.

   alter   table   dept 
      add   constraint   dept_deptno_pk   primary   key(deptno);

3.  emp 테이블의 deptno 에 foreign  key 제약을 걸면서 dept 테이블의 deptno를
    참조하겠다라고 합니다. 

   alter   table   emp
      add   constraint   emp_deptno_fk  foreign   key(deptno)
             references   dept(deptno);

         사원                                            부모  

문제506.   KING 의 부서번호를 70번으로 변경하시오 !

 update   emp
   set  deptno = 70
   where  ename='KING';

문제507.  아래의 데이터를 사원 테이블에 입력하시오 !

 사원번호 :  3929
 사원이름 :  JACK
 월급      : 3000
 부서번호 : 90  

insert   into  emp(empno, ename, sal, deptno)
  values( 3929, 'JACK', 3000, 90 );

문제508.  부서 테이블의  부서번호 10번을 지우시오
 
delete   from   dept
 where  deptno = 10; 

설명:  사원 테이블과 부서테이블이 서로 부모 자식관계에 있으면 부모 테이블의 
        데이터를 함부로 지울 수도 없습니다.  사원 테이블에 10번 부서번호가 있으면
        부서 테이블의 10번을 지울수 없습니다. 


만약에 위와 같이 부모자식 관계를 형성해놓지 않게 되면 사원 테이블에
엉뚱한 부서번호가 계속 입력될 수 밖에 없게 됩니다.
그러면 emp 테이블과 dept 테이블을 조인할 때 outer  join 을 쓰지 않으면
정확한 조인결과를 볼 수 없게 됩니다. 

문제509.  부서 테이블의 deptno 에 걸린 primary  key 제약을 삭제하시오 !

alter   table  emp
  drop  constraint   emp_deptno_fk ; 

alter   table    dept
 drop   constraint   dept_deptno_pk ;

※ 설명: 자식 테이블의 제약을 먼저 삭제를 해야 부모 테이블의 제약을 삭제할 수 
           있습니다.

■  109 WITH절 사용하기 1(WITH ~ AS)

  하나의 SQL 에서 비슷한 SELECT 문장이 반복되어서 나타나는 경우
  with 절로 작성하면 좋은 성능을 보이는 SQL 

예제1:   select   e1.*,  e2.*
       from   (  select    deptno, sum(sal)  as  sumsal
                       from  emp
                       where  deptno != 20
                       group  by deptno )   e1,
                ( select  deptno, sum(sal)  as  sumsal
                       from  emp
                       where deptno != 30                   45분까지 쉬세요 ~~
                       group  by deptno )  e2
        where  e1. deptno = e2.deptno ;




explain   plan  for 
with    emp500    as   (  select  deptno as  부서번호, sum(sal)   as  토탈월급
                                            from   emp
                                            group   by  deptno ) 
select   e1.*,  e2.*
   from    emp500   e1,  emp500  e2
   where   e1.부서번호 = e2.부서번호
   and  e1.부서번호 != 20 
   and  e2.부서번호 != 30; 

select * from  table(dbms_xplan.display);

예제2.   1부터 10까지의 숫자가 들어있는 테이블을 emp22로 생성하시오 !

create  table   emp22
( empno     number(10) );

insert   into   emp22  values( 1 );
insert   into   emp22  values( 2 );
insert   into   emp22  values( 3 );
insert   into   emp22  values( 4 );
insert   into   emp22  values( 5 );
insert   into   emp22  values( 6 );
insert   into   emp22  values( 7 );
insert   into   emp22  values( 8 );
insert   into   emp22  values( 9 );
insert   into   emp22  values( 10 );
commit;

예제3.  위의 emp22 테이블을 이용해서 구구단 2단을 출력하시오 

 2 x 1 = 2
 2 x 2 = 4
 2 x 3 = 6 
   :  
 2 x 9 = 18 

 select '2 x ' || empno || ' = ' || 2*empno  as  "2단"
  from emp22;

예제4.  emp22 와 같은 테이블을 create table 로 만들지 않고 with 절로
         임시 테이블을 생성해서 구구단 2단을 출력해봅니다.

with   emp22   as   ( select    level    as   empno
                              from    dual
                              connect   by   level  <= 10  ) 
select  '2 x ' || empno || ' = ' || empno*2
  from   emp22;

문제510. 오늘 점심시간 문제를 with 절로 구현하시오 !
            (20세기의 매월 1일의 날짜를 저장하는 임시 테이블을 emp30 이라는 이름으로
             구성하시오 )

with   emp30   as  
         (select  add_months( to_date('1900/01/01','RRRR/MM/DD'), level-1 ) as a_date
               from   dual 
               connect   by  level <= 1200 )
select  count(*)
  from emp30
  where  to_char( a_date, 'day')='일요일';

문제511.  1부터 10000까지의 숫자를 담는  test_10000 이라는 임시테이블을 
              with 절로 구현하고  test_10000 테이블의 숫자중에  짝수인 숫자의
               갯수를 출력하시오 !

view 는 데이터를 저장하지 않습니다. 
with 절은 데이터를 저장합니다. disk 에 임시테이블로 저장합니다. 

with  test_10000  as   ( select   level  as  num
                                 from   dual
                                 connect   by   level <= 10000 )
select  count(*)
 from  test_10000
 where  mod(num, 2) = 0;

설명: with 절은  데이터를 임시로  디스크에 저장합니다. 그래서 대용량 데이터를
       저장하고 검색하는 경우에 성능상 유리한 SQL 입니다.

 45분까지 쉬세요 ~~

문제512.  with 절을 이용해서 2단부터 9단까지 구구단 출력하시오 !
             ( 아래의 2개의 테이블을 임시 테이블로 만들어줘야합니다.)
                 1. 숫자 2부터 9까지 출력하는 임시 테이블(gugu_2_9)
                 2. 숫자 1부터 10까지 출력하는 임시테이블( gugu_10)

with   gugu_2_9  as   (  select  level +1  as   num1
                                 from   dual
                                 connect   by  level <= 8 ),
        gugu_10    as   ( select   level   as   num2
                                  from   dual
                                  connect   by  level <= 10 )
 select   num1 || ' x ' || num2   || ' = ' || num1*num2
   from  gugu_2_9,  gugu_10;

정리:  1. with 절을 이용하면 쿼리문을 작성할때 대용량 데이터를 메모리에 올리지않고
            넉넉한 디스크에 저장할 수 있습니다. 

        2.  간단하게 테스트를 해야하는 경우 굳이 테이블을 생성하지 않아도
            with 절로 임시 테이블을 만들어서 테스트를 할 수 있습니다.

        3.  시간이 오래 걸리는 같은 SQL 이 반복되는 쿼리문의 경우 WITH 절을 이용하면
            성능을 높일 수 있습니다. 

문제513.  주사위의 눈을 담는 임시테이블을 WITH 절로 만드는데 주사위 3개를
             임시테이블 3개로 각각 만들고서 3개의 주사위를 던지시오 

with  dice1  as  (select   level  as   num1
                         from  dual
                         connect  by  level <= 6 ),
       dice2  as  (select  level  as  num2
                         from  dual
                         connect  by  level <= 6 ),
       dice3  as  (select  level  as  num3
                         from  dual
                         connect  by  level <= 6 )
select  (select  num1  
             from  dice1  
             order  by  dbms_random.value  fetch first row only)  dice_num1,
         (select  num2 
             from  dice2  
             order  by  dbms_random.value  fetch first row only)  dice_num2,
          (select  num3  
             from  dice3  
             order  by  dbms_random.value  fetch first row only)  dice_num3
 from  dual;


with dice_1 as (select level as dice1 from dual connect by level<=6),
      dice_2 as (select level as dice2 from dual connect by level<=6),
      dice_3 as (select level as dice3 from dual connect by level<=6)
   select dice1,dice2,dice3
    from dice_1 , dice_2, dice_3
    order by dbms_random.value fetch first rows only;

문제514.   주사위 3개를 동시에 던져서 주사위 3개의 눈의 합이 10이되는 확률은 ? 

with dice_1 as (select level as dice1 from dual connect by level<=6),
      dice_2 as (select level as dice2 from dual connect by level<=6),
      dice_3 as (select level as dice3 from dual connect by level<=6)
select  count(*)
 from  (  
  select dice1,dice2,dice3
    from dice_1 , dice_2, dice_3
    order by dbms_random.value fetch first rows only
          )
 where  dice1 + dice2 + dice3 = 10;

with dice1 as (Select round ( dbms_random.value(0.5, 6.5) ) as d1
                 from dual),
     dice2 as (Select round ( dbms_random.value(0.5, 6.5) ) as d2
                from dual),
     dice3 as (Select round ( dbms_random.value(0.5, 6.5) ) as d3
                from dual)
select count(*)/10000 *100
from   ( select d1, d2, d3 from dice1, dice2, dice3 
            connect by level <= 10000)
where (d1 + d2 + d3) = 10 ;

문제515.  주사위 1개와 동전 1개를 동시에 던져서 주사위의 눈이 5이 나오고 
             동전이 앞면이 나오는 확률을 구하시오 !

카페에 답 올리고  45분까지 쉬세요 ~~~


문제516. (오늘의 마지막 문제)  아래의 2개의 주머니에 각각 색깔이 다른 3개의 공이
            들어있다.  첫번째 주머니와 두번째 주머니에서 동시에 공을 뽑았을때
            첫번째 주머니에서 빨간공이 나오고 두번째 주머니에서 노란공이 나올 확률은
            어떻게 되는가 ?               
 

* 정규식 함수 

  Regular expression (정규 표현식) 

정규 표현식 코드는 오라클 뿐만 아니라 다른 언어에서도 공통적으로 표현식 코드이다.

오라클 10.1 버젼부터 정규표현식을 지원합니다.
오라클 데이터 베이스는 정규표현식의 POSIX 연산자를 지원합니다. 
POSIX 는 Portable Operationin System Interface 의 약자로 
시스템간 호환성을 위해 미리 정의된 인터페이스를 의미합니다. 
posix 연산자에는 기본 연산자, 앵커, 수량사, 서브표현식, 역참조, 문자리스트
등이 있습니다. 

1. 기본 연산자

예제1:   이름에 EN 또는 IN 을 포함하고 있는 사원들의 이름과 월급을
           출력하시오 !

select  ename, sal
  from  emp
  where  ename  like  '%EN%'  or  ename  like '%IN%';

예제2.  정규식 함수로 위의 SQL을 다시 작성하시오 !

select  ename, sal
  from emp
  where  regexp_like( ename, 'EN|IN');

문제517.  우리반 테이블에서 전공이 통계, 컴퓨터, 경영 인 학생들의 이름과 
             전공을 출력하시오 !

select  ename, major
  from  emp13
  where  regexp_like( major , '통계|컴퓨터|경영');

* 정규식 함수 5개

1. regexp_like
2. regexp_substr
3. regexp_count
4. regexp_instr
5. regexp_replace 


■ 앵커 연산자

          연산자        영문        단일행 방식      다중행 방식
           ^            carrot         문자열의 시작   행의 시작
           $             dollar         문자열의 끝      행의 끝

예제1. emp 테이블에서 이름이 S 로 시작하고 끝철자가 T 또는 H 로 끝나는 
        사원들의 이름을 출력하시오 !

select  ename
   from  emp
   where  substr(ename, 1, 1 )='S'  and  substr(ename,-1, 1) in ('T','H');

select  ename
  from  emp
  where  regexp_like( ename, '^S(.)+T|H$');

문제518.  우리반 테이블에서 이름의 첫철자들이 ja 로 시작하고 
             끝철자가 s 또는 t 로 끝나는 사원들의 이름을 출력하시오 !

select  ename
   from   emp13
   where  regexp_like( ename, '^ja(.)+s|t$');

■ regexp_count 함수 

  특정 단어나 철자가 몇 번 반복되어서 출력되는지 확인하는 함수

    count ----------------------->  regexp_count
                   업그레이드 

예제1.  아래의 긴 문장에서 gtc 가 몇번 나오는가 ?

SELECT REGEXP_COUNT(
   'ccacctttccctccactcctcacgttctcacctgtaaagcgtccctccctcatccccatgcccccttaccctgcag
ggtagagtaggctagaaaccagagagctccaagctccatctgtggagaggtgccatccttgggctgcagagagaggag
aatttgccccaaagctgcctgcagagcttcaccacccttagtctcacaaagccttgagttcatagcatttcttgagtt
ttcaccctgcccagcaggacactgcagcacccaaagggcttcccaggagtagggttgccctcaagaggctcttgggtc
tgatggccacatcctggaattgttttcaagttgatggtcacagccctgaggcatgtaggggcgtggggatgcgctctg
ctctgctctcctctcctgaacccctgaaccctctggctaccccagagcacttagagccag',   'gtc') AS Count
FROM dual;

45분까지 쉬세요 ~~  

select ename
 from emp13
 where regexp_like(lower(ename),'^ja(.)+s|t$');

문제519.  regexp_count 를 이용해서  스티브잡스 연설문에서 was 라는 단어가 
             몇번 나오는지 카운트 하시오 !

select  sum(cnt)
 from  (
 select  speech_text, regexp_count(lower(speech_text), 'was')  cnt
     from   speech
         ) ;

■ regexp_replace 함수 

 replace 함수 --------------------------> regexp_replace
                         업그레이드 

예제1.  이름과 월급을 출력하는데 월급을 출력할 때에 replace 함수를 
          이용해서 숫자 0 을 * 로 출력하시오!

select   ename,  replace(sal, 0,  '*')
    from  emp;

예제2. 이름과 월급을 출력하는데 월급을 출력할 때에 숫자 0~3까지를 
         * 로 출력하시오 ! 

select  ename,  regexp_replace( sal, '[0-8]', '*')
   from  emp;

문제520. 우리반 테이블의 생일정보를 암호화 하기 위해서 
            생일을  **/**/** 으로 출력되게 하시오 !

select  ename, regexp_replace( birth, '[0-9]', '*')
  from  emp13;

문제521.  생일정보를 암호화한  우리반 테이블을 emp13_b 로 생성하시오

create   table  emp13_b
as
   select  e13.*,  regexp_replace( birth, '[0-9]', '*')  as  birth2
        from   emp13  e13;

select *  from  emp13_b;

■ regexp_instr  함수

  instr 함수 -------------------------------->  regexp_instr 함수
                       업그레이드 


   문자 클래스            설명              동일 
    [:digit:]                  숫자              [0-9]
    [:lower:]              소문자              [a-z]
    [:upper:]              대문자             [A-Z]
    [:alpha:]               영문자            [a-zA-z]
    [:alnum:]             영문자와 숫자    [0-9a-zA-Z]
    [:blank:]               공백문자 
    [:space:]               공간문자 ( space, enter, tab )
    [:punct:]               구두점 기호 
    [:xdigit:]               16진수 

예제1.  instr 을 이용해서 우리반 테이블의 이메일에서 @ 이 몇번째 위치하는지
          출력하시오 !

select  email,  instr( email, '@')
  from   emp13;

예제2.  위의 결과를 regexp_instr 로 출력하시오 !
          이메일에서 알파벳으로 시작하지 않는 철자의 위치를 출력하시오 !

select   email,  regexp_instr( email,  '[^[:alpha:]]' )
  from  emp13; 

문제522.  스티븐 잡스 연설문에서 숫자가 있는지 알아내시오 !

select   speech_text,  regexp_instr( speech_text, '[      ]' )
   from   speech; 

45분까지 쉬세요 ! 

■ regexp_substr  함수 

  substr  함수 --------------------------->  regexp_substr 함수 
                        업그레이드 

예제1.   select  regexp_substr('kkddababckkdd', '(ab)+c')  
                from  dual;

설명:  ab 가 여러번 나오면서 끝에가 c 이것을 잘라내라 ~

예제2.   kkddababckkdd  문자열에서 abc 만 잘라내시오 ~

select   substr('kkddababckkdd', 7, 3 )
  from   dual;

select   regexp_substr('kkddababckkdd', 'abc')
  from  dual;

예제3.  우리나라 라디오 음악 프로그램에서 사람들이 신청하는 신청곡중
          어느 아티스트의 노래가 많은지 알기 위해서 웹 스크롤링한 데이터를
           가져다가 테이블로 구성하시오 !

김용신의_그대와_여는_아침_선곡표_7월부터_9월까지.txt

create  table  music
(  m_name    varchar2(100)  );


 7. Green Green Grass Of Home - Tom Jones 

select  regexp_substr( m_name, '[^-]+', 1, 2 )
  from  music
  where  m_name  is  not  null; 

 REGEXP_SUBSTR(대상문자열, 정규표현식, 시작위치, 찾은순번). 


위의 문법은 오후수업때 설명하겠습니다. 

점심시간 문제 검사받겠습니다.   A 반은 라인 검사, B반은 카페에 올리세요 ~

문제523.  100일 정도되는 날짜의 가장 많이 라디오에 나왔던 가수가 누구인지
              1위부터 10위까지 출력하시오 !

create  view   sing_list
as
select  trim(regexp_substr( m_name, '[^-]+', 1, 2 ))  가수명
  from  music
  where  m_name  is  not  null;

select  가수명, cnt, dense_rank() over (order by cnt desc) 순위
   from  (
  select 가수명, count(*) cnt
    from sing_list
    where  가수명 is not null
    group  by 가수명
           );
  
 2시 신호 보냈습니다.

■ 110 WITH절 사용하기 2(SUBQUERY FACTORING) 책 280 페이지

* with 절의 장점 

1. 대용량 데이터를 조회하는 하나의 SQL 안에 반복적으로 사용되는 쿼리문이
   존재할 때 성능을 높이기 위한 방법으로 with 절을 사용하면 유용합니다.

2. 간단한 테스트를 할 때 굳이 테이블을 생성하지 않고 with 절로 임시테이블을
   만들어서 테스트를 진행해 볼 수 있습니다. 

3.  subquery factoring 기능을 구현 할 수 있습니다.  예제_110-2.txt

예제1.  부서번호, 부서번호별 토탈월급을 출력하시오 !

select  deptno, sum(sal)
 from  emp
 group  by deptno;

예제2.  직업과 직업별 토탈월급을 출력하시오 !

select  job,  sum(sal)
 from  emp
 group  by  job; 

예제3.  직업별 토탈월급들에 대한 평균값에 3000 을 더해서 출력하시오 ! 

select  avg( sum(sal) ) + 3000
 from  emp
 group  by  job; 

예제4. 부서번호, 부서번호별 토탈월급을 출력하는데 직업별 토탈월급들의 평균값에 3000
         을 더한 값보다 더 큰 부서번호별 토탈월급들만 출력하시오 !

SELECT DEPTNO, SUM(SAL) 
  FROM ( SELECT JOB, SUM(SAL)  토탈
              FROM   EMP
              GROUP BY JOB )  as JOB_SUMSAL ,
         ( SELECT DEPTNO, SUM(SAL) 토탈
              FROM EMP 
              GROUP BY DEPTNO
              HAVING SUM(SAL) > ( SELECT AVG(토탈) + 3000
                                                FROM JOB_SUMSAL )
            ) as DEPTNO_SUMSAL ;

위의 문제는 from 절의 서브쿼리로는 불가능합니다. 
해결방법은 with 절을 이용하면 됩니다.  예제110.txt 

WITH JOB_SUMSAL AS ( SELECT JOB, SUM(SAL)  토탈
                                    FROM   EMP
                                    GROUP BY JOB ) ,
   DEPTNO_SUMSAL AS ( SELECT DEPTNO, SUM(SAL) 토탈
                                       FROM EMP 
                                       GROUP BY DEPTNO
                                       HAVING SUM(SAL) > ( SELECT AVG(토탈) + 3000
                                                                         FROM JOB_SUMSAL )
                               )  
SELECT DEPTNO, 토탈
  FROM DEPTNO_SUMSAL ;

설명: with절을 from 절의 서브쿼리와는 다르게 임시 테이블을 생성하기 때문에
       임시 테이블명을 이용해서 with 절 내에서 임시 테이블을 구성하는게
       가능합니다. 

문제524.  직업, 직업별 평균월급을 출력하는데 직업별 평균월급이
              DALLAS 의 평균월급에 더 큰것만 출력하세요. 

select  job, avg(sal)
  from   emp
  group  by  job
  having   avg(sal)  > ( select   avg(sal)
                                 from  emp  e,  dept   d
                                 where  e.deptno = d.deptno 
                                   and  d.loc='DALLAS' );

문제525.  아래의 SQL을 with 절로 변경하시오 !

select  job, avg(sal)
  from   emp
  group  by  job
  having   avg(sal)  > ( select   avg(sum(sal)) * 0.5
                                 from  emp  e,  dept   d
                                 where  e.deptno = d.deptno 
                                  group  by  e.deptno
                                  having   sum(sal) > ( select   avg( avg(sal) ) 
                                                                 from  emp
                                                                 group  by   job  )   
                              );  

답:

explain plan for 
with job_avgsal as ( select job, avg(sal)  평균
                                    from   emp
                                    group by job ) ,
   deptno_sumsal as ( select  avg(sum(sal))   값
                                    from  emp  e,  dept   d
                                    where  e.deptno = d.deptno 
                                   group  by  e.deptno
                               )  
select  job, 평균
  from  job_avgsal
  where   평균 > ( select  값 * 0.5
                           from  deptno_sumsal
                           where   값 > ( select   avg(평균)
                                                 from   job_avgsal ) 
                       ); 

select * from  table(dbms_xplan.display);

설명:  실행계획에  TEMP TABLE TRANSFORMATION   이라고 출력이 되면
         with 절 내에서 임시 테이블을 생성했다는 것입니다.  그런데 임시테이블이 만들어
         질려면  임시 테이블을 만들기 위한 temp 디스크가 넉넉히 있어야하고 
         그리고 이 디스크를 여러 유져들이 동시에 사용하게 되면 즉 with 절을
         여러 유져들이 동시에 수행하게 되면 다같이 느려집니다. 
         그럴때는 다시 temp table 을 구성하지 않는 서브쿼리문으로만 구현해야
         합니다. 


explain plan for 
with job_avgsal as ( select /*+  materialize  */  job, avg(sal)  평균
                                    from   emp
                                    group by job ) ,
   deptno_sumsal as ( select  avg(sum(sal))   값
                                    from  emp  e,  dept   d
                                    where  e.deptno = d.deptno 
                                   group  by  e.deptno
                               )  
select  job, 평균
  from  job_avgsal
  where   평균 > ( select  값 * 0.5
                           from  deptno_sumsal
                           where   값 > ( select   avg(평균)
                                                 from   job_avgsal ) 
                       ); 

select * from  table(dbms_xplan.display);
 

* with 절 사용시 중요 힌트 2가지 ? 

  1.  /*+ inline */    :    임시 테이블 구성하지 않고 서브쿼리로 수행해라 ~
  2. /*+ materialize */   :  서브쿼리로 실행하지 말고 임시테이블을 구성해서 실행해라 ~


■ 111 SQL로 알고리즘 문제 풀기 1(구구단 2단 출력)

예제1.  with  loop_table  as   ( select  level  as  num
                                           from   dual
                                           connect  by  level  <= 9  )
         select   '2' ||  '  x  ' ||  num  || ' = ' ||  2 * num  as  "2단"
            from   loop_table; 

문제526.  위의 문제를 다시 수행하는데 2단 밑에 3단도 출력하세요 

with  loop_table  as   ( select  level  as  num
                                           from   dual
                                           connect  by  level  <= 9  )
         select   '2' ||  '  x  ' ||  num  || ' = ' ||  2 * num  as  "2단과 3단"
            from   loop_table
         union  all
         select   '3' ||  '  x  ' ||  num  || ' = ' ||  3 * num 
            from   loop_table 
            order  by n;

설명:  union all 에서 컬럼명은 맨 위쪽의 컬럼명으로만 출력됩니다. 

■ 예제112 SQL로 알고리즘 문제 풀기 2(구구단 1단 ~ 9단 출력)

예제.  with  loop_table1  as  ( select  level  as  num1
                                         from  dual
                                         connect  by  level <= 9 ),
                loop_table2  as   ( select   level + 1 as  num2
                                          from  dual
                                          connect  by  level  <= 8 )
      select   num1 || ' x ' ||  num2 || ' = ' || num1*num2  as "구구단"
        from   loop_table1,  loop_table2;

문제527. 위의 결과에서 짝수단만 출력하세요 ~~

with  loop_table1  as  ( select  level  as  num1
                                         from  dual
                                         connect  by  level <= 9 ),
                loop_table2  as   ( select   level + 1 as  num2
                                          from  dual
                                          connect  by  level  <= 8 )
      select   a.num1 || ' x ' ||  b.num2 || ' = ' || a.num1*b.num2  as "구구단"
        from   loop_table1  a,  loop_table2 b
        where   mod( a.num1, 2 ) = 0;

45분까지 쉬세요 ~~

■  113 SQL로 알고리즘 문제 풀기 3(직각삼각형 출력)

예제1.  with  loop_table  as  ( select  level   as   num
                                          from   dual 
                                          connect  by  level <= 8 )
           select  lpad('★',   num,  '★')  as  star
              from   loop_table;

설명:  ★ 을 출력하는데 전체 num 의 숫자만큼 자리를 잡고 나머지 공간에 ★ 을 채워넣어라

lpad('★',   1 ,  '★')   --> ★ 하나를 출력하는데 전체 1자리 잡고 나머지 공간이 없다.
lpad('★',   2 ,  '★')   --> ★ 하나를 출력하는데 전체 2자리 잡고 나머지 공간에 ★ 을 채워넣어라 
lpad('★',   3 ,  '★')   --> ★ 하나를 출력하는데 전체 3자리 잡고 나머지 공간에 ★ 을 채워넣어라 
       : 

 select  ename, lpad(sal, 10, '*')
    from  emp;

설명:  월급을 출력하는데 전체 10자리 잡고 월급을 출력하고 나머지 공간에 * 을 채워
        넣어라 ~

문제528.  숫자를 물어보게하고 숫자를 입력하면 해당 숫자만큼 ★ 이 그려지게 하시오 !

숫자를 입력하세요 ~   5

★
★★
★★★
★★★★
★★★★★

답: 

accept  p_num  prompt  '숫자를 입력하세요 ~ '

with  loop_table  as  ( select  level   as   num
                                          from   dual 
                                          connect  by  level <= &p_num )
           select  lpad('★',   num,  '★')  as  star
              from   loop_table;

문제529.  이번에는 아래와 같이 거꾸로 출력되게하시오 !

숫자를 입력하세요 ~  5

★★★★★
★★★★
★★★
★★
★

답:
undefine  p_num  
accept  p_num  prompt  '숫자를 입력하세요 ~ '

with  loop_table  as  ( select  level   as   num
                                          from   dual 
                                          connect  by  level <= &&p_num )
           select  lpad('★',  &p_num-num+1,  '★')  as  star
              from   loop_table;

다른 방법:
accept  p_num  prompt  '숫자를 입력하세요 ~ '

with  loop_table  as  ( select  level   as   num
                                          from   dual 
                                          connect  by  level <= &p_num )
           select  lpad('★',   num,  '★')  as  star
              from   loop_table
              order  by  star  desc;

■ 예제. 114 SQL로 알고리즘 문제 풀기 4(삼각형 출력)

예제: with  loop_table  as   (select  level  as  num
                                         from  dual
                                         connect  by  level <= 8 )
       select   lpad('  ', 10-num, '  ')  ||  lpad('★',  num, '★')  as  "삼각형"
            from  loop_table;

         ★
        ★★
       ★★★
      ★★★★
     ★★★★★
    ★★★★★★
   ★★★★★★★
  ★★★★★★★★

with  loop_table  as   (select  level  as  num
                                         from  dual
                                         connect  by  level <= 8 )
       select  lpad('★',  num, '★')
            from  loop_table;

문제530.  숫자를 물어보게하고 입력된 숫자만큼 삼각형의 밑변의 갯수가 출력되게하시오

숫자를 입력하세요 ~  5
    
         ★
        ★★ 
       ★★★
      ★★★★
     ★★★★★

 accept   p_num  prompt   ' 숫자를 입력하세요 ~ '  
 with  loop_table  as   (select  level  as  num
                                         from  dual
                                         connect  by  level <= &&p_num )
       select   lpad('  ', &p_num - num, '  ')  ||  lpad('★',  num, '★')  as  "삼각형"
            from  loop_table;

문제531. (오늘의 마지막 문제) 이번에는 삼각형이 거꾸로 출력되게하시오 !

숫자를 입력하세요 ~   5

    ★★★★★
     ★★★★
      ★★★
       ★★
        ★

자습 또는 스터디 하시면 됩니다.  질문있으면 자유롭게 질문하세요 !

5시 신호보냈습니다. 
6시 신호보냈습니다. 

■ 115 SQL로 알고리즘 문제 풀기 5(마름모 출력)

예제:
undefine p_num
ACCEPT p_num prompt '숫자입력 : '

SELECT lpad( ' ',  &p_num-level, ' ') || rpad('★',  level, '★')  as star
  FROM dual
  CONNECT BY level <&p_num+1
UNION ALL
SELECT lpad( ' ',  level, ' ') || rpad('★',  (&p_num)-level, '★')  as star
  FROM dual
  CONNECT BY level < &p_num ;

■  116 SQL로 알고리즘 문제 풀기 6(사각형 출력)

예제1.

undefine p_n1
undefine p_n2
ACCEPT p_n1 prompt '가로숫자를 입력하세요~';
ACCEPT p_n2 prompt '세로숫자를 입력하세요~';

WITH LOOP_TABLE as (SELECT LEVEL as NUM
                                 FROM DUAL
                                 CONNECT BY LEVEL <= &p_n2 )
SELECT LPAD('★',  &p_n1, '★') as STAR
  FROM LOOP_TABLE;

문제532.  숫자를 한번만 물어보게하고 정사각형이 출력되게하시오 !

가로와 세로의 길이를 입력하세요 ~   5

★★★★★
★★★★★
★★★★★
★★★★★
★★★★★

답:

undefine p_n1
ACCEPT p_n1 prompt '가로와 세로의 숫자를 입력하세요~';

WITH LOOP_TABLE as (SELECT LEVEL as NUM
                                 FROM DUAL
                                 CONNECT BY LEVEL <= &p_n1 )
SELECT LPAD('★',  &p_n1, '★') as STAR
  FROM LOOP_TABLE;

■  117 SQL로 알고리즘 문제 풀기 7(1부터 10까지 숫자의 합)

예제.  select  sum(level)
           from  dual
           connect  by  level <= 10;

문제533. 1부터 10까지의 짝수 숫자의 합은 ? 

select  sum(level)
  from  dual
  where  mod(level, 2) = 0
  connect  by  level <= 10;

explain  plan  for 
select  level
  from  dual
  where  mod(level, 2) = 0
  connect  by  level <= 10;

select * from table(dbms_xplan.display);

■ 118 SQL로 알고리즘 문제 풀기 8(1부터 10까지 숫자의 곱)

예제.  select   round( exp( sum(ln(level))) )  곱
            from  dual
            connect  by  level <= 10;

문제534.  1부터 10까지의 홀수 숫자의 곱은 ?

select  round(exp(sum(ln(level))))  곱
   from  dual
   where   mod(level, 2) = 1
   connect  by  level <= 10;

■ 119 SQL로 알고리즘 문제 풀기 9(1부터 10까지 짝수만 출력)

예제1.  select  listagg( level, ',')  as 짝수
              from   dual
              where  mod( level, 2) = 0
              connect  by  level <= 10;

문제535.  위의 결과를 아래와 같이 출력하시오 !

2 x 4 x 6 x 8 x 10

select  listagg( level, ' x ')  as 짝수
              from   dual
              where  mod( level, 2) = 0
              connect  by  level <= 10;

문제536.  아래의 결과를 출력하시오 !

2 x 4 x 6 x 8 x 10 =  ?  

45분까지 쉬세요 ~~

select listagg(level, 'X')||'='||round(exp(sum(ln(level))))
from dual
where mod(level,2) =0
connect by level <= 10;

문제537.  사원 테이블에서 짝수행만 출력하시오 !

힌트:  select *
          from  table명
          where  mod( 컬럼, 2 ) = 0 ;
                             ↑
        숫자 1~14번까지 출력되는 행들이 있다면 쉽게 할 수 있습니다. 

create  table  emp_1
as
  select   rownum  as  id,  e.*
    from  emp    e;

select * from  emp_1;

select  *
  from  emp_1
  where  mod(id,2)=0;

■ 120 SQL로 알고리즘 문제 풀기 10(1부터 10까지 소수만 출력)

책 299 페이지: 소수란?  1과 자기자신의 수로만 나눌 수 있는 수
                                                                 ↓
                                   나눠서 나눈 나머지 값이 0 이 되는 수 
  
     1     1
     2     2
     3     3
     4     4
     5     5
     6     6
     7     7

 
with  loop_table  as  ( select  level  as  num
                                  from  dual
                                  connect  by  level <= 10 )
select   a1.num,  count(*)
   from   loop_table   a1,  loop_table   a2
   where   mod(a1.num, a2.num) = 0
   group  by  a1.num
   having  count(*) = 2;

문제538.  숫자를 물어보게하고  숫자를 입력하면 해당 숫자가 소수인지 
             소수가 아닌지 인지 출력되게하시오

힌트:  sum(decode( mod(&숫자, level), 0, 1)) 값이 2개면 소수이다 

숫자를 입력하세요 ~  7                 카페에 답을 올려주세요 !

 소수입니다.

숫자를 입력하세요 ~  6

 소수가 아닙니다. 

accept   숫자  prompt  "숫자를 이력하세요 ~"

select  decode( sum(decode( mod(&숫자, level), 0, 1)) , 2, '소수입니다.', '소수가 아닙니다')
   from  dual
   connect  by  level  <= &숫자;

설명:  소수는 1 또는 자기 자신으로 나누어지는 수이므로 
        sum(decode( mod(&숫자, level), 0, 1)) 가 2이면 소수이고 아니면 소수가 아닌것입니다

 45분까지 쉬세요 ~~~~


■ 121 SQL로 알고리즘 문제 풀기 11(최대 공약수)

accept   p_n1  prompt  '첫번째 숫자를 입력하세요 ~'
accept   p_n2  prompt  '두번째 숫자를 입력하세요 ~'

with  num_table   as  ( select  &p_n1  as  num1,  &p_n2  as  num2
                                 from  dual  )
select  max(level)  as "최대공약수"
  from   num_table
  where  mod(num1, level) = 0
     and  mod(num2, level) = 0
  connect by  level <= num2;

문제539.  약수를 출력하세요 ~
               ↓
 어떤 수나 식을 나누어 나머지가 없이 떨어지는 수나 식을 일컫는 말 

 숫자를 입력하세요 ~    24

   1, 2, 3, 4, 6, 8, 12, 24

 카페에 답글로 달아주세요 ~~

accept  num1  prompt  '숫자를 입력하세요 ~' 

select   listagg(level,',')
 from  dual
 where  mod( &num1, level) = 0
 connect  by  level <= & num1;

문제540. (구글 입사문제)   완전수를 출력하시오 !
                                     ↓
 자기 자신을 제외한 모든 양의 약수들의 합이 자기 자신이 되는 자연수를
 완전수라고 합니다. 
 예를 들면 6과 28은 완전수 입니다. 

 6 = 1 + 2 + 3       <--- 1, 2, 3 은 6의 약수 입니다.
 28 = 1 + 2 + 4 + 7 + 14     <--- 1,2,4,7,14 는 28의 약수입니다.

숫자를 입력하세요 ~   28       답글로 올려주세요 ~~

1 + 2 + 4 + 7 + 14 = 28    점심시간 문제 또는 지금 540번을 검사받으세요 ~
B 은 라인검사, A반은 카페에 올려주세요 ~  

■ 122 SQL로 알고리즘 문제 풀기 12(최소 공배수)

예제1.  

accept  p_n1  prompt  '첫번째 숫자를 입력하세요 ~'
accept  p_n2  prompt  '두번째 숫자를 입력하세요 ~'

with  num_d  as  ( select  &p_n1  as  num1, &p_n2  as  num2
                              from   dual )
select   num1,  num2,
         ( num1/max(level) ) * ( num2/max(level) ) * max(level) as "최소공배수"
   from   num_d
   where  mod(num1, level) = 0  and mod(num2, level) = 0
   connect  by  level <= num2;

문제540.  위의 코드를 수정해서 아래와 같이 출력되게하시오 !

첫번째 숫자를 입력하세요 ~  16
두번째 숫자를 입력하세요 ~  24

최소공배수는  8 x 3 x 2 = 48 입니다. 

undefine p_n1
undefine p_n2
accept  p_n1  prompt  '첫번째 숫자를 입력하세요 ~'
accept  p_n2  prompt  '두번째 숫자를 입력하세요 ~'

with  num_d  as  ( select  &p_n1  as  num1, &p_n2  as  num2
                              from   dual )
select   '최소공배수는 ' || max(level) || ' x ' || ( num1/max(level) ) || ' x ' ||
             ( num2/max(level) ) || ' = ' ||
         ( num1/max(level) ) * ( num2/max(level) ) * max(level) || 
          '입니다'  as "최소공배수"
   from   num_d
   where  mod(num1, level) = 0  and mod(num2, level) = 0
   connect  by  level <= num2;

■  123 SQL로 알고리즘 문제 풀기 13(피타고라스의 정리)

예제1.  
accept  num1  prompt  '밑변의 길이를 입력하세요 ~' 
accept  num2  prompt  '높이를 입력하세요 ~'
accept  num3  prompt  '빗변의 길이를 입력하세요 ~'

select  case  when  ( power(&num1,2) + power(&num2,2) ) = power(&num3,2)
                 then  '직각 삼각형이 맞습니다.'
                 else   '직각 삼각형이 아닙니다.'    end  as  "피타고라스의 정리"
  from  dual;

문제541.  똑같이 3개의 숫자를 물어보게하고 정삼각형이 맞습니다. 또는 아닙니다가
             출력되게하세요 ~

왼쪽 빗변의 길이를 입력하세요 ~     5
오른쪽 빗변의 길이를 입력하세요 ~  5
밑변의 길이를 입력하세요 ~           5

 정삼각형이 맞습니다  


accept  num1  prompt  '왼쪽 빗변의 길이를 입력하세요  ~' 
accept  num2  prompt  '오른쪽 빗변의 길이를 입력하세요 ~'
accept  num3  prompt  '밑변의 길이를 입력하세요 ~'

select  case  when &num1=&num2 and &num2=&num3  then '정삼각형 입니다.'
          else '정삼각형이 아닙니다'  end  as  "정삼각형 여부"
  from   dual;

■ 124 SQL로 알고리즘 문제 풀기 14(몬테카를로 알고리즘)

예제1.  몬테카를로 알고리즘으로 원주율을 알아내기 

SELECT SUM(CASE WHEN (POWER(NUM1,2) + POWER(NUM2,2)) <= 1  THEN 1
                ELSE 0 END ) / 100000 * 4 as "원주율"
 FROM ( 
           SELECT DBMS_RANDOM.VALUE(0,1) AS NUM1,
                  DBMS_RANDOM.VALUE(0,1) AS NUM2
             FROM DUAL
             CONNECT BY LEVEL < 100000
        ) ; 


 정사각형의 넓이 : 빨간색 부채꼴의 넓이 = 정사각형안에 들어가는 점의 갯수 : 부채꼴안에
                                                                                                     들어가는 점
                                                                                                      의 갯

문제542.   아래의 테이블을 생성하고 결과가 난수가 많을 수록 원주율에 근사해지는지
              를 출력하시오 !

create  table   num_test
(  num1    number(10) );
insert  into   num_test   values(100);
insert  into   num_test   values(1000);
insert  into   num_test   values(10000);
insert  into   num_test   values(100000);
commit;
결과:              난수          원주율             
                    100            3.01929
                    1000          3.03939
                    10000        3. 10203
                    100000      3.149039

create  table   num_test2
(  num1    number(10),
   num2    number(10,2) );

accept  p_num  prompt  '숫자를 입력하세요 ~'
insert   into  num_test2
SELECT  &p_num , SUM(CASE WHEN (POWER(NUM1,2) + POWER(NUM2,2)) <= 1  THEN 1
                ELSE 0 END ) / &p_num * 4 as "원주율"
 FROM ( 
           SELECT DBMS_RANDOM.VALUE(0,1) AS NUM1,
                  DBMS_RANDOM.VALUE(0,1) AS NUM2
             FROM DUAL
             CONNECT BY LEVEL < &p_num
        ) ; 

■  125 SQL로 알고리즘 문제 풀기 15(오일러 상수 자연상수 구하기)

문제543.  오일러의 자연상수를 출력하는 SQL 을 작성하시오 !

답:   with  loop_table  as  ( select  level  as  num
                                        from   dual
                                        connect   by  level  <= 10000 
                                  )
       select  result  
            from  (  select  num,  power((1+1/num), num)  as  result
                              from   loop_table
                    )
             where  num = 10000;
    
* SQL 의 종류 5가지 

1.  Query문 :  select 문의 6가지절 
2.  DML 문 :   insert, update, delete, merge
3.  DDL 문 :  create, alter, drop, truncate, rename
4.  DCL 문 :  grant, revoke
5.  TCL 문  :  commit, rollback, savepoint 

■ DCL문 ( Data control language)

 권한을 부여하거나 취소하는 명령어 

grant  :  권한 부여
revoke :  권한 취소

예제1. 내가 접속한 유져가 누구인지 확인하는 방법

 show user

예제2.  새로운 유져를 생성하기 (도스창에서 수행하세요)

 1. 오라클의 최고권한자로 접속하기

C:\Users\YYS>sqlplus "/ as sysdba"

2. 유져 생성하기 

create  user  c##smith
identified  by tiger;

3. database 에 접속할 수 있는 권한을 부여하기 

grant  connect  to  c##smith;

4. 도스창에서 c##smith 로 접속하기 

SQL> c##smith/tiger

5. 다시 sys 유져로 접속합니다. 

SQL>  connect  / as sysdba 

6. c##smith 에서  dba 권한을 부여합니다.

SQL>  grant  dba  to  c##smith; 

7. c##smith 로 접속해서  emp 와 dept 테이블을 생성합니다.

SQL> connect  c##smith/tiger

alter session set nls_Date_format='RR/MM/DD';
drop table emp;
drop table dept;


CREATE TABLE DEPT
       (DEPTNO number(10),
        DNAME VARCHAR2(14),
        LOC VARCHAR2(13) );


INSERT INTO DEPT VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO DEPT VALUES (20, 'RESEARCH',   'DALLAS');
INSERT INTO DEPT VALUES (30, 'SALES',      'CHICAGO');
INSERT INTO DEPT VALUES (40, 'OPERATIONS', 'BOSTON');

CREATE TABLE EMP (
 EMPNO               NUMBER(4) NOT NULL,
 ENAME               VARCHAR2(10),
 JOB                 VARCHAR2(9),
 MGR                 NUMBER(4) ,
 HIREDATE            DATE,
 SAL                 NUMBER(7,2),
 COMM                NUMBER(7,2),
 DEPTNO              NUMBER(2) );


INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,'81-11-17',5000,NULL,10);
INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,'81-05-01',2850,NULL,30);
INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,'81-05-09',2450,NULL,10);
INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,'81-04-01',2975,NULL,20);
INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,'81-09-10',1250,1400,30);
INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,'81-02-11',1600,300,30);
INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,'81-08-21',1500,0,30);
INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,'81-12-11',950,NULL,30);
INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,'81-02-23',1250,500,30);
INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,'81-12-11',3000,NULL,20);
INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,'80-12-09',800,NULL,20);
INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,'82-12-22',3000,NULL,20);
INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,'83-01-15',1100,NULL,20);
INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,'82-01-11',1300,NULL,10);


commit;

8. 다시  sys 유져로 접속해서 c##smith 에게 주었던 권한을 취소합니다.

SQL> connect / as sysdba

SQL> revoke  dba  from  c##smith; 

문제544. (SQL마지막 문제) 빨간공 2개, 파란공 3개가 들어있는 주머니에서
            1개의 공을 꺼내어 색을 확인하고 다시 넣는 시행을 5번 반복하여
            빨간공이 나올때 마다 100원, 파란공이 나올때마다 200원씩 상금을 
            받는다고 할때 받는 총 금액의 기뎃값을 구하세요 !

       다음주 파이썬 수업을 위해서 파이썬 아나콘다 설치를 하겠습니다.

  45분까지 쉬세요 ~~~~  

공지 :  1. SQL 시험은 다음주 화요일에 공지.(시험날짜, 문제는)
         2. 웹으로 시험을 볼 예정 (실습을 할 수 있고 객관식으로 시험)
         3. 60점이 과락이 다시 재시험 (15문제~20문제)
         
 b조: 수학스터디 준비
 5시 신호 보냈습니다.
 6시 신호 보냈습니다.

 SQL 마지막 문제 꼭 올리고 파이썬 아나콘다 설치해놓으세요 ~~~~



















                                                    

























































































 






























































 





  
  
  
  
  
  






























 
          





































































































































































































   




























































































































































































































































































 


































































  








































































































 





















                                             











































